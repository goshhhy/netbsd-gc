/* This file is auto-generated by opth-gen.awk.  */

#ifndef OPTIONS_H
#define OPTIONS_H

#include "flag-types.h"

#include "config/rs6000/rs6000-opts.h"

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)
#ifndef GENERATOR_FILE
#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS)
struct GTY(()) gcc_options
#else
struct gcc_options
#endif
{
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT rs6000_builtin_mask;
#else
  HOST_WIDE_INT x_rs6000_builtin_mask;
#define rs6000_builtin_mask global_options.x_rs6000_builtin_mask
#endif
#ifdef GENERATOR_FILE
extern enum processor_type rs6000_cpu;
#else
  enum processor_type x_rs6000_cpu;
#define rs6000_cpu global_options.x_rs6000_cpu
#endif
#ifdef GENERATOR_FILE
extern enum rs6000_abi rs6000_current_abi;
#else
  enum rs6000_abi x_rs6000_current_abi;
#define rs6000_current_abi global_options.x_rs6000_current_abi
#endif
#ifdef GENERATOR_FILE
extern enum rs6000_cmodel rs6000_current_cmodel;
#else
  enum rs6000_cmodel x_rs6000_current_cmodel;
#define rs6000_current_cmodel global_options.x_rs6000_current_cmodel
#endif
#ifdef GENERATOR_FILE
extern enum rs6000_dependence_cost rs6000_sched_costly_dep;
#else
  enum rs6000_dependence_cost x_rs6000_sched_costly_dep;
#define rs6000_sched_costly_dep global_options.x_rs6000_sched_costly_dep
#endif
#ifdef GENERATOR_FILE
extern enum rs6000_nop_insertion rs6000_sched_insert_nops;
#else
  enum rs6000_nop_insertion x_rs6000_sched_insert_nops;
#define rs6000_sched_insert_nops global_options.x_rs6000_sched_insert_nops
#endif
#ifdef GENERATOR_FILE
extern enum rs6000_sdata_type rs6000_sdata;
#else
  enum rs6000_sdata_type x_rs6000_sdata;
#define rs6000_sdata global_options.x_rs6000_sdata
#endif
#ifdef GENERATOR_FILE
extern enum rs6000_traceback_type rs6000_traceback;
#else
  enum rs6000_traceback_type x_rs6000_traceback;
#define rs6000_traceback global_options.x_rs6000_traceback
#endif
#ifdef GENERATOR_FILE
extern int rs6000_tls_size;
#else
  int x_rs6000_tls_size;
#define rs6000_tls_size global_options.x_rs6000_tls_size
#endif
#ifdef GENERATOR_FILE
extern unsigned char can_override_loop_align;
#else
  unsigned char x_can_override_loop_align;
#define can_override_loop_align global_options.x_can_override_loop_align
#endif
#ifdef GENERATOR_FILE
extern unsigned char rs6000_align_branch_targets;
#else
  unsigned char x_rs6000_align_branch_targets;
#define rs6000_align_branch_targets global_options.x_rs6000_align_branch_targets
#endif
#ifdef GENERATOR_FILE
extern unsigned char rs6000_alignment_flags;
#else
  unsigned char x_rs6000_alignment_flags;
#define rs6000_alignment_flags global_options.x_rs6000_alignment_flags
#endif
#ifdef GENERATOR_FILE
extern unsigned char rs6000_always_hint;
#else
  unsigned char x_rs6000_always_hint;
#define rs6000_always_hint global_options.x_rs6000_always_hint
#endif
#ifdef GENERATOR_FILE
extern unsigned char rs6000_sched_groups;
#else
  unsigned char x_rs6000_sched_groups;
#define rs6000_sched_groups global_options.x_rs6000_sched_groups
#endif
#ifdef GENERATOR_FILE
extern unsigned int rs6000_debug;
#else
  unsigned int x_rs6000_debug;
#define rs6000_debug global_options.x_rs6000_debug
#endif
#ifdef GENERATOR_FILE
extern unsigned int rs6000_recip_control;
#else
  unsigned int x_rs6000_recip_control;
#define rs6000_recip_control global_options.x_rs6000_recip_control
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT frame_larger_than_size;
#else
  HOST_WIDE_INT x_frame_larger_than_size;
#define frame_larger_than_size global_options.x_frame_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT larger_than_size;
#else
  HOST_WIDE_INT x_larger_than_size;
#define larger_than_size global_options.x_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT rs6000_isa_flags;
#else
  HOST_WIDE_INT x_rs6000_isa_flags;
#define rs6000_isa_flags global_options.x_rs6000_isa_flags
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT rs6000_isa_flags_explicit;
#else
  HOST_WIDE_INT x_rs6000_isa_flags_explicit;
#define rs6000_isa_flags_explicit global_options.x_rs6000_isa_flags_explicit
#endif
#ifdef GENERATOR_FILE
extern bool dump_base_name_prefixed;
#else
  bool x_dump_base_name_prefixed;
#define dump_base_name_prefixed global_options.x_dump_base_name_prefixed
#endif
#ifdef GENERATOR_FILE
extern bool exit_after_options;
#else
  bool x_exit_after_options;
#define exit_after_options global_options.x_exit_after_options
#endif
#ifdef GENERATOR_FILE
extern bool flag_disable_hsa;
#else
  bool x_flag_disable_hsa;
#define flag_disable_hsa global_options.x_flag_disable_hsa
#endif
#ifdef GENERATOR_FILE
extern bool flag_dump_all_passed;
#else
  bool x_flag_dump_all_passed;
#define flag_dump_all_passed global_options.x_flag_dump_all_passed
#endif
#ifdef GENERATOR_FILE
extern bool flag_opts_finished;
#else
  bool x_flag_opts_finished;
#define flag_opts_finished global_options.x_flag_opts_finished
#endif
#ifdef GENERATOR_FILE
extern bool flag_stack_usage_info;
#else
  bool x_flag_stack_usage_info;
#define flag_stack_usage_info global_options.x_flag_stack_usage_info
#endif
#ifdef GENERATOR_FILE
extern bool flag_warn_unused_result;
#else
  bool x_flag_warn_unused_result;
#define flag_warn_unused_result global_options.x_flag_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern bool in_lto_p;
#else
  bool x_in_lto_p;
#define in_lto_p global_options.x_in_lto_p
#endif
#ifdef GENERATOR_FILE
extern bool use_gnu_debug_info_extensions;
#else
  bool x_use_gnu_debug_info_extensions;
#define use_gnu_debug_info_extensions global_options.x_use_gnu_debug_info_extensions
#endif
#ifdef GENERATOR_FILE
extern bool warn_frame_larger_than;
#else
  bool x_warn_frame_larger_than;
#define warn_frame_larger_than global_options.x_warn_frame_larger_than
#endif
#ifdef GENERATOR_FILE
extern bool warn_larger_than;
#else
  bool x_warn_larger_than;
#define warn_larger_than global_options.x_warn_larger_than
#endif
#ifdef GENERATOR_FILE
extern char *help_enum_printed;
#else
  char * x_help_enum_printed;
#define help_enum_printed global_options.x_help_enum_printed
#endif
#ifdef GENERATOR_FILE
extern char *help_printed;
#else
  char * x_help_printed;
#define help_printed global_options.x_help_printed
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_basename;
#else
  const char * x_main_input_basename;
#define main_input_basename global_options.x_main_input_basename
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_filename;
#else
  const char * x_main_input_filename;
#define main_input_filename global_options.x_main_input_filename
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_levels debug_info_level;
#else
  enum debug_info_levels x_debug_info_level;
#define debug_info_level global_options.x_debug_info_level
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_type write_symbols;
#else
  enum debug_info_type x_write_symbols;
#define write_symbols global_options.x_write_symbols
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_generic global_options.x_debug_struct_generic
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_ordinary global_options.x_debug_struct_ordinary
#endif
#ifdef GENERATOR_FILE
extern enum dwarf_gnat_encodings gnat_encodings;
#else
  enum dwarf_gnat_encodings x_gnat_encodings;
#define gnat_encodings global_options.x_gnat_encodings
#endif
#ifdef GENERATOR_FILE
extern enum stack_check_type flag_stack_check;
#else
  enum stack_check_type x_flag_stack_check;
#define flag_stack_check global_options.x_flag_stack_check
#endif
#ifdef GENERATOR_FILE
extern int *param_values;
#else
  int * x_param_values;
#define param_values global_options.x_param_values
#endif
#ifdef GENERATOR_FILE
extern int flag_complex_method;
#else
  int x_flag_complex_method;
#define flag_complex_method global_options.x_flag_complex_method
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_asm;
#else
  int x_flag_debug_asm;
#define flag_debug_asm global_options.x_flag_debug_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_rtl_in_asm;
#else
  int x_flag_dump_rtl_in_asm;
#define flag_dump_rtl_in_asm global_options.x_flag_dump_rtl_in_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_evaluation_order;
#else
  int x_flag_evaluation_order;
#define flag_evaluation_order global_options.x_flag_evaluation_order
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_aux_info;
#else
  int x_flag_gen_aux_info;
#define flag_gen_aux_info global_options.x_flag_gen_aux_info
#endif
#ifdef GENERATOR_FILE
extern int flag_generate_lto;
#else
  int x_flag_generate_lto;
#define flag_generate_lto global_options.x_flag_generate_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_generate_offload;
#else
  int x_flag_generate_offload;
#define flag_generate_offload global_options.x_flag_generate_offload
#endif
#ifdef GENERATOR_FILE
extern int flag_incremental_link;
#else
  int x_flag_incremental_link;
#define flag_incremental_link global_options.x_flag_incremental_link
#endif
#ifdef GENERATOR_FILE
extern int flag_print_asm_name;
#else
  int x_flag_print_asm_name;
#define flag_print_asm_name global_options.x_flag_print_asm_name
#endif
#ifdef GENERATOR_FILE
extern int flag_shlib;
#else
  int x_flag_shlib;
#define flag_shlib global_options.x_flag_shlib
#endif
#ifdef GENERATOR_FILE
extern int main_input_baselength;
#else
  int x_main_input_baselength;
#define main_input_baselength global_options.x_main_input_baselength
#endif
#ifdef GENERATOR_FILE
extern int optimize;
#else
  int x_optimize;
#define optimize global_options.x_optimize
#endif
#ifdef GENERATOR_FILE
extern int optimize_debug;
#else
  int x_optimize_debug;
#define optimize_debug global_options.x_optimize_debug
#endif
#ifdef GENERATOR_FILE
extern int optimize_fast;
#else
  int x_optimize_fast;
#define optimize_fast global_options.x_optimize_fast
#endif
#ifdef GENERATOR_FILE
extern int optimize_size;
#else
  int x_optimize_size;
#define optimize_size global_options.x_optimize_size
#endif
#ifdef GENERATOR_FILE
extern int rtl_dump_and_exit;
#else
  int x_rtl_dump_and_exit;
#define rtl_dump_and_exit global_options.x_rtl_dump_and_exit
#endif
#ifdef GENERATOR_FILE
extern int target_flags;
#else
  int x_target_flags;
#define target_flags global_options.x_target_flags
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize;
#else
  unsigned int x_flag_sanitize;
#define flag_sanitize global_options.x_flag_sanitize
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize_recover;
#else
  unsigned int x_flag_sanitize_recover;
#define flag_sanitize_recover global_options.x_flag_sanitize_recover
#endif
#ifdef GENERATOR_FILE
extern unsigned int help_columns;
#else
  unsigned int x_help_columns;
#define help_columns global_options.x_help_columns
#endif
#ifdef GENERATOR_FILE
extern unsigned int initial_max_fld_align;
#else
  unsigned int x_initial_max_fld_align;
#define initial_max_fld_align global_options.x_initial_max_fld_align
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_files;
#else
  void * x_flag_instrument_functions_exclude_files;
#define flag_instrument_functions_exclude_files global_options.x_flag_instrument_functions_exclude_files
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_functions;
#else
  void * x_flag_instrument_functions_exclude_functions;
#define flag_instrument_functions_exclude_functions global_options.x_flag_instrument_functions_exclude_functions
#endif
#ifdef GENERATOR_FILE
extern int help_flag;
#else
  int x_help_flag;
#define help_flag global_options.x_help_flag
#endif
#ifdef GENERATOR_FILE
extern int no_sysroot_suffix;
#else
  int x_no_sysroot_suffix;
#define no_sysroot_suffix global_options.x_no_sysroot_suffix
#endif
#ifdef GENERATOR_FILE
extern int flag_preprocess_only;
#else
  int x_flag_preprocess_only;
#define flag_preprocess_only global_options.x_flag_preprocess_only
#endif
#ifdef GENERATOR_FILE
extern int g_switch_value;
#else
  int x_g_switch_value;
#define g_switch_value global_options.x_g_switch_value
#endif
#ifdef GENERATOR_FILE
extern int warn_abi;
#else
  int x_warn_abi;
#define warn_abi global_options.x_warn_abi
#endif
#ifdef GENERATOR_FILE
extern int warn_abi_tag;
#else
  int x_warn_abi_tag;
#define warn_abi_tag global_options.x_warn_abi_tag
#endif
#ifdef GENERATOR_FILE
extern int warn_address;
#else
  int x_warn_address;
#define warn_address global_options.x_warn_address
#endif
#ifdef GENERATOR_FILE
extern int warn_aggregate_return;
#else
  int x_warn_aggregate_return;
#define warn_aggregate_return global_options.x_warn_aggregate_return
#endif
#ifdef GENERATOR_FILE
extern int warn_aggressive_loop_optimizations;
#else
  int x_warn_aggressive_loop_optimizations;
#define warn_aggressive_loop_optimizations global_options.x_warn_aggressive_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int warn_array_bounds;
#else
  int x_warn_array_bounds;
#define warn_array_bounds global_options.x_warn_array_bounds
#endif
#ifdef GENERATOR_FILE
extern int warn_assign_intercept;
#else
  int x_warn_assign_intercept;
#define warn_assign_intercept global_options.x_warn_assign_intercept
#endif
#ifdef GENERATOR_FILE
extern int warn_attributes;
#else
  int x_warn_attributes;
#define warn_attributes global_options.x_warn_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_bad_function_cast;
#else
  int x_warn_bad_function_cast;
#define warn_bad_function_cast global_options.x_warn_bad_function_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_bool_compare;
#else
  int x_warn_bool_compare;
#define warn_bool_compare global_options.x_warn_bool_compare
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_builtin_macro_redefined;
#else
  int x_cpp_warn_builtin_macro_redefined;
#define cpp_warn_builtin_macro_redefined global_options.x_cpp_warn_builtin_macro_redefined
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx_compat;
#else
  int x_warn_cxx_compat;
#define warn_cxx_compat global_options.x_warn_cxx_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx11_compat;
#else
  int x_warn_cxx11_compat;
#define warn_cxx11_compat global_options.x_warn_cxx11_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx14_compat;
#else
  int x_warn_cxx14_compat;
#define warn_cxx14_compat global_options.x_warn_cxx14_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_c90_c99_compat;
#else
  int x_warn_c90_c99_compat;
#define warn_c90_c99_compat global_options.x_warn_c90_c99_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_c99_c11_compat;
#else
  int x_warn_c99_c11_compat;
#define warn_c99_c11_compat global_options.x_warn_c99_c11_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_align;
#else
  int x_warn_cast_align;
#define warn_cast_align global_options.x_warn_cast_align
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_qual;
#else
  int x_warn_cast_qual;
#define warn_cast_qual global_options.x_warn_cast_qual
#endif
#ifdef GENERATOR_FILE
extern int warn_char_subscripts;
#else
  int x_warn_char_subscripts;
#define warn_char_subscripts global_options.x_warn_char_subscripts
#endif
#ifdef GENERATOR_FILE
extern int warn_chkp;
#else
  int x_warn_chkp;
#define warn_chkp global_options.x_warn_chkp
#endif
#ifdef GENERATOR_FILE
extern int warn_clobbered;
#else
  int x_warn_clobbered;
#define warn_clobbered global_options.x_warn_clobbered
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_comment;
#else
  int x_cpp_warn_comment;
#define cpp_warn_comment global_options.x_cpp_warn_comment
#endif
#ifdef GENERATOR_FILE
extern int warn_conditionally_supported;
#else
  int x_warn_conditionally_supported;
#define warn_conditionally_supported global_options.x_warn_conditionally_supported
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion;
#else
  int x_warn_conversion;
#define warn_conversion global_options.x_warn_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion_null;
#else
  int x_warn_conversion_null;
#define warn_conversion_null global_options.x_warn_conversion_null
#endif
#ifdef GENERATOR_FILE
extern int warn_coverage_mismatch;
#else
  int x_warn_coverage_mismatch;
#define warn_coverage_mismatch global_options.x_warn_coverage_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_cpp;
#else
  int x_warn_cpp;
#define warn_cpp global_options.x_warn_cpp
#endif
#ifdef GENERATOR_FILE
extern int warn_ctor_dtor_privacy;
#else
  int x_warn_ctor_dtor_privacy;
#define warn_ctor_dtor_privacy global_options.x_warn_ctor_dtor_privacy
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_date_time;
#else
  int x_cpp_warn_date_time;
#define cpp_warn_date_time global_options.x_cpp_warn_date_time
#endif
#ifdef GENERATOR_FILE
extern int warn_declaration_after_statement;
#else
  int x_warn_declaration_after_statement;
#define warn_declaration_after_statement global_options.x_warn_declaration_after_statement
#endif
#ifdef GENERATOR_FILE
extern int warn_delete_incomplete;
#else
  int x_warn_delete_incomplete;
#define warn_delete_incomplete global_options.x_warn_delete_incomplete
#endif
#ifdef GENERATOR_FILE
extern int warn_delnonvdtor;
#else
  int x_warn_delnonvdtor;
#define warn_delnonvdtor global_options.x_warn_delnonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated;
#else
  int x_warn_deprecated;
#define warn_deprecated global_options.x_warn_deprecated
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_decl;
#else
  int x_warn_deprecated_decl;
#define warn_deprecated_decl global_options.x_warn_deprecated_decl
#endif
#ifdef GENERATOR_FILE
extern int warn_designated_init;
#else
  int x_warn_designated_init;
#define warn_designated_init global_options.x_warn_designated_init
#endif
#ifdef GENERATOR_FILE
extern int warn_disabled_optimization;
#else
  int x_warn_disabled_optimization;
#define warn_disabled_optimization global_options.x_warn_disabled_optimization
#endif
#ifdef GENERATOR_FILE
extern int warn_discarded_array_qualifiers;
#else
  int x_warn_discarded_array_qualifiers;
#define warn_discarded_array_qualifiers global_options.x_warn_discarded_array_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_discarded_qualifiers;
#else
  int x_warn_discarded_qualifiers;
#define warn_discarded_qualifiers global_options.x_warn_discarded_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_div_by_zero;
#else
  int x_warn_div_by_zero;
#define warn_div_by_zero global_options.x_warn_div_by_zero
#endif
#ifdef GENERATOR_FILE
extern int warn_double_promotion;
#else
  int x_warn_double_promotion;
#define warn_double_promotion global_options.x_warn_double_promotion
#endif
#ifdef GENERATOR_FILE
extern int warn_duplicated_cond;
#else
  int x_warn_duplicated_cond;
#define warn_duplicated_cond global_options.x_warn_duplicated_cond
#endif
#ifdef GENERATOR_FILE
extern int warn_ecpp;
#else
  int x_warn_ecpp;
#define warn_ecpp global_options.x_warn_ecpp
#endif
#ifdef GENERATOR_FILE
extern int warn_empty_body;
#else
  int x_warn_empty_body;
#define warn_empty_body global_options.x_warn_empty_body
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_endif_labels;
#else
  int x_cpp_warn_endif_labels;
#define cpp_warn_endif_labels global_options.x_cpp_warn_endif_labels
#endif
#ifdef GENERATOR_FILE
extern int warn_enum_compare;
#else
  int x_warn_enum_compare;
#define warn_enum_compare global_options.x_warn_enum_compare
#endif
#ifdef GENERATOR_FILE
extern int warnings_are_errors;
#else
  int x_warnings_are_errors;
#define warnings_are_errors global_options.x_warnings_are_errors
#endif
#ifdef GENERATOR_FILE
extern int extra_warnings;
#else
  int x_extra_warnings;
#define extra_warnings global_options.x_extra_warnings
#endif
#ifdef GENERATOR_FILE
extern int flag_fatal_errors;
#else
  int x_flag_fatal_errors;
#define flag_fatal_errors global_options.x_flag_fatal_errors
#endif
#ifdef GENERATOR_FILE
extern int warn_float_conversion;
#else
  int x_warn_float_conversion;
#define warn_float_conversion global_options.x_warn_float_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_float_equal;
#else
  int x_warn_float_equal;
#define warn_float_equal global_options.x_warn_float_equal
#endif
#ifdef GENERATOR_FILE
extern int warn_format_contains_nul;
#else
  int x_warn_format_contains_nul;
#define warn_format_contains_nul global_options.x_warn_format_contains_nul
#endif
#ifdef GENERATOR_FILE
extern int warn_format_extra_args;
#else
  int x_warn_format_extra_args;
#define warn_format_extra_args global_options.x_warn_format_extra_args
#endif
#ifdef GENERATOR_FILE
extern int warn_format_nonliteral;
#else
  int x_warn_format_nonliteral;
#define warn_format_nonliteral global_options.x_warn_format_nonliteral
#endif
#ifdef GENERATOR_FILE
extern int warn_format_security;
#else
  int x_warn_format_security;
#define warn_format_security global_options.x_warn_format_security
#endif
#ifdef GENERATOR_FILE
extern int warn_format_signedness;
#else
  int x_warn_format_signedness;
#define warn_format_signedness global_options.x_warn_format_signedness
#endif
#ifdef GENERATOR_FILE
extern int warn_format_y2k;
#else
  int x_warn_format_y2k;
#define warn_format_y2k global_options.x_warn_format_y2k
#endif
#ifdef GENERATOR_FILE
extern int warn_format_zero_length;
#else
  int x_warn_format_zero_length;
#define warn_format_zero_length global_options.x_warn_format_zero_length
#endif
#ifdef GENERATOR_FILE
extern int warn_format;
#else
  int x_warn_format;
#define warn_format global_options.x_warn_format
#endif
#ifdef GENERATOR_FILE
extern int warn_frame_address;
#else
  int x_warn_frame_address;
#define warn_frame_address global_options.x_warn_frame_address
#endif
#ifdef GENERATOR_FILE
extern int warn_free_nonheap_object;
#else
  int x_warn_free_nonheap_object;
#define warn_free_nonheap_object global_options.x_warn_free_nonheap_object
#endif
#ifdef GENERATOR_FILE
extern int warn_hsa;
#else
  int x_warn_hsa;
#define warn_hsa global_options.x_warn_hsa
#endif
#ifdef GENERATOR_FILE
extern int warn_ignored_attributes;
#else
  int x_warn_ignored_attributes;
#define warn_ignored_attributes global_options.x_warn_ignored_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_ignored_qualifiers;
#else
  int x_warn_ignored_qualifiers;
#define warn_ignored_qualifiers global_options.x_warn_ignored_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit;
#else
  int x_warn_implicit;
#define warn_implicit global_options.x_warn_implicit
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_function_declaration;
#else
  int x_warn_implicit_function_declaration;
#define warn_implicit_function_declaration global_options.x_warn_implicit_function_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_int;
#else
  int x_warn_implicit_int;
#define warn_implicit_int global_options.x_warn_implicit_int
#endif
#ifdef GENERATOR_FILE
extern int warn_incompatible_pointer_types;
#else
  int x_warn_incompatible_pointer_types;
#define warn_incompatible_pointer_types global_options.x_warn_incompatible_pointer_types
#endif
#ifdef GENERATOR_FILE
extern int warn_inh_var_ctor;
#else
  int x_warn_inh_var_ctor;
#define warn_inh_var_ctor global_options.x_warn_inh_var_ctor
#endif
#ifdef GENERATOR_FILE
extern int warn_init_self;
#else
  int x_warn_init_self;
#define warn_init_self global_options.x_warn_init_self
#endif
#ifdef GENERATOR_FILE
extern int warn_inline;
#else
  int x_warn_inline;
#define warn_inline global_options.x_warn_inline
#endif
#ifdef GENERATOR_FILE
extern int warn_int_conversion;
#else
  int x_warn_int_conversion;
#define warn_int_conversion global_options.x_warn_int_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_int_to_pointer_cast;
#else
  int x_warn_int_to_pointer_cast;
#define warn_int_to_pointer_cast global_options.x_warn_int_to_pointer_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_memory_model;
#else
  int x_warn_invalid_memory_model;
#define warn_invalid_memory_model global_options.x_warn_invalid_memory_model
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_offsetof;
#else
  int x_warn_invalid_offsetof;
#define warn_invalid_offsetof global_options.x_warn_invalid_offsetof
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_invalid_pch;
#else
  int x_cpp_warn_invalid_pch;
#define cpp_warn_invalid_pch global_options.x_cpp_warn_invalid_pch
#endif
#ifdef GENERATOR_FILE
extern int warn_jump_misses_init;
#else
  int x_warn_jump_misses_init;
#define warn_jump_misses_init global_options.x_warn_jump_misses_init
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_literal_suffix;
#else
  int x_cpp_warn_literal_suffix;
#define cpp_warn_literal_suffix global_options.x_cpp_warn_literal_suffix
#endif
#ifdef GENERATOR_FILE
extern int warn_logical_not_paren;
#else
  int x_warn_logical_not_paren;
#define warn_logical_not_paren global_options.x_warn_logical_not_paren
#endif
#ifdef GENERATOR_FILE
extern int warn_logical_op;
#else
  int x_warn_logical_op;
#define warn_logical_op global_options.x_warn_logical_op
#endif
#ifdef GENERATOR_FILE
extern int warn_long_long;
#else
  int x_warn_long_long;
#define warn_long_long global_options.x_warn_long_long
#endif
#ifdef GENERATOR_FILE
extern int warn_lto_type_mismatch;
#else
  int x_warn_lto_type_mismatch;
#define warn_lto_type_mismatch global_options.x_warn_lto_type_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_main;
#else
  int x_warn_main;
#define warn_main global_options.x_warn_main
#endif
#ifdef GENERATOR_FILE
extern int warn_maybe_uninitialized;
#else
  int x_warn_maybe_uninitialized;
#define warn_maybe_uninitialized global_options.x_warn_maybe_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_memset_transposed_args;
#else
  int x_warn_memset_transposed_args;
#define warn_memset_transposed_args global_options.x_warn_memset_transposed_args
#endif
#ifdef GENERATOR_FILE
extern int warn_misleading_indentation;
#else
  int x_warn_misleading_indentation;
#define warn_misleading_indentation global_options.x_warn_misleading_indentation
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_braces;
#else
  int x_warn_missing_braces;
#define warn_missing_braces global_options.x_warn_missing_braces
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_declarations;
#else
  int x_warn_missing_declarations;
#define warn_missing_declarations global_options.x_warn_missing_declarations
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_field_initializers;
#else
  int x_warn_missing_field_initializers;
#define warn_missing_field_initializers global_options.x_warn_missing_field_initializers
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_missing_include_dirs;
#else
  int x_cpp_warn_missing_include_dirs;
#define cpp_warn_missing_include_dirs global_options.x_cpp_warn_missing_include_dirs
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_parameter_type;
#else
  int x_warn_missing_parameter_type;
#define warn_missing_parameter_type global_options.x_warn_missing_parameter_type
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_prototypes;
#else
  int x_warn_missing_prototypes;
#define warn_missing_prototypes global_options.x_warn_missing_prototypes
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_multichar;
#else
  int x_cpp_warn_multichar;
#define cpp_warn_multichar global_options.x_cpp_warn_multichar
#endif
#ifdef GENERATOR_FILE
extern int warn_multiple_inheritance;
#else
  int x_warn_multiple_inheritance;
#define warn_multiple_inheritance global_options.x_warn_multiple_inheritance
#endif
#ifdef GENERATOR_FILE
extern int warn_namespaces;
#else
  int x_warn_namespaces;
#define warn_namespaces global_options.x_warn_namespaces
#endif
#ifdef GENERATOR_FILE
extern int warn_narrowing;
#else
  int x_warn_narrowing;
#define warn_narrowing global_options.x_warn_narrowing
#endif
#ifdef GENERATOR_FILE
extern int warn_nested_externs;
#else
  int x_warn_nested_externs;
#define warn_nested_externs global_options.x_warn_nested_externs
#endif
#ifdef GENERATOR_FILE
extern int warn_noexcept;
#else
  int x_warn_noexcept;
#define warn_noexcept global_options.x_warn_noexcept
#endif
#ifdef GENERATOR_FILE
extern int warn_nontemplate_friend;
#else
  int x_warn_nontemplate_friend;
#define warn_nontemplate_friend global_options.x_warn_nontemplate_friend
#endif
#ifdef GENERATOR_FILE
extern int warn_nonvdtor;
#else
  int x_warn_nonvdtor;
#define warn_nonvdtor global_options.x_warn_nonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_nonnull;
#else
  int x_warn_nonnull;
#define warn_nonnull global_options.x_warn_nonnull
#endif
#ifdef GENERATOR_FILE
extern int warn_nonnull_compare;
#else
  int x_warn_nonnull_compare;
#define warn_nonnull_compare global_options.x_warn_nonnull_compare
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_normalize;
#else
  int x_cpp_warn_normalize;
#define cpp_warn_normalize global_options.x_cpp_warn_normalize
#endif
#ifdef GENERATOR_FILE
extern int warn_null_dereference;
#else
  int x_warn_null_dereference;
#define warn_null_dereference global_options.x_warn_null_dereference
#endif
#ifdef GENERATOR_FILE
extern int warn_odr_violations;
#else
  int x_warn_odr_violations;
#define warn_odr_violations global_options.x_warn_odr_violations
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_cast;
#else
  int x_warn_old_style_cast;
#define warn_old_style_cast global_options.x_warn_old_style_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_declaration;
#else
  int x_warn_old_style_declaration;
#define warn_old_style_declaration global_options.x_warn_old_style_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_definition;
#else
  int x_warn_old_style_definition;
#define warn_old_style_definition global_options.x_warn_old_style_definition
#endif
#ifdef GENERATOR_FILE
extern int warn_openmp_simd;
#else
  int x_warn_openmp_simd;
#define warn_openmp_simd global_options.x_warn_openmp_simd
#endif
#ifdef GENERATOR_FILE
extern int warn_overflow;
#else
  int x_warn_overflow;
#define warn_overflow global_options.x_warn_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_overlength_strings;
#else
  int x_warn_overlength_strings;
#define warn_overlength_strings global_options.x_warn_overlength_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_overloaded_virtual;
#else
  int x_warn_overloaded_virtual;
#define warn_overloaded_virtual global_options.x_warn_overloaded_virtual
#endif
#ifdef GENERATOR_FILE
extern int warn_override_init;
#else
  int x_warn_override_init;
#define warn_override_init global_options.x_warn_override_init
#endif
#ifdef GENERATOR_FILE
extern int warn_override_init_side_effects;
#else
  int x_warn_override_init_side_effects;
#define warn_override_init_side_effects global_options.x_warn_override_init_side_effects
#endif
#ifdef GENERATOR_FILE
extern int warn_packed;
#else
  int x_warn_packed;
#define warn_packed global_options.x_warn_packed
#endif
#ifdef GENERATOR_FILE
extern int warn_packed_bitfield_compat;
#else
  int x_warn_packed_bitfield_compat;
#define warn_packed_bitfield_compat global_options.x_warn_packed_bitfield_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_padded;
#else
  int x_warn_padded;
#define warn_padded global_options.x_warn_padded
#endif
#ifdef GENERATOR_FILE
extern int warn_parentheses;
#else
  int x_warn_parentheses;
#define warn_parentheses global_options.x_warn_parentheses
#endif
#ifdef GENERATOR_FILE
extern int pedantic;
#else
  int x_pedantic;
#define pedantic global_options.x_pedantic
#endif
#ifdef GENERATOR_FILE
extern int warn_placement_new;
#else
  int x_warn_placement_new;
#define warn_placement_new global_options.x_warn_placement_new
#endif
#ifdef GENERATOR_FILE
extern int warn_pmf2ptr;
#else
  int x_warn_pmf2ptr;
#define warn_pmf2ptr global_options.x_warn_pmf2ptr
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_arith;
#else
  int x_warn_pointer_arith;
#define warn_pointer_arith global_options.x_warn_pointer_arith
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_sign;
#else
  int x_warn_pointer_sign;
#define warn_pointer_sign global_options.x_warn_pointer_sign
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_to_int_cast;
#else
  int x_warn_pointer_to_int_cast;
#define warn_pointer_to_int_cast global_options.x_warn_pointer_to_int_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_pragmas;
#else
  int x_warn_pragmas;
#define warn_pragmas global_options.x_warn_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_property_assign_default;
#else
  int x_warn_property_assign_default;
#define warn_property_assign_default global_options.x_warn_property_assign_default
#endif
#ifdef GENERATOR_FILE
extern int warn_protocol;
#else
  int x_warn_protocol;
#define warn_protocol global_options.x_warn_protocol
#endif
#ifdef GENERATOR_FILE
extern int warn_psabi;
#else
  int x_warn_psabi;
#define warn_psabi global_options.x_warn_psabi
#endif
#ifdef GENERATOR_FILE
extern int warn_redundant_decls;
#else
  int x_warn_redundant_decls;
#define warn_redundant_decls global_options.x_warn_redundant_decls
#endif
#ifdef GENERATOR_FILE
extern int warn_reorder;
#else
  int x_warn_reorder;
#define warn_reorder global_options.x_warn_reorder
#endif
#ifdef GENERATOR_FILE
extern int warn_return_local_addr;
#else
  int x_warn_return_local_addr;
#define warn_return_local_addr global_options.x_warn_return_local_addr
#endif
#ifdef GENERATOR_FILE
extern int warn_return_type;
#else
  int x_warn_return_type;
#define warn_return_type global_options.x_warn_return_type
#endif
#ifdef GENERATOR_FILE
extern int warn_selector;
#else
  int x_warn_selector;
#define warn_selector global_options.x_warn_selector
#endif
#ifdef GENERATOR_FILE
extern int warn_sequence_point;
#else
  int x_warn_sequence_point;
#define warn_sequence_point global_options.x_warn_sequence_point
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow;
#else
  int x_warn_shadow;
#define warn_shadow global_options.x_warn_shadow
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_ivar;
#else
  int x_warn_shadow_ivar;
#define warn_shadow_ivar global_options.x_warn_shadow_ivar
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_count_negative;
#else
  int x_warn_shift_count_negative;
#define warn_shift_count_negative global_options.x_warn_shift_count_negative
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_count_overflow;
#else
  int x_warn_shift_count_overflow;
#define warn_shift_count_overflow global_options.x_warn_shift_count_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_negative_value;
#else
  int x_warn_shift_negative_value;
#define warn_shift_negative_value global_options.x_warn_shift_negative_value
#endif
#ifdef GENERATOR_FILE
extern int warn_shift_overflow;
#else
  int x_warn_shift_overflow;
#define warn_shift_overflow global_options.x_warn_shift_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_compare;
#else
  int x_warn_sign_compare;
#define warn_sign_compare global_options.x_warn_sign_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_conversion;
#else
  int x_warn_sign_conversion;
#define warn_sign_conversion global_options.x_warn_sign_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_promo;
#else
  int x_warn_sign_promo;
#define warn_sign_promo global_options.x_warn_sign_promo
#endif
#ifdef GENERATOR_FILE
extern int warn_sized_deallocation;
#else
  int x_warn_sized_deallocation;
#define warn_sized_deallocation global_options.x_warn_sized_deallocation
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_array_argument;
#else
  int x_warn_sizeof_array_argument;
#define warn_sizeof_array_argument global_options.x_warn_sizeof_array_argument
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_pointer_memaccess;
#else
  int x_warn_sizeof_pointer_memaccess;
#define warn_sizeof_pointer_memaccess global_options.x_warn_sizeof_pointer_memaccess
#endif
#ifdef GENERATOR_FILE
extern int warn_stack_protect;
#else
  int x_warn_stack_protect;
#define warn_stack_protect global_options.x_warn_stack_protect
#endif
#ifdef GENERATOR_FILE
extern int warn_stack_usage;
#else
  int x_warn_stack_usage;
#define warn_stack_usage global_options.x_warn_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_aliasing;
#else
  int x_warn_strict_aliasing;
#define warn_strict_aliasing global_options.x_warn_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_null_sentinel;
#else
  int x_warn_strict_null_sentinel;
#define warn_strict_null_sentinel global_options.x_warn_strict_null_sentinel
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_overflow;
#else
  int x_warn_strict_overflow;
#define warn_strict_overflow global_options.x_warn_strict_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_prototypes;
#else
  int x_warn_strict_prototypes;
#define warn_strict_prototypes global_options.x_warn_strict_prototypes
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_selector_match;
#else
  int x_warn_strict_selector_match;
#define warn_strict_selector_match global_options.x_warn_strict_selector_match
#endif
#ifdef GENERATOR_FILE
extern int warn_subobject_linkage;
#else
  int x_warn_subobject_linkage;
#define warn_subobject_linkage global_options.x_warn_subobject_linkage
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_const;
#else
  int x_warn_suggest_attribute_const;
#define warn_suggest_attribute_const global_options.x_warn_suggest_attribute_const
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_format;
#else
  int x_warn_suggest_attribute_format;
#define warn_suggest_attribute_format global_options.x_warn_suggest_attribute_format
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_noreturn;
#else
  int x_warn_suggest_attribute_noreturn;
#define warn_suggest_attribute_noreturn global_options.x_warn_suggest_attribute_noreturn
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_pure;
#else
  int x_warn_suggest_attribute_pure;
#define warn_suggest_attribute_pure global_options.x_warn_suggest_attribute_pure
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_final_methods;
#else
  int x_warn_suggest_final_methods;
#define warn_suggest_final_methods global_options.x_warn_suggest_final_methods
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_final_types;
#else
  int x_warn_suggest_final_types;
#define warn_suggest_final_types global_options.x_warn_suggest_final_types
#endif
#ifdef GENERATOR_FILE
extern int warn_override;
#else
  int x_warn_override;
#define warn_override global_options.x_warn_override
#endif
#ifdef GENERATOR_FILE
extern int warn_switch;
#else
  int x_warn_switch;
#define warn_switch global_options.x_warn_switch
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_bool;
#else
  int x_warn_switch_bool;
#define warn_switch_bool global_options.x_warn_switch_bool
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_default;
#else
  int x_warn_switch_default;
#define warn_switch_default global_options.x_warn_switch_default
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_enum;
#else
  int x_warn_switch_enum;
#define warn_switch_enum global_options.x_warn_switch_enum
#endif
#ifdef GENERATOR_FILE
extern int warn_sync_nand;
#else
  int x_warn_sync_nand;
#define warn_sync_nand global_options.x_warn_sync_nand
#endif
#ifdef GENERATOR_FILE
extern int warn_synth;
#else
  int x_warn_synth;
#define warn_synth global_options.x_warn_synth
#endif
#ifdef GENERATOR_FILE
extern int warn_system_headers;
#else
  int x_warn_system_headers;
#define warn_system_headers global_options.x_warn_system_headers
#endif
#ifdef GENERATOR_FILE
extern int warn_tautological_compare;
#else
  int x_warn_tautological_compare;
#define warn_tautological_compare global_options.x_warn_tautological_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_templates;
#else
  int x_warn_templates;
#define warn_templates global_options.x_warn_templates
#endif
#ifdef GENERATOR_FILE
extern int warn_terminate;
#else
  int x_warn_terminate;
#define warn_terminate global_options.x_warn_terminate
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional;
#else
  int x_warn_traditional;
#define warn_traditional global_options.x_warn_traditional
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional_conversion;
#else
  int x_warn_traditional_conversion;
#define warn_traditional_conversion global_options.x_warn_traditional_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_trampolines;
#else
  int x_warn_trampolines;
#define warn_trampolines global_options.x_warn_trampolines
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_trigraphs;
#else
  int x_cpp_warn_trigraphs;
#define cpp_warn_trigraphs global_options.x_cpp_warn_trigraphs
#endif
#ifdef GENERATOR_FILE
extern int warn_type_limits;
#else
  int x_warn_type_limits;
#define warn_type_limits global_options.x_warn_type_limits
#endif
#ifdef GENERATOR_FILE
extern int warn_undeclared_selector;
#else
  int x_warn_undeclared_selector;
#define warn_undeclared_selector global_options.x_warn_undeclared_selector
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_undef;
#else
  int x_cpp_warn_undef;
#define cpp_warn_undef global_options.x_cpp_warn_undef
#endif
#ifdef GENERATOR_FILE
extern int warn_uninitialized;
#else
  int x_warn_uninitialized;
#define warn_uninitialized global_options.x_warn_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_unknown_pragmas;
#else
  int x_warn_unknown_pragmas;
#define warn_unknown_pragmas global_options.x_warn_unknown_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_unsafe_loop_optimizations;
#else
  int x_warn_unsafe_loop_optimizations;
#define warn_unsafe_loop_optimizations global_options.x_warn_unsafe_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int warn_unsuffixed_float_constants;
#else
  int x_warn_unsuffixed_float_constants;
#define warn_unsuffixed_float_constants global_options.x_warn_unsuffixed_float_constants
#endif
#ifdef GENERATOR_FILE
extern int warn_unused;
#else
  int x_warn_unused;
#define warn_unused global_options.x_warn_unused
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_parameter;
#else
  int x_warn_unused_but_set_parameter;
#define warn_unused_but_set_parameter global_options.x_warn_unused_but_set_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_variable;
#else
  int x_warn_unused_but_set_variable;
#define warn_unused_but_set_variable global_options.x_warn_unused_but_set_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_const_variable;
#else
  int x_warn_unused_const_variable;
#define warn_unused_const_variable global_options.x_warn_unused_const_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_function;
#else
  int x_warn_unused_function;
#define warn_unused_function global_options.x_warn_unused_function
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_label;
#else
  int x_warn_unused_label;
#define warn_unused_label global_options.x_warn_unused_label
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_local_typedefs;
#else
  int x_warn_unused_local_typedefs;
#define warn_unused_local_typedefs global_options.x_warn_unused_local_typedefs
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_unused_macros;
#else
  int x_cpp_warn_unused_macros;
#define cpp_warn_unused_macros global_options.x_cpp_warn_unused_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_parameter;
#else
  int x_warn_unused_parameter;
#define warn_unused_parameter global_options.x_warn_unused_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_result;
#else
  int x_warn_unused_result;
#define warn_unused_result global_options.x_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_value;
#else
  int x_warn_unused_value;
#define warn_unused_value global_options.x_warn_unused_value
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_variable;
#else
  int x_warn_unused_variable;
#define warn_unused_variable global_options.x_warn_unused_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_useless_cast;
#else
  int x_warn_useless_cast;
#define warn_useless_cast global_options.x_warn_useless_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_varargs;
#else
  int x_warn_varargs;
#define warn_varargs global_options.x_warn_varargs
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_variadic_macros;
#else
  int x_cpp_warn_variadic_macros;
#define cpp_warn_variadic_macros global_options.x_cpp_warn_variadic_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_vector_operation_performance;
#else
  int x_warn_vector_operation_performance;
#define warn_vector_operation_performance global_options.x_warn_vector_operation_performance
#endif
#ifdef GENERATOR_FILE
extern int warn_virtual_inheritance;
#else
  int x_warn_virtual_inheritance;
#define warn_virtual_inheritance global_options.x_warn_virtual_inheritance
#endif
#ifdef GENERATOR_FILE
extern int warn_virtual_move_assign;
#else
  int x_warn_virtual_move_assign;
#define warn_virtual_move_assign global_options.x_warn_virtual_move_assign
#endif
#ifdef GENERATOR_FILE
extern int warn_vla;
#else
  int x_warn_vla;
#define warn_vla global_options.x_warn_vla
#endif
#ifdef GENERATOR_FILE
extern int warn_volatile_register_var;
#else
  int x_warn_volatile_register_var;
#define warn_volatile_register_var global_options.x_warn_volatile_register_var
#endif
#ifdef GENERATOR_FILE
extern int warn_write_strings;
#else
  int x_warn_write_strings;
#define warn_write_strings global_options.x_warn_write_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_zero_as_null_pointer_constant;
#else
  int x_warn_zero_as_null_pointer_constant;
#define warn_zero_as_null_pointer_constant global_options.x_warn_zero_as_null_pointer_constant
#endif
#ifdef GENERATOR_FILE
extern const char *aux_info_file_name;
#else
  const char *x_aux_info_file_name;
#define aux_info_file_name global_options.x_aux_info_file_name
#endif
#ifdef GENERATOR_FILE
extern const char *aux_base_name;
#else
  const char *x_aux_base_name;
#define aux_base_name global_options.x_aux_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *dump_base_name;
#else
  const char *x_dump_base_name;
#define dump_base_name global_options.x_dump_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *dump_dir_name;
#else
  const char *x_dump_dir_name;
#define dump_dir_name global_options.x_dump_dir_name
#endif
#ifdef GENERATOR_FILE
extern int flag_pic;
#else
  int x_flag_pic;
#define flag_pic global_options.x_flag_pic
#endif
#ifdef GENERATOR_FILE
extern int flag_pie;
#else
  int x_flag_pie;
#define flag_pie global_options.x_flag_pie
#endif
#ifdef GENERATOR_FILE
extern int flag_abi_compat_version;
#else
  int x_flag_abi_compat_version;
#define flag_abi_compat_version global_options.x_flag_abi_compat_version
#endif
#ifdef GENERATOR_FILE
extern int flag_abi_version;
#else
  int x_flag_abi_version;
#define flag_abi_version global_options.x_flag_abi_version
#endif
#ifdef GENERATOR_FILE
extern int flag_access_control;
#else
  int x_flag_access_control;
#define flag_access_control global_options.x_flag_access_control
#endif
#ifdef GENERATOR_FILE
extern const char *ada_specs_parent;
#else
  const char *x_ada_specs_parent;
#define ada_specs_parent global_options.x_ada_specs_parent
#endif
#ifdef GENERATOR_FILE
extern int flag_aggressive_loop_optimizations;
#else
  int x_flag_aggressive_loop_optimizations;
#define flag_aggressive_loop_optimizations global_options.x_flag_aggressive_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int align_functions;
#else
  int x_align_functions;
#define align_functions global_options.x_align_functions
#endif
#ifdef GENERATOR_FILE
extern int align_jumps;
#else
  int x_align_jumps;
#define align_jumps global_options.x_align_jumps
#endif
#ifdef GENERATOR_FILE
extern int align_labels;
#else
  int x_align_labels;
#define align_labels global_options.x_align_labels
#endif
#ifdef GENERATOR_FILE
extern int align_loops;
#else
  int x_align_loops;
#define align_loops global_options.x_align_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_parameterless_variadic_functions;
#else
  int x_flag_allow_parameterless_variadic_functions;
#define flag_allow_parameterless_variadic_functions global_options.x_flag_allow_parameterless_variadic_functions
#endif
#ifdef GENERATOR_FILE
extern void *common_deferred_options;
#else
  void *x_common_deferred_options;
#define common_deferred_options global_options.x_common_deferred_options
#endif
#ifdef GENERATOR_FILE
extern int flag_no_asm;
#else
  int x_flag_no_asm;
#define flag_no_asm global_options.x_flag_no_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_associative_math;
#else
  int x_flag_associative_math;
#define flag_associative_math global_options.x_flag_associative_math
#endif
#ifdef GENERATOR_FILE
extern int flag_asynchronous_unwind_tables;
#else
  int x_flag_asynchronous_unwind_tables;
#define flag_asynchronous_unwind_tables global_options.x_flag_asynchronous_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_auto_inc_dec;
#else
  int x_flag_auto_inc_dec;
#define flag_auto_inc_dec global_options.x_flag_auto_inc_dec
#endif
#ifdef GENERATOR_FILE
extern int flag_auto_profile;
#else
  int x_flag_auto_profile;
#define flag_auto_profile global_options.x_flag_auto_profile
#endif
#ifdef GENERATOR_FILE
extern const char *auto_profile_file;
#else
  const char *x_auto_profile_file;
#define auto_profile_file global_options.x_auto_profile_file
#endif
#ifdef GENERATOR_FILE
extern int flag_bounds_check;
#else
  int x_flag_bounds_check;
#define flag_bounds_check global_options.x_flag_bounds_check
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_on_count_reg;
#else
  int x_flag_branch_on_count_reg;
#define flag_branch_on_count_reg global_options.x_flag_branch_on_count_reg
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_probabilities;
#else
  int x_flag_branch_probabilities;
#define flag_branch_probabilities global_options.x_flag_branch_probabilities
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_target_load_optimize;
#else
  int x_flag_branch_target_load_optimize;
#define flag_branch_target_load_optimize global_options.x_flag_branch_target_load_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_target_load_optimize2;
#else
  int x_flag_branch_target_load_optimize2;
#define flag_branch_target_load_optimize2 global_options.x_flag_branch_target_load_optimize2
#endif
#ifdef GENERATOR_FILE
extern int flag_btr_bb_exclusive;
#else
  int x_flag_btr_bb_exclusive;
#define flag_btr_bb_exclusive global_options.x_flag_btr_bb_exclusive
#endif
#ifdef GENERATOR_FILE
extern int flag_building_libgcc;
#else
  int x_flag_building_libgcc;
#define flag_building_libgcc global_options.x_flag_building_libgcc
#endif
#ifdef GENERATOR_FILE
extern int flag_no_builtin;
#else
  int x_flag_no_builtin;
#define flag_no_builtin global_options.x_flag_no_builtin
#endif
#ifdef GENERATOR_FILE
extern int flag_caller_saves;
#else
  int x_flag_caller_saves;
#define flag_caller_saves global_options.x_flag_caller_saves
#endif
#ifdef GENERATOR_FILE
extern int flag_check_data_deps;
#else
  int x_flag_check_data_deps;
#define flag_check_data_deps global_options.x_flag_check_data_deps
#endif
#ifdef GENERATOR_FILE
extern int flag_check_new;
#else
  int x_flag_check_new;
#define flag_check_new global_options.x_flag_check_new
#endif
#ifdef GENERATOR_FILE
extern int flag_check_pointer_bounds;
#else
  int x_flag_check_pointer_bounds;
#define flag_check_pointer_bounds global_options.x_flag_check_pointer_bounds
#endif
#ifdef GENERATOR_FILE
extern int flag_checking;
#else
  int x_flag_checking;
#define flag_checking global_options.x_flag_checking
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_incomplete_type;
#else
  int x_flag_chkp_incomplete_type;
#define flag_chkp_incomplete_type global_options.x_flag_chkp_incomplete_type
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_check_read;
#else
  int x_flag_chkp_check_read;
#define flag_chkp_check_read global_options.x_flag_chkp_check_read
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_check_write;
#else
  int x_flag_chkp_check_write;
#define flag_chkp_check_write global_options.x_flag_chkp_check_write
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_first_field_has_own_bounds;
#else
  int x_flag_chkp_first_field_has_own_bounds;
#define flag_chkp_first_field_has_own_bounds global_options.x_flag_chkp_first_field_has_own_bounds
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_instrument_calls;
#else
  int x_flag_chkp_instrument_calls;
#define flag_chkp_instrument_calls global_options.x_flag_chkp_instrument_calls
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_instrument_marked_only;
#else
  int x_flag_chkp_instrument_marked_only;
#define flag_chkp_instrument_marked_only global_options.x_flag_chkp_instrument_marked_only
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_narrow_bounds;
#else
  int x_flag_chkp_narrow_bounds;
#define flag_chkp_narrow_bounds global_options.x_flag_chkp_narrow_bounds
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_narrow_to_innermost_arrray;
#else
  int x_flag_chkp_narrow_to_innermost_arrray;
#define flag_chkp_narrow_to_innermost_arrray global_options.x_flag_chkp_narrow_to_innermost_arrray
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_optimize;
#else
  int x_flag_chkp_optimize;
#define flag_chkp_optimize global_options.x_flag_chkp_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_store_bounds;
#else
  int x_flag_chkp_store_bounds;
#define flag_chkp_store_bounds global_options.x_flag_chkp_store_bounds
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_zero_dynamic_size_as_infinite;
#else
  int x_flag_chkp_zero_dynamic_size_as_infinite;
#define flag_chkp_zero_dynamic_size_as_infinite global_options.x_flag_chkp_zero_dynamic_size_as_infinite
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_use_fast_string_functions;
#else
  int x_flag_chkp_use_fast_string_functions;
#define flag_chkp_use_fast_string_functions global_options.x_flag_chkp_use_fast_string_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_use_nochk_string_functions;
#else
  int x_flag_chkp_use_nochk_string_functions;
#define flag_chkp_use_nochk_string_functions global_options.x_flag_chkp_use_nochk_string_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_use_static_bounds;
#else
  int x_flag_chkp_use_static_bounds;
#define flag_chkp_use_static_bounds global_options.x_flag_chkp_use_static_bounds
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_use_static_const_bounds;
#else
  int x_flag_chkp_use_static_const_bounds;
#define flag_chkp_use_static_const_bounds global_options.x_flag_chkp_use_static_const_bounds
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_use_wrappers;
#else
  int x_flag_chkp_use_wrappers;
#define flag_chkp_use_wrappers global_options.x_flag_chkp_use_wrappers
#endif
#ifdef GENERATOR_FILE
extern int flag_chkp_zero_input_bounds_for_main;
#else
  int x_flag_chkp_zero_input_bounds_for_main;
#define flag_chkp_zero_input_bounds_for_main global_options.x_flag_chkp_zero_input_bounds_for_main
#endif
#ifdef GENERATOR_FILE
extern int flag_cilkplus;
#else
  int x_flag_cilkplus;
#define flag_cilkplus global_options.x_flag_cilkplus
#endif
#ifdef GENERATOR_FILE
extern int flag_combine_stack_adjustments;
#else
  int x_flag_combine_stack_adjustments;
#define flag_combine_stack_adjustments global_options.x_flag_combine_stack_adjustments
#endif
#ifdef GENERATOR_FILE
extern int flag_no_common;
#else
  int x_flag_no_common;
#define flag_no_common global_options.x_flag_no_common
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_debug;
#else
  int x_flag_compare_debug;
#define flag_compare_debug global_options.x_flag_compare_debug
#endif
#ifdef GENERATOR_FILE
extern const char *flag_compare_debug_opt;
#else
  const char *x_flag_compare_debug_opt;
#define flag_compare_debug_opt global_options.x_flag_compare_debug_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_elim_after_reload;
#else
  int x_flag_compare_elim_after_reload;
#define flag_compare_elim_after_reload global_options.x_flag_compare_elim_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_concepts;
#else
  int x_flag_concepts;
#define flag_concepts global_options.x_flag_concepts
#endif
#ifdef GENERATOR_FILE
extern int flag_conserve_space;
#else
  int x_flag_conserve_space;
#define flag_conserve_space global_options.x_flag_conserve_space
#endif
#ifdef GENERATOR_FILE
extern int flag_conserve_stack;
#else
  int x_flag_conserve_stack;
#define flag_conserve_stack global_options.x_flag_conserve_stack
#endif
#ifdef GENERATOR_FILE
extern int max_constexpr_depth;
#else
  int x_max_constexpr_depth;
#define max_constexpr_depth global_options.x_max_constexpr_depth
#endif
#ifdef GENERATOR_FILE
extern int flag_cprop_registers;
#else
  int x_flag_cprop_registers;
#define flag_cprop_registers global_options.x_flag_cprop_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_crossjumping;
#else
  int x_flag_crossjumping;
#define flag_crossjumping global_options.x_flag_crossjumping
#endif
#ifdef GENERATOR_FILE
extern int flag_cse_follow_jumps;
#else
  int x_flag_cse_follow_jumps;
#define flag_cse_follow_jumps global_options.x_flag_cse_follow_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_fortran_rules;
#else
  int x_flag_cx_fortran_rules;
#define flag_cx_fortran_rules global_options.x_flag_cx_fortran_rules
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_limited_range;
#else
  int x_flag_cx_limited_range;
#define flag_cx_limited_range global_options.x_flag_cx_limited_range
#endif
#ifdef GENERATOR_FILE
extern int flag_data_sections;
#else
  int x_flag_data_sections;
#define flag_data_sections global_options.x_flag_data_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_dce;
#else
  int x_flag_dce;
#define flag_dce global_options.x_flag_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_types_section;
#else
  int x_flag_debug_types_section;
#define flag_debug_types_section global_options.x_flag_debug_types_section
#endif
#ifdef GENERATOR_FILE
extern int flag_declone_ctor_dtor;
#else
  int x_flag_declone_ctor_dtor;
#define flag_declone_ctor_dtor global_options.x_flag_declone_ctor_dtor
#endif
#ifdef GENERATOR_FILE
extern int flag_deduce_init_list;
#else
  int x_flag_deduce_init_list;
#define flag_deduce_init_list global_options.x_flag_deduce_init_list
#endif
#ifdef GENERATOR_FILE
extern int flag_defer_pop;
#else
  int x_flag_defer_pop;
#define flag_defer_pop global_options.x_flag_defer_pop
#endif
#ifdef GENERATOR_FILE
extern int flag_delayed_branch;
#else
  int x_flag_delayed_branch;
#define flag_delayed_branch global_options.x_flag_delayed_branch
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_dead_exceptions;
#else
  int x_flag_delete_dead_exceptions;
#define flag_delete_dead_exceptions global_options.x_flag_delete_dead_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_null_pointer_checks;
#else
  int x_flag_delete_null_pointer_checks;
#define flag_delete_null_pointer_checks global_options.x_flag_delete_null_pointer_checks
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize;
#else
  int x_flag_devirtualize;
#define flag_devirtualize global_options.x_flag_devirtualize
#endif
#ifdef GENERATOR_FILE
extern int flag_ltrans_devirtualize;
#else
  int x_flag_ltrans_devirtualize;
#define flag_ltrans_devirtualize global_options.x_flag_ltrans_devirtualize
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize_speculatively;
#else
  int x_flag_devirtualize_speculatively;
#define flag_devirtualize_speculatively global_options.x_flag_devirtualize_speculatively
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_color;
#else
  int x_flag_diagnostics_show_color;
#define flag_diagnostics_show_color global_options.x_flag_diagnostics_show_color
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_caret;
#else
  int x_flag_diagnostics_show_caret;
#define flag_diagnostics_show_caret global_options.x_flag_diagnostics_show_caret
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_option;
#else
  int x_flag_diagnostics_show_option;
#define flag_diagnostics_show_option global_options.x_flag_diagnostics_show_option
#endif
#ifdef GENERATOR_FILE
extern int flag_dse;
#else
  int x_flag_dse;
#define flag_dse global_options.x_flag_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_ada_spec;
#else
  int x_flag_dump_ada_spec;
#define flag_dump_ada_spec global_options.x_flag_dump_ada_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_ada_spec_slim;
#else
  int x_flag_dump_ada_spec_slim;
#define flag_dump_ada_spec_slim global_options.x_flag_dump_ada_spec_slim
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_final_insns;
#else
  const char *x_flag_dump_final_insns;
#define flag_dump_final_insns global_options.x_flag_dump_final_insns
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_go_spec;
#else
  const char *x_flag_dump_go_spec;
#define flag_dump_go_spec global_options.x_flag_dump_go_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_locations;
#else
  int x_flag_dump_locations;
#define flag_dump_locations global_options.x_flag_dump_locations
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_noaddr;
#else
  int x_flag_dump_noaddr;
#define flag_dump_noaddr global_options.x_flag_dump_noaddr
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_passes;
#else
  int x_flag_dump_passes;
#define flag_dump_passes global_options.x_flag_dump_passes
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered;
#else
  int x_flag_dump_unnumbered;
#define flag_dump_unnumbered global_options.x_flag_dump_unnumbered
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered_links;
#else
  int x_flag_dump_unnumbered_links;
#define flag_dump_unnumbered_links global_options.x_flag_dump_unnumbered_links
#endif
#ifdef GENERATOR_FILE
extern int flag_dwarf2_cfi_asm;
#else
  int x_flag_dwarf2_cfi_asm;
#define flag_dwarf2_cfi_asm global_options.x_flag_dwarf2_cfi_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_early_inlining;
#else
  int x_flag_early_inlining;
#define flag_early_inlining global_options.x_flag_early_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_elide_constructors;
#else
  int x_flag_elide_constructors;
#define flag_elide_constructors global_options.x_flag_elide_constructors
#endif
#ifdef GENERATOR_FILE
extern int flag_eliminate_dwarf2_dups;
#else
  int x_flag_eliminate_dwarf2_dups;
#define flag_eliminate_dwarf2_dups global_options.x_flag_eliminate_dwarf2_dups
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_only_used_symbols;
#else
  int x_flag_debug_only_used_symbols;
#define flag_debug_only_used_symbols global_options.x_flag_debug_only_used_symbols
#endif
#ifdef GENERATOR_FILE
extern int flag_eliminate_unused_debug_types;
#else
  int x_flag_eliminate_unused_debug_types;
#define flag_eliminate_unused_debug_types global_options.x_flag_eliminate_unused_debug_types
#endif
#ifdef GENERATOR_FILE
extern int flag_emit_class_debug_always;
#else
  int x_flag_emit_class_debug_always;
#define flag_emit_class_debug_always global_options.x_flag_emit_class_debug_always
#endif
#ifdef GENERATOR_FILE
extern int flag_enforce_eh_specs;
#else
  int x_flag_enforce_eh_specs;
#define flag_enforce_eh_specs global_options.x_flag_enforce_eh_specs
#endif
#ifdef GENERATOR_FILE
extern int flag_exceptions;
#else
  int x_flag_exceptions;
#define flag_exceptions global_options.x_flag_exceptions
#endif
#ifdef GENERATOR_FILE
extern enum excess_precision flag_excess_precision_cmdline;
#else
  enum excess_precision x_flag_excess_precision_cmdline;
#define flag_excess_precision_cmdline global_options.x_flag_excess_precision_cmdline
#endif
#ifdef GENERATOR_FILE
extern int flag_expensive_optimizations;
#else
  int x_flag_expensive_optimizations;
#define flag_expensive_optimizations global_options.x_flag_expensive_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_extern_tls_init;
#else
  int x_flag_extern_tls_init;
#define flag_extern_tls_init global_options.x_flag_extern_tls_init
#endif
#ifdef GENERATOR_FILE
extern int flag_fat_lto_objects;
#else
  int x_flag_fat_lto_objects;
#define flag_fat_lto_objects global_options.x_flag_fat_lto_objects
#endif
#ifdef GENERATOR_FILE
extern int flag_finite_math_only;
#else
  int x_flag_finite_math_only;
#define flag_finite_math_only global_options.x_flag_finite_math_only
#endif
#ifdef GENERATOR_FILE
extern int flag_float_store;
#else
  int x_flag_float_store;
#define flag_float_store global_options.x_flag_float_store
#endif
#ifdef GENERATOR_FILE
extern int flag_new_for_scope;
#else
  int x_flag_new_for_scope;
#define flag_new_for_scope global_options.x_flag_new_for_scope
#endif
#ifdef GENERATOR_FILE
extern int flag_forward_propagate;
#else
  int x_flag_forward_propagate;
#define flag_forward_propagate global_options.x_flag_forward_propagate
#endif
#ifdef GENERATOR_FILE
extern enum fp_contract_mode flag_fp_contract_mode;
#else
  enum fp_contract_mode x_flag_fp_contract_mode;
#define flag_fp_contract_mode global_options.x_flag_fp_contract_mode
#endif
#ifdef GENERATOR_FILE
extern int flag_friend_injection;
#else
  int x_flag_friend_injection;
#define flag_friend_injection global_options.x_flag_friend_injection
#endif
#ifdef GENERATOR_FILE
extern int flag_no_function_cse;
#else
  int x_flag_no_function_cse;
#define flag_no_function_cse global_options.x_flag_no_function_cse
#endif
#ifdef GENERATOR_FILE
extern int flag_function_sections;
#else
  int x_flag_function_sections;
#define flag_function_sections global_options.x_flag_function_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse;
#else
  int x_flag_gcse;
#define flag_gcse global_options.x_flag_gcse
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_after_reload;
#else
  int x_flag_gcse_after_reload;
#define flag_gcse_after_reload global_options.x_flag_gcse_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_las;
#else
  int x_flag_gcse_las;
#define flag_gcse_las global_options.x_flag_gcse_las
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_lm;
#else
  int x_flag_gcse_lm;
#define flag_gcse_lm global_options.x_flag_gcse_lm
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_sm;
#else
  int x_flag_gcse_sm;
#define flag_gcse_sm global_options.x_flag_gcse_sm
#endif
#ifdef GENERATOR_FILE
extern int flag_no_gnu_keywords;
#else
  int x_flag_no_gnu_keywords;
#define flag_no_gnu_keywords global_options.x_flag_no_gnu_keywords
#endif
#ifdef GENERATOR_FILE
extern int flag_next_runtime;
#else
  int x_flag_next_runtime;
#define flag_next_runtime global_options.x_flag_next_runtime
#endif
#ifdef GENERATOR_FILE
extern int flag_tm;
#else
  int x_flag_tm;
#define flag_tm global_options.x_flag_tm
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu_unique;
#else
  int x_flag_gnu_unique;
#define flag_gnu_unique global_options.x_flag_gnu_unique
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu89_inline;
#else
  int x_flag_gnu89_inline;
#define flag_gnu89_inline global_options.x_flag_gnu89_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite;
#else
  int x_flag_graphite;
#define flag_graphite global_options.x_flag_graphite
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite_identity;
#else
  int x_flag_graphite_identity;
#define flag_graphite_identity global_options.x_flag_graphite_identity
#endif
#ifdef GENERATOR_FILE
extern int flag_guess_branch_prob;
#else
  int x_flag_guess_branch_prob;
#define flag_guess_branch_prob global_options.x_flag_guess_branch_prob
#endif
#ifdef GENERATOR_FILE
extern int flag_hoist_adjacent_loads;
#else
  int x_flag_hoist_adjacent_loads;
#define flag_hoist_adjacent_loads global_options.x_flag_hoist_adjacent_loads
#endif
#ifdef GENERATOR_FILE
extern int flag_no_ident;
#else
  int x_flag_no_ident;
#define flag_no_ident global_options.x_flag_no_ident
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion;
#else
  int x_flag_if_conversion;
#define flag_if_conversion global_options.x_flag_if_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion2;
#else
  int x_flag_if_conversion2;
#define flag_if_conversion2 global_options.x_flag_if_conversion2
#endif
#ifdef GENERATOR_FILE
extern int flag_implement_inlines;
#else
  int x_flag_implement_inlines;
#define flag_implement_inlines global_options.x_flag_implement_inlines
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_inline_templates;
#else
  int x_flag_implicit_inline_templates;
#define flag_implicit_inline_templates global_options.x_flag_implicit_inline_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_templates;
#else
  int x_flag_implicit_templates;
#define flag_implicit_templates global_options.x_flag_implicit_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_inlining;
#else
  int x_flag_indirect_inlining;
#define flag_indirect_inlining global_options.x_flag_indirect_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_inhibit_size_directive;
#else
  int x_flag_inhibit_size_directive;
#define flag_inhibit_size_directive global_options.x_flag_inhibit_size_directive
#endif
#ifdef GENERATOR_FILE
extern int flag_no_inline;
#else
  int x_flag_no_inline;
#define flag_no_inline global_options.x_flag_no_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_atomics;
#else
  int x_flag_inline_atomics;
#define flag_inline_atomics global_options.x_flag_inline_atomics
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions;
#else
  int x_flag_inline_functions;
#define flag_inline_functions global_options.x_flag_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions_called_once;
#else
  int x_flag_inline_functions_called_once;
#define flag_inline_functions_called_once global_options.x_flag_inline_functions_called_once
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_small_functions;
#else
  int x_flag_inline_small_functions;
#define flag_inline_small_functions global_options.x_flag_inline_small_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_instrument_function_entry_exit;
#else
  int x_flag_instrument_function_entry_exit;
#define flag_instrument_function_entry_exit global_options.x_flag_instrument_function_entry_exit
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp;
#else
  int x_flag_ipa_cp;
#define flag_ipa_cp global_options.x_flag_ipa_cp
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp_alignment;
#else
  int x_flag_ipa_cp_alignment;
#define flag_ipa_cp_alignment global_options.x_flag_ipa_cp_alignment
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp_clone;
#else
  int x_flag_ipa_cp_clone;
#define flag_ipa_cp_clone global_options.x_flag_ipa_cp_clone
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf;
#else
  int x_flag_ipa_icf;
#define flag_ipa_icf global_options.x_flag_ipa_icf
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf_functions;
#else
  int x_flag_ipa_icf_functions;
#define flag_ipa_icf_functions global_options.x_flag_ipa_icf_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_icf_variables;
#else
  int x_flag_ipa_icf_variables;
#define flag_ipa_icf_variables global_options.x_flag_ipa_icf_variables
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_profile;
#else
  int x_flag_ipa_profile;
#define flag_ipa_profile global_options.x_flag_ipa_profile
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pta;
#else
  int x_flag_ipa_pta;
#define flag_ipa_pta global_options.x_flag_ipa_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pure_const;
#else
  int x_flag_ipa_pure_const;
#define flag_ipa_pure_const global_options.x_flag_ipa_pure_const
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_ra;
#else
  int x_flag_ipa_ra;
#define flag_ipa_ra global_options.x_flag_ipa_ra
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_reference;
#else
  int x_flag_ipa_reference;
#define flag_ipa_reference global_options.x_flag_ipa_reference
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_sra;
#else
  int x_flag_ipa_sra;
#define flag_ipa_sra global_options.x_flag_ipa_sra
#endif
#ifdef GENERATOR_FILE
extern enum ira_algorithm flag_ira_algorithm;
#else
  enum ira_algorithm x_flag_ira_algorithm;
#define flag_ira_algorithm global_options.x_flag_ira_algorithm
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_hoist_pressure;
#else
  int x_flag_ira_hoist_pressure;
#define flag_ira_hoist_pressure global_options.x_flag_ira_hoist_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_loop_pressure;
#else
  int x_flag_ira_loop_pressure;
#define flag_ira_loop_pressure global_options.x_flag_ira_loop_pressure
#endif
#ifdef GENERATOR_FILE
extern enum ira_region flag_ira_region;
#else
  enum ira_region x_flag_ira_region;
#define flag_ira_region global_options.x_flag_ira_region
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_save_slots;
#else
  int x_flag_ira_share_save_slots;
#define flag_ira_share_save_slots global_options.x_flag_ira_share_save_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_spill_slots;
#else
  int x_flag_ira_share_spill_slots;
#define flag_ira_share_spill_slots global_options.x_flag_ira_share_spill_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_verbose;
#else
  int x_flag_ira_verbose;
#define flag_ira_verbose global_options.x_flag_ira_verbose
#endif
#ifdef GENERATOR_FILE
extern int flag_isolate_erroneous_paths_attribute;
#else
  int x_flag_isolate_erroneous_paths_attribute;
#define flag_isolate_erroneous_paths_attribute global_options.x_flag_isolate_erroneous_paths_attribute
#endif
#ifdef GENERATOR_FILE
extern int flag_isolate_erroneous_paths_dereference;
#else
  int x_flag_isolate_erroneous_paths_dereference;
#define flag_isolate_erroneous_paths_dereference global_options.x_flag_isolate_erroneous_paths_dereference
#endif
#ifdef GENERATOR_FILE
extern enum ivar_visibility default_ivar_visibility;
#else
  enum ivar_visibility x_default_ivar_visibility;
#define default_ivar_visibility global_options.x_default_ivar_visibility
#endif
#ifdef GENERATOR_FILE
extern int flag_ivopts;
#else
  int x_flag_ivopts;
#define flag_ivopts global_options.x_flag_ivopts
#endif
#ifdef GENERATOR_FILE
extern int flag_jump_tables;
#else
  int x_flag_jump_tables;
#define flag_jump_tables global_options.x_flag_jump_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_gc_roots_live;
#else
  int x_flag_keep_gc_roots_live;
#define flag_keep_gc_roots_live global_options.x_flag_keep_gc_roots_live
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_dllexport;
#else
  int x_flag_keep_inline_dllexport;
#define flag_keep_inline_dllexport global_options.x_flag_keep_inline_dllexport
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_functions;
#else
  int x_flag_keep_inline_functions;
#define flag_keep_inline_functions global_options.x_flag_keep_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_static_consts;
#else
  int x_flag_keep_static_consts;
#define flag_keep_static_consts global_options.x_flag_keep_static_consts
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_static_functions;
#else
  int x_flag_keep_static_functions;
#define flag_keep_static_functions global_options.x_flag_keep_static_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_lax_vector_conversions;
#else
  int x_flag_lax_vector_conversions;
#define flag_lax_vector_conversions global_options.x_flag_lax_vector_conversions
#endif
#ifdef GENERATOR_FILE
extern int flag_leading_underscore;
#else
  int x_flag_leading_underscore;
#define flag_leading_underscore global_options.x_flag_leading_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_lifetime_dse;
#else
  int x_flag_lifetime_dse;
#define flag_lifetime_dse global_options.x_flag_lifetime_dse
#endif
#ifdef GENERATOR_FILE
extern enum lto_linker_output flag_lto_linker_output;
#else
  enum lto_linker_output x_flag_lto_linker_output;
#define flag_lto_linker_output global_options.x_flag_lto_linker_output
#endif
#ifdef GENERATOR_FILE
extern int flag_live_range_shrinkage;
#else
  int x_flag_live_range_shrinkage;
#define flag_live_range_shrinkage global_options.x_flag_live_range_shrinkage
#endif
#ifdef GENERATOR_FILE
extern int flag_local_ivars;
#else
  int x_flag_local_ivars;
#define flag_local_ivars global_options.x_flag_local_ivars
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_nest_optimize;
#else
  int x_flag_loop_nest_optimize;
#define flag_loop_nest_optimize global_options.x_flag_loop_nest_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_parallelize_all;
#else
  int x_flag_loop_parallelize_all;
#define flag_loop_parallelize_all global_options.x_flag_loop_parallelize_all
#endif
#ifdef GENERATOR_FILE
extern int flag_lra_remat;
#else
  int x_flag_lra_remat;
#define flag_lra_remat global_options.x_flag_lra_remat
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_compression_level;
#else
  int x_flag_lto_compression_level;
#define flag_lto_compression_level global_options.x_flag_lto_compression_level
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_odr_type_mering;
#else
  int x_flag_lto_odr_type_mering;
#define flag_lto_odr_type_mering global_options.x_flag_lto_odr_type_mering
#endif
#ifdef GENERATOR_FILE
extern enum lto_partition_model flag_lto_partition;
#else
  enum lto_partition_model x_flag_lto_partition;
#define flag_lto_partition global_options.x_flag_lto_partition
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report;
#else
  int x_flag_lto_report;
#define flag_lto_report global_options.x_flag_lto_report
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report_wpa;
#else
  int x_flag_lto_report_wpa;
#define flag_lto_report_wpa global_options.x_flag_lto_report_wpa
#endif
#ifdef GENERATOR_FILE
extern const char *flag_lto;
#else
  const char *x_flag_lto;
#define flag_lto global_options.x_flag_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_ltrans;
#else
  int x_flag_ltrans;
#define flag_ltrans global_options.x_flag_ltrans
#endif
#ifdef GENERATOR_FILE
extern const char *ltrans_output_list;
#else
  const char *x_ltrans_output_list;
#define ltrans_output_list global_options.x_ltrans_output_list
#endif
#ifdef GENERATOR_FILE
extern int flag_errno_math;
#else
  int x_flag_errno_math;
#define flag_errno_math global_options.x_flag_errno_math
#endif
#ifdef GENERATOR_FILE
extern int flag_max_errors;
#else
  int x_flag_max_errors;
#define flag_max_errors global_options.x_flag_max_errors
#endif
#ifdef GENERATOR_FILE
extern int mem_report;
#else
  int x_mem_report;
#define mem_report global_options.x_mem_report
#endif
#ifdef GENERATOR_FILE
extern int mem_report_wpa;
#else
  int x_mem_report_wpa;
#define mem_report_wpa global_options.x_mem_report_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_constants;
#else
  int x_flag_merge_constants;
#define flag_merge_constants global_options.x_flag_merge_constants
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_debug_strings;
#else
  int x_flag_merge_debug_strings;
#define flag_merge_debug_strings global_options.x_flag_merge_debug_strings
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched;
#else
  int x_flag_modulo_sched;
#define flag_modulo_sched global_options.x_flag_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched_allow_regmoves;
#else
  int x_flag_modulo_sched_allow_regmoves;
#define flag_modulo_sched_allow_regmoves global_options.x_flag_modulo_sched_allow_regmoves
#endif
#ifdef GENERATOR_FILE
extern int flag_move_loop_invariants;
#else
  int x_flag_move_loop_invariants;
#define flag_move_loop_invariants global_options.x_flag_move_loop_invariants
#endif
#ifdef GENERATOR_FILE
extern int flag_ms_extensions;
#else
  int x_flag_ms_extensions;
#define flag_ms_extensions global_options.x_flag_ms_extensions
#endif
#ifdef GENERATOR_FILE
extern int flag_nil_receivers;
#else
  int x_flag_nil_receivers;
#define flag_nil_receivers global_options.x_flag_nil_receivers
#endif
#ifdef GENERATOR_FILE
extern int flag_non_call_exceptions;
#else
  int x_flag_non_call_exceptions;
#define flag_non_call_exceptions global_options.x_flag_non_call_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_no_nonansi_builtin;
#else
  int x_flag_no_nonansi_builtin;
#define flag_no_nonansi_builtin global_options.x_flag_no_nonansi_builtin
#endif
#ifdef GENERATOR_FILE
extern int flag_nothrow_opt;
#else
  int x_flag_nothrow_opt;
#define flag_nothrow_opt global_options.x_flag_nothrow_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_abi;
#else
  int x_flag_objc_abi;
#define flag_objc_abi global_options.x_flag_objc_abi
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_call_cxx_cdtors;
#else
  int x_flag_objc_call_cxx_cdtors;
#define flag_objc_call_cxx_cdtors global_options.x_flag_objc_call_cxx_cdtors
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_direct_dispatch;
#else
  int x_flag_objc_direct_dispatch;
#define flag_objc_direct_dispatch global_options.x_flag_objc_direct_dispatch
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_exceptions;
#else
  int x_flag_objc_exceptions;
#define flag_objc_exceptions global_options.x_flag_objc_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_gc;
#else
  int x_flag_objc_gc;
#define flag_objc_gc global_options.x_flag_objc_gc
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_nilcheck;
#else
  int x_flag_objc_nilcheck;
#define flag_objc_nilcheck global_options.x_flag_objc_nilcheck
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_sjlj_exceptions;
#else
  int x_flag_objc_sjlj_exceptions;
#define flag_objc_sjlj_exceptions global_options.x_flag_objc_sjlj_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc1_only;
#else
  int x_flag_objc1_only;
#define flag_objc1_only global_options.x_flag_objc1_only
#endif
#ifdef GENERATOR_FILE
extern enum offload_abi flag_offload_abi;
#else
  enum offload_abi x_flag_offload_abi;
#define flag_offload_abi global_options.x_flag_offload_abi
#endif
#ifdef GENERATOR_FILE
extern int flag_omit_frame_pointer;
#else
  int x_flag_omit_frame_pointer;
#define flag_omit_frame_pointer global_options.x_flag_omit_frame_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_openacc;
#else
  int x_flag_openacc;
#define flag_openacc global_options.x_flag_openacc
#endif
#ifdef GENERATOR_FILE
extern const char *flag_openacc_dims;
#else
  const char *x_flag_openacc_dims;
#define flag_openacc_dims global_options.x_flag_openacc_dims
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp;
#else
  int x_flag_openmp;
#define flag_openmp global_options.x_flag_openmp
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp_simd;
#else
  int x_flag_openmp_simd;
#define flag_openmp_simd global_options.x_flag_openmp_simd
#endif
#ifdef GENERATOR_FILE
extern int flag_opt_info;
#else
  int x_flag_opt_info;
#define flag_opt_info global_options.x_flag_opt_info
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_sibling_calls;
#else
  int x_flag_optimize_sibling_calls;
#define flag_optimize_sibling_calls global_options.x_flag_optimize_sibling_calls
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_strlen;
#else
  int x_flag_optimize_strlen;
#define flag_optimize_strlen global_options.x_flag_optimize_strlen
#endif
#ifdef GENERATOR_FILE
extern int flag_pack_struct;
#else
  int x_flag_pack_struct;
#define flag_pack_struct global_options.x_flag_pack_struct
#endif
#ifdef GENERATOR_FILE
extern int flag_partial_inlining;
#else
  int x_flag_partial_inlining;
#define flag_partial_inlining global_options.x_flag_partial_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_pcc_struct_return;
#else
  int x_flag_pcc_struct_return;
#define flag_pcc_struct_return global_options.x_flag_pcc_struct_return
#endif
#ifdef GENERATOR_FILE
extern int flag_peel_loops;
#else
  int x_flag_peel_loops;
#define flag_peel_loops global_options.x_flag_peel_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_no_peephole;
#else
  int x_flag_no_peephole;
#define flag_no_peephole global_options.x_flag_no_peephole
#endif
#ifdef GENERATOR_FILE
extern int flag_peephole2;
#else
  int x_flag_peephole2;
#define flag_peephole2 global_options.x_flag_peephole2
#endif
#ifdef GENERATOR_FILE
extern int flag_permissive;
#else
  int x_flag_permissive;
#define flag_permissive global_options.x_flag_permissive
#endif
#ifdef GENERATOR_FILE
extern int flag_plan9_extensions;
#else
  int x_flag_plan9_extensions;
#define flag_plan9_extensions global_options.x_flag_plan9_extensions
#endif
#ifdef GENERATOR_FILE
extern int flag_plt;
#else
  int x_flag_plt;
#define flag_plt global_options.x_flag_plt
#endif
#ifdef GENERATOR_FILE
extern int post_ipa_mem_report;
#else
  int x_post_ipa_mem_report;
#define post_ipa_mem_report global_options.x_post_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int pre_ipa_mem_report;
#else
  int x_pre_ipa_mem_report;
#define pre_ipa_mem_report global_options.x_pre_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int flag_predictive_commoning;
#else
  int x_flag_predictive_commoning;
#define flag_predictive_commoning global_options.x_flag_predictive_commoning
#endif
#ifdef GENERATOR_FILE
extern int flag_prefetch_loop_arrays;
#else
  int x_flag_prefetch_loop_arrays;
#define flag_prefetch_loop_arrays global_options.x_flag_prefetch_loop_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_pretty_templates;
#else
  int x_flag_pretty_templates;
#define flag_pretty_templates global_options.x_flag_pretty_templates
#endif
#ifdef GENERATOR_FILE
extern int profile_flag;
#else
  int x_profile_flag;
#define profile_flag global_options.x_profile_flag
#endif
#ifdef GENERATOR_FILE
extern int profile_arc_flag;
#else
  int x_profile_arc_flag;
#define profile_arc_flag global_options.x_profile_arc_flag
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_correction;
#else
  int x_flag_profile_correction;
#define flag_profile_correction global_options.x_flag_profile_correction
#endif
#ifdef GENERATOR_FILE
extern const char *profile_data_prefix;
#else
  const char *x_profile_data_prefix;
#define profile_data_prefix global_options.x_profile_data_prefix
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_reorder_functions;
#else
  int x_flag_profile_reorder_functions;
#define flag_profile_reorder_functions global_options.x_flag_profile_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int profile_report;
#else
  int x_profile_report;
#define profile_report global_options.x_profile_report
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_use;
#else
  int x_flag_profile_use;
#define flag_profile_use global_options.x_flag_profile_use
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_values;
#else
  int x_flag_profile_values;
#define flag_profile_values global_options.x_flag_profile_values
#endif
#ifdef GENERATOR_FILE
extern int flag_reciprocal_math;
#else
  int x_flag_reciprocal_math;
#define flag_reciprocal_math global_options.x_flag_reciprocal_math
#endif
#ifdef GENERATOR_FILE
extern int flag_record_gcc_switches;
#else
  int x_flag_record_gcc_switches;
#define flag_record_gcc_switches global_options.x_flag_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int flag_ree;
#else
  int x_flag_ree;
#define flag_ree global_options.x_flag_ree
#endif
#ifdef GENERATOR_FILE
extern int flag_rename_registers;
#else
  int x_flag_rename_registers;
#define flag_rename_registers global_options.x_flag_rename_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks;
#else
  int x_flag_reorder_blocks;
#define flag_reorder_blocks global_options.x_flag_reorder_blocks
#endif
#ifdef GENERATOR_FILE
extern enum reorder_blocks_algorithm flag_reorder_blocks_algorithm;
#else
  enum reorder_blocks_algorithm x_flag_reorder_blocks_algorithm;
#define flag_reorder_blocks_algorithm global_options.x_flag_reorder_blocks_algorithm
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks_and_partition;
#else
  int x_flag_reorder_blocks_and_partition;
#define flag_reorder_blocks_and_partition global_options.x_flag_reorder_blocks_and_partition
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_functions;
#else
  int x_flag_reorder_functions;
#define flag_reorder_functions global_options.x_flag_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_replace_objc_classes;
#else
  int x_flag_replace_objc_classes;
#define flag_replace_objc_classes global_options.x_flag_replace_objc_classes
#endif
#ifdef GENERATOR_FILE
extern int flag_report_bug;
#else
  int x_flag_report_bug;
#define flag_report_bug global_options.x_flag_report_bug
#endif
#ifdef GENERATOR_FILE
extern int flag_rerun_cse_after_loop;
#else
  int x_flag_rerun_cse_after_loop;
#define flag_rerun_cse_after_loop global_options.x_flag_rerun_cse_after_loop
#endif
#ifdef GENERATOR_FILE
extern int flag_resched_modulo_sched;
#else
  int x_flag_resched_modulo_sched;
#define flag_resched_modulo_sched global_options.x_flag_resched_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_rounding_math;
#else
  int x_flag_rounding_math;
#define flag_rounding_math global_options.x_flag_rounding_math
#endif
#ifdef GENERATOR_FILE
extern int flag_rtti;
#else
  int x_flag_rtti;
#define flag_rtti global_options.x_flag_rtti
#endif
#ifdef GENERATOR_FILE
extern int flag_sanitize_coverage;
#else
  int x_flag_sanitize_coverage;
#define flag_sanitize_coverage global_options.x_flag_sanitize_coverage
#endif
#ifdef GENERATOR_FILE
extern int flag_sanitize_undefined_trap_on_error;
#else
  int x_flag_sanitize_undefined_trap_on_error;
#define flag_sanitize_undefined_trap_on_error global_options.x_flag_sanitize_undefined_trap_on_error
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_critical_path_heuristic;
#else
  int x_flag_sched_critical_path_heuristic;
#define flag_sched_critical_path_heuristic global_options.x_flag_sched_critical_path_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_dep_count_heuristic;
#else
  int x_flag_sched_dep_count_heuristic;
#define flag_sched_dep_count_heuristic global_options.x_flag_sched_dep_count_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_group_heuristic;
#else
  int x_flag_sched_group_heuristic;
#define flag_sched_group_heuristic global_options.x_flag_sched_group_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_interblock;
#else
  int x_flag_schedule_interblock;
#define flag_schedule_interblock global_options.x_flag_schedule_interblock
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_last_insn_heuristic;
#else
  int x_flag_sched_last_insn_heuristic;
#define flag_sched_last_insn_heuristic global_options.x_flag_sched_last_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_pressure;
#else
  int x_flag_sched_pressure;
#define flag_sched_pressure global_options.x_flag_sched_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_rank_heuristic;
#else
  int x_flag_sched_rank_heuristic;
#define flag_sched_rank_heuristic global_options.x_flag_sched_rank_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative;
#else
  int x_flag_schedule_speculative;
#define flag_schedule_speculative global_options.x_flag_schedule_speculative
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_spec_insn_heuristic;
#else
  int x_flag_sched_spec_insn_heuristic;
#define flag_sched_spec_insn_heuristic global_options.x_flag_sched_spec_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load;
#else
  int x_flag_schedule_speculative_load;
#define flag_schedule_speculative_load global_options.x_flag_schedule_speculative_load
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load_dangerous;
#else
  int x_flag_schedule_speculative_load_dangerous;
#define flag_schedule_speculative_load_dangerous global_options.x_flag_schedule_speculative_load_dangerous
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns;
#else
  int x_flag_sched_stalled_insns;
#define flag_sched_stalled_insns global_options.x_flag_sched_stalled_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns_dep;
#else
  int x_flag_sched_stalled_insns_dep;
#define flag_sched_stalled_insns_dep global_options.x_flag_sched_stalled_insns_dep
#endif
#ifdef GENERATOR_FILE
extern int sched_verbose_param;
#else
  int x_sched_verbose_param;
#define sched_verbose_param global_options.x_sched_verbose_param
#endif
#ifdef GENERATOR_FILE
extern int flag_sched2_use_superblocks;
#else
  int x_flag_sched2_use_superblocks;
#define flag_sched2_use_superblocks global_options.x_flag_sched2_use_superblocks
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_fusion;
#else
  int x_flag_schedule_fusion;
#define flag_schedule_fusion global_options.x_flag_schedule_fusion
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns;
#else
  int x_flag_schedule_insns;
#define flag_schedule_insns global_options.x_flag_schedule_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns_after_reload;
#else
  int x_flag_schedule_insns_after_reload;
#define flag_schedule_insns_after_reload global_options.x_flag_schedule_insns_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_section_anchors;
#else
  int x_flag_section_anchors;
#define flag_section_anchors global_options.x_flag_section_anchors
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining;
#else
  int x_flag_sel_sched_pipelining;
#define flag_sel_sched_pipelining global_options.x_flag_sel_sched_pipelining
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining_outer_loops;
#else
  int x_flag_sel_sched_pipelining_outer_loops;
#define flag_sel_sched_pipelining_outer_loops global_options.x_flag_sel_sched_pipelining_outer_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_reschedule_pipelined;
#else
  int x_flag_sel_sched_reschedule_pipelined;
#define flag_sel_sched_reschedule_pipelined global_options.x_flag_sel_sched_reschedule_pipelined
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling;
#else
  int x_flag_selective_scheduling;
#define flag_selective_scheduling global_options.x_flag_selective_scheduling
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling2;
#else
  int x_flag_selective_scheduling2;
#define flag_selective_scheduling2 global_options.x_flag_selective_scheduling2
#endif
#ifdef GENERATOR_FILE
extern int flag_semantic_interposition;
#else
  int x_flag_semantic_interposition;
#define flag_semantic_interposition global_options.x_flag_semantic_interposition
#endif
#ifdef GENERATOR_FILE
extern int flag_short_enums;
#else
  int x_flag_short_enums;
#define flag_short_enums global_options.x_flag_short_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_short_wchar;
#else
  int x_flag_short_wchar;
#define flag_short_wchar global_options.x_flag_short_wchar
#endif
#ifdef GENERATOR_FILE
extern int flag_show_column;
#else
  int x_flag_show_column;
#define flag_show_column global_options.x_flag_show_column
#endif
#ifdef GENERATOR_FILE
extern int flag_shrink_wrap;
#else
  int x_flag_shrink_wrap;
#define flag_shrink_wrap global_options.x_flag_shrink_wrap
#endif
#ifdef GENERATOR_FILE
extern int flag_signaling_nans;
#else
  int x_flag_signaling_nans;
#define flag_signaling_nans global_options.x_flag_signaling_nans
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_bitfields;
#else
  int x_flag_signed_bitfields;
#define flag_signed_bitfields global_options.x_flag_signed_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_char;
#else
  int x_flag_signed_char;
#define flag_signed_char global_options.x_flag_signed_char
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_zeros;
#else
  int x_flag_signed_zeros;
#define flag_signed_zeros global_options.x_flag_signed_zeros
#endif
#ifdef GENERATOR_FILE
extern enum vect_cost_model flag_simd_cost_model;
#else
  enum vect_cost_model x_flag_simd_cost_model;
#define flag_simd_cost_model global_options.x_flag_simd_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_single_precision_constant;
#else
  int x_flag_single_precision_constant;
#define flag_single_precision_constant global_options.x_flag_single_precision_constant
#endif
#ifdef GENERATOR_FILE
extern int flag_sized_deallocation;
#else
  int x_flag_sized_deallocation;
#define flag_sized_deallocation global_options.x_flag_sized_deallocation
#endif
#ifdef GENERATOR_FILE
extern int flag_split_ivs_in_unroller;
#else
  int x_flag_split_ivs_in_unroller;
#define flag_split_ivs_in_unroller global_options.x_flag_split_ivs_in_unroller
#endif
#ifdef GENERATOR_FILE
extern int flag_split_paths;
#else
  int x_flag_split_paths;
#define flag_split_paths global_options.x_flag_split_paths
#endif
#ifdef GENERATOR_FILE
extern int flag_split_stack;
#else
  int x_flag_split_stack;
#define flag_split_stack global_options.x_flag_split_stack
#endif
#ifdef GENERATOR_FILE
extern int flag_split_wide_types;
#else
  int x_flag_split_wide_types;
#define flag_split_wide_types global_options.x_flag_split_wide_types
#endif
#ifdef GENERATOR_FILE
extern int flag_ssa_backprop;
#else
  int x_flag_ssa_backprop;
#define flag_ssa_backprop global_options.x_flag_ssa_backprop
#endif
#ifdef GENERATOR_FILE
extern int flag_ssa_phiopt;
#else
  int x_flag_ssa_phiopt;
#define flag_ssa_phiopt global_options.x_flag_ssa_phiopt
#endif
#ifdef GENERATOR_FILE
extern enum scalar_storage_order_kind default_sso;
#else
  enum scalar_storage_order_kind x_default_sso;
#define default_sso global_options.x_default_sso
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_protect;
#else
  int x_flag_stack_protect;
#define flag_stack_protect global_options.x_flag_stack_protect
#endif
#ifdef GENERATOR_FILE
extern enum stack_reuse_level flag_stack_reuse;
#else
  enum stack_reuse_level x_flag_stack_reuse;
#define flag_stack_reuse global_options.x_flag_stack_reuse
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_usage;
#else
  int x_flag_stack_usage;
#define flag_stack_usage global_options.x_flag_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int flag_detailed_statistics;
#else
  int x_flag_detailed_statistics;
#define flag_detailed_statistics global_options.x_flag_detailed_statistics
#endif
#ifdef GENERATOR_FILE
extern int flag_stdarg_opt;
#else
  int x_flag_stdarg_opt;
#define flag_stdarg_opt global_options.x_flag_stdarg_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_aliasing;
#else
  int x_flag_strict_aliasing;
#define flag_strict_aliasing global_options.x_flag_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_enums;
#else
  int x_flag_strict_enums;
#define flag_strict_enums global_options.x_flag_strict_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_overflow;
#else
  int x_flag_strict_overflow;
#define flag_strict_overflow global_options.x_flag_strict_overflow
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_volatile_bitfields;
#else
  int x_flag_strict_volatile_bitfields;
#define flag_strict_volatile_bitfields global_options.x_flag_strict_volatile_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_sync_libcalls;
#else
  int x_flag_sync_libcalls;
#define flag_sync_libcalls global_options.x_flag_sync_libcalls
#endif
#ifdef GENERATOR_FILE
extern int flag_syntax_only;
#else
  int x_flag_syntax_only;
#define flag_syntax_only global_options.x_flag_syntax_only
#endif
#ifdef GENERATOR_FILE
extern int template_backtrace_limit;
#else
  int x_template_backtrace_limit;
#define template_backtrace_limit global_options.x_template_backtrace_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_test_coverage;
#else
  int x_flag_test_coverage;
#define flag_test_coverage global_options.x_flag_test_coverage
#endif
#ifdef GENERATOR_FILE
extern int flag_thread_jumps;
#else
  int x_flag_thread_jumps;
#define flag_thread_jumps global_options.x_flag_thread_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_threadsafe_statics;
#else
  int x_flag_threadsafe_statics;
#define flag_threadsafe_statics global_options.x_flag_threadsafe_statics
#endif
#ifdef GENERATOR_FILE
extern int time_report;
#else
  int x_time_report;
#define time_report global_options.x_time_report
#endif
#ifdef GENERATOR_FILE
extern enum tls_model flag_tls_default;
#else
  enum tls_model x_flag_tls_default;
#define flag_tls_default global_options.x_flag_tls_default
#endif
#ifdef GENERATOR_FILE
extern int flag_toplevel_reorder;
#else
  int x_flag_toplevel_reorder;
#define flag_toplevel_reorder global_options.x_flag_toplevel_reorder
#endif
#ifdef GENERATOR_FILE
extern int flag_tracer;
#else
  int x_flag_tracer;
#define flag_tracer global_options.x_flag_tracer
#endif
#ifdef GENERATOR_FILE
extern int flag_trapping_math;
#else
  int x_flag_trapping_math;
#define flag_trapping_math global_options.x_flag_trapping_math
#endif
#ifdef GENERATOR_FILE
extern int flag_trapv;
#else
  int x_flag_trapv;
#define flag_trapv global_options.x_flag_trapv
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_bit_ccp;
#else
  int x_flag_tree_bit_ccp;
#define flag_tree_bit_ccp global_options.x_flag_tree_bit_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_builtin_call_dce;
#else
  int x_flag_tree_builtin_call_dce;
#define flag_tree_builtin_call_dce global_options.x_flag_tree_builtin_call_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ccp;
#else
  int x_flag_tree_ccp;
#define flag_tree_ccp global_options.x_flag_tree_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ch;
#else
  int x_flag_tree_ch;
#define flag_tree_ch global_options.x_flag_tree_ch
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_coalesce_vars;
#else
  int x_flag_tree_coalesce_vars;
#define flag_tree_coalesce_vars global_options.x_flag_tree_coalesce_vars
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_copy_prop;
#else
  int x_flag_tree_copy_prop;
#define flag_tree_copy_prop global_options.x_flag_tree_copy_prop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_cselim;
#else
  int x_flag_tree_cselim;
#define flag_tree_cselim global_options.x_flag_tree_cselim
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dce;
#else
  int x_flag_tree_dce;
#define flag_tree_dce global_options.x_flag_tree_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dom;
#else
  int x_flag_tree_dom;
#define flag_tree_dom global_options.x_flag_tree_dom
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dse;
#else
  int x_flag_tree_dse;
#define flag_tree_dse global_options.x_flag_tree_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_forwprop;
#else
  int x_flag_tree_forwprop;
#define flag_tree_forwprop global_options.x_flag_tree_forwprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_fre;
#else
  int x_flag_tree_fre;
#define flag_tree_fre global_options.x_flag_tree_fre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribute_patterns;
#else
  int x_flag_tree_loop_distribute_patterns;
#define flag_tree_loop_distribute_patterns global_options.x_flag_tree_loop_distribute_patterns
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribution;
#else
  int x_flag_tree_loop_distribution;
#define flag_tree_loop_distribution global_options.x_flag_tree_loop_distribution
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_if_convert;
#else
  int x_flag_tree_loop_if_convert;
#define flag_tree_loop_if_convert global_options.x_flag_tree_loop_if_convert
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_if_convert_stores;
#else
  int x_flag_tree_loop_if_convert_stores;
#define flag_tree_loop_if_convert_stores global_options.x_flag_tree_loop_if_convert_stores
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_im;
#else
  int x_flag_tree_loop_im;
#define flag_tree_loop_im global_options.x_flag_tree_loop_im
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_ivcanon;
#else
  int x_flag_tree_loop_ivcanon;
#define flag_tree_loop_ivcanon global_options.x_flag_tree_loop_ivcanon
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_optimize;
#else
  int x_flag_tree_loop_optimize;
#define flag_tree_loop_optimize global_options.x_flag_tree_loop_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_vectorize;
#else
  int x_flag_tree_loop_vectorize;
#define flag_tree_loop_vectorize global_options.x_flag_tree_loop_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_live_range_split;
#else
  int x_flag_tree_live_range_split;
#define flag_tree_live_range_split global_options.x_flag_tree_live_range_split
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_parallelize_loops;
#else
  int x_flag_tree_parallelize_loops;
#define flag_tree_parallelize_loops global_options.x_flag_tree_parallelize_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_partial_pre;
#else
  int x_flag_tree_partial_pre;
#define flag_tree_partial_pre global_options.x_flag_tree_partial_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_phiprop;
#else
  int x_flag_tree_phiprop;
#define flag_tree_phiprop global_options.x_flag_tree_phiprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pre;
#else
  int x_flag_tree_pre;
#define flag_tree_pre global_options.x_flag_tree_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pta;
#else
  int x_flag_tree_pta;
#define flag_tree_pta global_options.x_flag_tree_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_reassoc;
#else
  int x_flag_tree_reassoc;
#define flag_tree_reassoc global_options.x_flag_tree_reassoc
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_scev_cprop;
#else
  int x_flag_tree_scev_cprop;
#define flag_tree_scev_cprop global_options.x_flag_tree_scev_cprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sink;
#else
  int x_flag_tree_sink;
#define flag_tree_sink global_options.x_flag_tree_sink
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slp_vectorize;
#else
  int x_flag_tree_slp_vectorize;
#define flag_tree_slp_vectorize global_options.x_flag_tree_slp_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slsr;
#else
  int x_flag_tree_slsr;
#define flag_tree_slsr global_options.x_flag_tree_slsr
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sra;
#else
  int x_flag_tree_sra;
#define flag_tree_sra global_options.x_flag_tree_sra
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_switch_conversion;
#else
  int x_flag_tree_switch_conversion;
#define flag_tree_switch_conversion global_options.x_flag_tree_switch_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_tail_merge;
#else
  int x_flag_tree_tail_merge;
#define flag_tree_tail_merge global_options.x_flag_tree_tail_merge
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ter;
#else
  int x_flag_tree_ter;
#define flag_tree_ter global_options.x_flag_tree_ter
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vectorize;
#else
  int x_flag_tree_vectorize;
#define flag_tree_vectorize global_options.x_flag_tree_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vrp;
#else
  int x_flag_tree_vrp;
#define flag_tree_vrp global_options.x_flag_tree_vrp
#endif
#ifdef GENERATOR_FILE
extern int flag_unconstrained_commons;
#else
  int x_flag_unconstrained_commons;
#define flag_unconstrained_commons global_options.x_flag_unconstrained_commons
#endif
#ifdef GENERATOR_FILE
extern int flag_unit_at_a_time;
#else
  int x_flag_unit_at_a_time;
#define flag_unit_at_a_time global_options.x_flag_unit_at_a_time
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_all_loops;
#else
  int x_flag_unroll_all_loops;
#define flag_unroll_all_loops global_options.x_flag_unroll_all_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_loops;
#else
  int x_flag_unroll_loops;
#define flag_unroll_loops global_options.x_flag_unroll_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unsafe_loop_optimizations;
#else
  int x_flag_unsafe_loop_optimizations;
#define flag_unsafe_loop_optimizations global_options.x_flag_unsafe_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_unsafe_math_optimizations;
#else
  int x_flag_unsafe_math_optimizations;
#define flag_unsafe_math_optimizations global_options.x_flag_unsafe_math_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_unswitch_loops;
#else
  int x_flag_unswitch_loops;
#define flag_unswitch_loops global_options.x_flag_unswitch_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unwind_tables;
#else
  int x_flag_unwind_tables;
#define flag_unwind_tables global_options.x_flag_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_atexit;
#else
  int x_flag_use_cxa_atexit;
#define flag_use_cxa_atexit global_options.x_flag_use_cxa_atexit
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_get_exception_ptr;
#else
  int x_flag_use_cxa_get_exception_ptr;
#define flag_use_cxa_get_exception_ptr global_options.x_flag_use_cxa_get_exception_ptr
#endif
#ifdef GENERATOR_FILE
extern int flag_use_linker_plugin;
#else
  int x_flag_use_linker_plugin;
#define flag_use_linker_plugin global_options.x_flag_use_linker_plugin
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking;
#else
  int x_flag_var_tracking;
#define flag_var_tracking global_options.x_flag_var_tracking
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments;
#else
  int x_flag_var_tracking_assignments;
#define flag_var_tracking_assignments global_options.x_flag_var_tracking_assignments
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments_toggle;
#else
  int x_flag_var_tracking_assignments_toggle;
#define flag_var_tracking_assignments_toggle global_options.x_flag_var_tracking_assignments_toggle
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_uninit;
#else
  int x_flag_var_tracking_uninit;
#define flag_var_tracking_uninit global_options.x_flag_var_tracking_uninit
#endif
#ifdef GENERATOR_FILE
extern int flag_variable_expansion_in_unroller;
#else
  int x_flag_variable_expansion_in_unroller;
#define flag_variable_expansion_in_unroller global_options.x_flag_variable_expansion_in_unroller
#endif
#ifdef GENERATOR_FILE
extern enum vect_cost_model flag_vect_cost_model;
#else
  enum vect_cost_model x_flag_vect_cost_model;
#define flag_vect_cost_model global_options.x_flag_vect_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_verbose_asm;
#else
  int x_flag_verbose_asm;
#define flag_verbose_asm global_options.x_flag_verbose_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_visibility_ms_compat;
#else
  int x_flag_visibility_ms_compat;
#define flag_visibility_ms_compat global_options.x_flag_visibility_ms_compat
#endif
#ifdef GENERATOR_FILE
extern enum symbol_visibility default_visibility;
#else
  enum symbol_visibility x_default_visibility;
#define default_visibility global_options.x_default_visibility
#endif
#ifdef GENERATOR_FILE
extern int flag_value_profile_transformations;
#else
  int x_flag_value_profile_transformations;
#define flag_value_profile_transformations global_options.x_flag_value_profile_transformations
#endif
#ifdef GENERATOR_FILE
extern enum vtv_priority flag_vtable_verify;
#else
  enum vtv_priority x_flag_vtable_verify;
#define flag_vtable_verify global_options.x_flag_vtable_verify
#endif
#ifdef GENERATOR_FILE
extern int flag_vtv_counts;
#else
  int x_flag_vtv_counts;
#define flag_vtv_counts global_options.x_flag_vtv_counts
#endif
#ifdef GENERATOR_FILE
extern int flag_vtv_debug;
#else
  int x_flag_vtv_debug;
#define flag_vtv_debug global_options.x_flag_vtv_debug
#endif
#ifdef GENERATOR_FILE
extern int flag_weak;
#else
  int x_flag_weak;
#define flag_weak global_options.x_flag_weak
#endif
#ifdef GENERATOR_FILE
extern int flag_web;
#else
  int x_flag_web;
#define flag_web global_options.x_flag_web
#endif
#ifdef GENERATOR_FILE
extern int flag_whole_program;
#else
  int x_flag_whole_program;
#define flag_whole_program global_options.x_flag_whole_program
#endif
#ifdef GENERATOR_FILE
extern int flag_working_directory;
#else
  int x_flag_working_directory;
#define flag_working_directory global_options.x_flag_working_directory
#endif
#ifdef GENERATOR_FILE
extern const char *flag_wpa;
#else
  const char *x_flag_wpa;
#define flag_wpa global_options.x_flag_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_wrapv;
#else
  int x_flag_wrapv;
#define flag_wrapv global_options.x_flag_wrapv
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_initialized_in_bss;
#else
  int x_flag_zero_initialized_in_bss;
#define flag_zero_initialized_in_bss global_options.x_flag_zero_initialized_in_bss
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_link;
#else
  int x_flag_zero_link;
#define flag_zero_link global_options.x_flag_zero_link
#endif
#ifdef GENERATOR_FILE
extern int dwarf_version;
#else
  int x_dwarf_version;
#define dwarf_version global_options.x_dwarf_version
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_declaration;
#else
  int x_flag_gen_declaration;
#define flag_gen_declaration global_options.x_flag_gen_declaration
#endif
#ifdef GENERATOR_FILE
extern int debug_generate_pub_sections;
#else
  int x_debug_generate_pub_sections;
#define debug_generate_pub_sections global_options.x_debug_generate_pub_sections
#endif
#ifdef GENERATOR_FILE
extern int dwarf_record_gcc_switches;
#else
  int x_dwarf_record_gcc_switches;
#define dwarf_record_gcc_switches global_options.x_dwarf_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int dwarf_split_debug_info;
#else
  int x_dwarf_split_debug_info;
#define dwarf_split_debug_info global_options.x_dwarf_split_debug_info
#endif
#ifdef GENERATOR_FILE
extern int dwarf_strict;
#else
  int x_dwarf_strict;
#define dwarf_strict global_options.x_dwarf_strict
#endif
#ifdef GENERATOR_FILE
extern int flag_gtoggle;
#else
  int x_flag_gtoggle;
#define flag_gtoggle global_options.x_flag_gtoggle
#endif
#ifdef GENERATOR_FILE
extern const char *imultiarch;
#else
  const char *x_imultiarch;
#define imultiarch global_options.x_imultiarch
#endif
#ifdef GENERATOR_FILE
extern const char *plugindir_string;
#else
  const char *x_plugindir_string;
#define plugindir_string global_options.x_plugindir_string
#endif
#ifdef GENERATOR_FILE
extern int rs6000_altivec_abi;
#else
  int x_rs6000_altivec_abi;
#define rs6000_altivec_abi global_options.x_rs6000_altivec_abi
#endif
#ifdef GENERATOR_FILE
extern int rs6000_darwin64_abi;
#else
  int x_rs6000_darwin64_abi;
#define rs6000_darwin64_abi global_options.x_rs6000_darwin64_abi
#endif
#ifdef GENERATOR_FILE
extern int rs6000_elf_abi;
#else
  int x_rs6000_elf_abi;
#define rs6000_elf_abi global_options.x_rs6000_elf_abi
#endif
#ifdef GENERATOR_FILE
extern int rs6000_ieeequad;
#else
  int x_rs6000_ieeequad;
#define rs6000_ieeequad global_options.x_rs6000_ieeequad
#endif
#ifdef GENERATOR_FILE
extern int rs6000_spe_abi;
#else
  int x_rs6000_spe_abi;
#define rs6000_spe_abi global_options.x_rs6000_spe_abi
#endif
#ifdef GENERATOR_FILE
extern int aix_struct_return;
#else
  int x_aix_struct_return;
#define aix_struct_return global_options.x_aix_struct_return
#endif
#ifdef GENERATOR_FILE
extern int TARGET_ALIGN_BRANCH_TARGETS;
#else
  int x_TARGET_ALIGN_BRANCH_TARGETS;
#define TARGET_ALIGN_BRANCH_TARGETS global_options.x_TARGET_ALIGN_BRANCH_TARGETS
#endif
#ifdef GENERATOR_FILE
extern int TARGET_ALLOW_DF_PERMUTE;
#else
  int x_TARGET_ALLOW_DF_PERMUTE;
#define TARGET_ALLOW_DF_PERMUTE global_options.x_TARGET_ALLOW_DF_PERMUTE
#endif
#ifdef GENERATOR_FILE
extern int TARGET_ALLOW_MOVMISALIGN;
#else
  int x_TARGET_ALLOW_MOVMISALIGN;
#define TARGET_ALLOW_MOVMISALIGN global_options.x_TARGET_ALLOW_MOVMISALIGN
#endif
#ifdef GENERATOR_FILE
extern int rs6000_altivec_element_order;
#else
  int x_rs6000_altivec_element_order;
#define rs6000_altivec_element_order global_options.x_rs6000_altivec_element_order
#endif
#ifdef GENERATOR_FILE
extern int TARGET_ALWAYS_HINT;
#else
  int x_TARGET_ALWAYS_HINT;
#define TARGET_ALWAYS_HINT global_options.x_TARGET_ALWAYS_HINT
#endif
#ifdef GENERATOR_FILE
extern int TARGET_AVOID_XFORM;
#else
  int x_TARGET_AVOID_XFORM;
#define TARGET_AVOID_XFORM global_options.x_TARGET_AVOID_XFORM
#endif
#ifdef GENERATOR_FILE
extern int TARGET_NO_BITFIELD_TYPE;
#else
  int x_TARGET_NO_BITFIELD_TYPE;
#define TARGET_NO_BITFIELD_TYPE global_options.x_TARGET_NO_BITFIELD_TYPE
#endif
#ifdef GENERATOR_FILE
extern int TARGET_NO_BITFIELD_WORD;
#else
  int x_TARGET_NO_BITFIELD_WORD;
#define TARGET_NO_BITFIELD_WORD global_options.x_TARGET_NO_BITFIELD_WORD
#endif
#ifdef GENERATOR_FILE
extern int rs6000_block_move_inline_limit;
#else
  int x_rs6000_block_move_inline_limit;
#define rs6000_block_move_inline_limit global_options.x_rs6000_block_move_inline_limit
#endif
#ifdef GENERATOR_FILE
extern int secure_plt;
#else
  int x_secure_plt;
#define secure_plt global_options.x_secure_plt
#endif
#ifdef GENERATOR_FILE
extern const char *rs6000_abi_name;
#else
  const char *x_rs6000_abi_name;
#define rs6000_abi_name global_options.x_rs6000_abi_name
#endif
#ifdef GENERATOR_FILE
extern int rs6000_compat_align_parm;
#else
  int x_rs6000_compat_align_parm;
#define rs6000_compat_align_parm global_options.x_rs6000_compat_align_parm
#endif
#ifdef GENERATOR_FILE
extern int rs6000_cpu_index;
#else
  int x_rs6000_cpu_index;
#define rs6000_cpu_index global_options.x_rs6000_cpu_index
#endif
#ifdef GENERATOR_FILE
extern int rs6000_double_float;
#else
  int x_rs6000_double_float;
#define rs6000_double_float global_options.x_rs6000_double_float
#endif
#ifdef GENERATOR_FILE
extern unsigned char rs6000_float_gprs;
#else
  unsigned char x_rs6000_float_gprs;
#define rs6000_float_gprs global_options.x_rs6000_float_gprs
#endif
#ifdef GENERATOR_FILE
extern int TARGET_NO_FP_IN_TOC;
#else
  int x_TARGET_NO_FP_IN_TOC;
#define TARGET_NO_FP_IN_TOC global_options.x_TARGET_NO_FP_IN_TOC
#endif
#ifdef GENERATOR_FILE
extern enum fpu_type_t rs6000_fpu_type;
#else
  enum fpu_type_t x_rs6000_fpu_type;
#define rs6000_fpu_type global_options.x_rs6000_fpu_type
#endif
#ifdef GENERATOR_FILE
extern int TARGET_FRIZ;
#else
  int x_TARGET_FRIZ;
#define TARGET_FRIZ global_options.x_TARGET_FRIZ
#endif
#ifdef GENERATOR_FILE
extern int rs6000_gen_cell_microcode;
#else
  int x_rs6000_gen_cell_microcode;
#define rs6000_gen_cell_microcode global_options.x_rs6000_gen_cell_microcode
#endif
#ifdef GENERATOR_FILE
extern const char *rs6000_sched_insert_nops_str;
#else
  const char *x_rs6000_sched_insert_nops_str;
#define rs6000_sched_insert_nops_str global_options.x_rs6000_sched_insert_nops_str
#endif
#ifdef GENERATOR_FILE
extern int rs6000_long_double_type_size;
#else
  int x_rs6000_long_double_type_size;
#define rs6000_long_double_type_size global_options.x_rs6000_long_double_type_size
#endif
#ifdef GENERATOR_FILE
extern int rs6000_default_long_calls;
#else
  int x_rs6000_default_long_calls;
#define rs6000_default_long_calls global_options.x_rs6000_default_long_calls
#endif
#ifdef GENERATOR_FILE
extern int TARGET_NO_SUM_IN_TOC;
#else
  int x_TARGET_NO_SUM_IN_TOC;
#define TARGET_NO_SUM_IN_TOC global_options.x_TARGET_NO_SUM_IN_TOC
#endif
#ifdef GENERATOR_FILE
extern int rs6000_optimize_swaps;
#else
  int x_rs6000_optimize_swaps;
#define rs6000_optimize_swaps global_options.x_rs6000_optimize_swaps
#endif
#ifdef GENERATOR_FILE
extern int rs6000_paired_float;
#else
  int x_rs6000_paired_float;
#define rs6000_paired_float global_options.x_rs6000_paired_float
#endif
#ifdef GENERATOR_FILE
extern int TARGET_POINTERS_TO_NESTED_FUNCTIONS;
#else
  int x_TARGET_POINTERS_TO_NESTED_FUNCTIONS;
#define TARGET_POINTERS_TO_NESTED_FUNCTIONS global_options.x_TARGET_POINTERS_TO_NESTED_FUNCTIONS
#endif
#ifdef GENERATOR_FILE
extern int TARGET_P9_DFORM_BOTH;
#else
  int x_TARGET_P9_DFORM_BOTH;
#define TARGET_P9_DFORM_BOTH global_options.x_TARGET_P9_DFORM_BOTH
#endif
#ifdef GENERATOR_FILE
extern int rs6000_sched_restricted_insns_priority;
#else
  int x_rs6000_sched_restricted_insns_priority;
#define rs6000_sched_restricted_insns_priority global_options.x_rs6000_sched_restricted_insns_priority
#endif
#ifdef GENERATOR_FILE
extern int profile_kernel;
#else
  int x_profile_kernel;
#define profile_kernel global_options.x_profile_kernel
#endif
#ifdef GENERATOR_FILE
extern int target_prototype;
#else
  int x_target_prototype;
#define target_prototype global_options.x_target_prototype
#endif
#ifdef GENERATOR_FILE
extern const char *rs6000_recip_name;
#else
  const char *x_rs6000_recip_name;
#define rs6000_recip_name global_options.x_rs6000_recip_name
#endif
#ifdef GENERATOR_FILE
extern int rs6000_regnames;
#else
  int x_rs6000_regnames;
#define rs6000_regnames global_options.x_rs6000_regnames
#endif
#ifdef GENERATOR_FILE
extern const char *rs6000_sched_costly_dep_str;
#else
  const char *x_rs6000_sched_costly_dep_str;
#define rs6000_sched_costly_dep_str global_options.x_rs6000_sched_costly_dep_str
#endif
#ifdef GENERATOR_FILE
extern int TARGET_SCHED_PROLOG;
#else
  int x_TARGET_SCHED_PROLOG;
#define TARGET_SCHED_PROLOG global_options.x_TARGET_SCHED_PROLOG
#endif
#ifdef GENERATOR_FILE
extern int TARGET_SCHED_GROUPS;
#else
  int x_TARGET_SCHED_GROUPS;
#define TARGET_SCHED_GROUPS global_options.x_TARGET_SCHED_GROUPS
#endif
#ifdef GENERATOR_FILE
extern const char *rs6000_sdata_name;
#else
  const char *x_rs6000_sdata_name;
#define rs6000_sdata_name global_options.x_rs6000_sdata_name
#endif
#ifdef GENERATOR_FILE
extern int rs6000_simple_fpu;
#else
  int x_rs6000_simple_fpu;
#define rs6000_simple_fpu global_options.x_rs6000_simple_fpu
#endif
#ifdef GENERATOR_FILE
extern int rs6000_single_float;
#else
  int x_rs6000_single_float;
#define rs6000_single_float global_options.x_rs6000_single_float
#endif
#ifdef GENERATOR_FILE
extern int TARGET_SINGLE_PIC_BASE;
#else
  int x_TARGET_SINGLE_PIC_BASE;
#define TARGET_SINGLE_PIC_BASE global_options.x_TARGET_SINGLE_PIC_BASE
#endif
#ifdef GENERATOR_FILE
extern int rs6000_spe;
#else
  int x_rs6000_spe;
#define rs6000_spe global_options.x_rs6000_spe
#endif
#ifdef GENERATOR_FILE
extern int tls_markers;
#else
  int x_tls_markers;
#define tls_markers global_options.x_tls_markers
#endif
#ifdef GENERATOR_FILE
extern int rs6000_tune_index;
#else
  int x_rs6000_tune_index;
#define rs6000_tune_index global_options.x_rs6000_tune_index
#endif
#ifdef GENERATOR_FILE
extern int TARGET_UPPER_REGS;
#else
  int x_TARGET_UPPER_REGS;
#define TARGET_UPPER_REGS global_options.x_TARGET_UPPER_REGS
#endif
#ifdef GENERATOR_FILE
extern const char *rs6000_veclibabi_name;
#else
  const char *x_rs6000_veclibabi_name;
#define rs6000_veclibabi_name global_options.x_rs6000_veclibabi_name
#endif
#ifdef GENERATOR_FILE
extern int TARGET_VECTORIZE_BUILTINS;
#else
  int x_TARGET_VECTORIZE_BUILTINS;
#define TARGET_VECTORIZE_BUILTINS global_options.x_TARGET_VECTORIZE_BUILTINS
#endif
#ifdef GENERATOR_FILE
extern int TARGET_ALTIVEC_VRSAVE;
#else
  int x_TARGET_ALTIVEC_VRSAVE;
#define TARGET_ALTIVEC_VRSAVE global_options.x_TARGET_ALTIVEC_VRSAVE
#endif
#ifdef GENERATOR_FILE
extern int TARGET_VSX_ALIGN_128;
#else
  int x_TARGET_VSX_ALIGN_128;
#define TARGET_VSX_ALIGN_128 global_options.x_TARGET_VSX_ALIGN_128
#endif
#ifdef GENERATOR_FILE
extern int TARGET_VSX_SCALAR_DOUBLE;
#else
  int x_TARGET_VSX_SCALAR_DOUBLE;
#define TARGET_VSX_SCALAR_DOUBLE global_options.x_TARGET_VSX_SCALAR_DOUBLE
#endif
#ifdef GENERATOR_FILE
extern int TARGET_VSX_SCALAR_FLOAT;
#else
  int x_TARGET_VSX_SCALAR_FLOAT;
#define TARGET_VSX_SCALAR_FLOAT global_options.x_TARGET_VSX_SCALAR_FLOAT
#endif
#ifdef GENERATOR_FILE
extern int rs6000_warn_altivec_long;
#else
  int x_rs6000_warn_altivec_long;
#define rs6000_warn_altivec_long global_options.x_rs6000_warn_altivec_long
#endif
#ifdef GENERATOR_FILE
extern int rs6000_warn_cell_microcode;
#else
  int x_rs6000_warn_cell_microcode;
#define rs6000_warn_cell_microcode global_options.x_rs6000_warn_cell_microcode
#endif
#ifdef GENERATOR_FILE
extern int rs6000_xilinx_fpu;
#else
  int x_rs6000_xilinx_fpu;
#define rs6000_xilinx_fpu global_options.x_rs6000_xilinx_fpu
#endif
#ifdef GENERATOR_FILE
extern int TARGET_XL_COMPAT;
#else
  int x_TARGET_XL_COMPAT;
#define TARGET_XL_COMPAT global_options.x_TARGET_XL_COMPAT
#endif
#ifdef GENERATOR_FILE
extern const char *asm_file_name;
#else
  const char *x_asm_file_name;
#define asm_file_name global_options.x_asm_file_name
#endif
#ifdef GENERATOR_FILE
extern int pass_exit_codes;
#else
  int x_pass_exit_codes;
#define pass_exit_codes global_options.x_pass_exit_codes
#endif
#ifdef GENERATOR_FILE
extern int flag_pedantic_errors;
#else
  int x_flag_pedantic_errors;
#define flag_pedantic_errors global_options.x_flag_pedantic_errors
#endif
#ifdef GENERATOR_FILE
extern int use_pipes;
#else
  int x_use_pipes;
#define use_pipes global_options.x_use_pipes
#endif
#ifdef GENERATOR_FILE
extern const char *print_file_name;
#else
  const char *x_print_file_name;
#define print_file_name global_options.x_print_file_name
#endif
#ifdef GENERATOR_FILE
extern int print_multi_directory;
#else
  int x_print_multi_directory;
#define print_multi_directory global_options.x_print_multi_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multi_lib;
#else
  int x_print_multi_lib;
#define print_multi_lib global_options.x_print_multi_lib
#endif
#ifdef GENERATOR_FILE
extern int print_multi_os_directory;
#else
  int x_print_multi_os_directory;
#define print_multi_os_directory global_options.x_print_multi_os_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multiarch;
#else
  int x_print_multiarch;
#define print_multiarch global_options.x_print_multiarch
#endif
#ifdef GENERATOR_FILE
extern const char *print_prog_name;
#else
  const char *x_print_prog_name;
#define print_prog_name global_options.x_print_prog_name
#endif
#ifdef GENERATOR_FILE
extern int print_search_dirs;
#else
  int x_print_search_dirs;
#define print_search_dirs global_options.x_print_search_dirs
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot;
#else
  int x_print_sysroot;
#define print_sysroot global_options.x_print_sysroot
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot_headers_suffix;
#else
  int x_print_sysroot_headers_suffix;
#define print_sysroot_headers_suffix global_options.x_print_sysroot_headers_suffix
#endif
#ifdef GENERATOR_FILE
extern int quiet_flag;
#else
  int x_quiet_flag;
#define quiet_flag global_options.x_quiet_flag
#endif
#ifdef GENERATOR_FILE
extern int report_times;
#else
  int x_report_times;
#define report_times global_options.x_report_times
#endif
#ifdef GENERATOR_FILE
extern int flag_undef;
#else
  int x_flag_undef;
#define flag_undef global_options.x_flag_undef
#endif
#ifdef GENERATOR_FILE
extern int verbose_flag;
#else
  int x_verbose_flag;
#define verbose_flag global_options.x_verbose_flag
#endif
#ifdef GENERATOR_FILE
extern int version_flag;
#else
  int x_version_flag;
#define version_flag global_options.x_version_flag
#endif
#ifdef GENERATOR_FILE
extern int inhibit_warnings;
#else
  int x_inhibit_warnings;
#define inhibit_warnings global_options.x_inhibit_warnings
#endif
#ifdef GENERATOR_FILE
extern const char *wrapper_string;
#else
  const char *x_wrapper_string;
#define wrapper_string global_options.x_wrapper_string
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mads;
#define x_VAR_mads do_not_use
#endif
#ifndef GENERATOR_FILE
  const char *x_VAR_mdebug_;
#define x_VAR_mdebug_ do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_memb;
#define x_VAR_memb do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mfull_toc;
#define x_VAR_mfull_toc do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mmvme;
#define x_VAR_mmvme do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mnewlib;
#define x_VAR_mnewlib do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mno_toc;
#define x_VAR_mno_toc do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mno_traceback;
#define x_VAR_mno_traceback do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mrecip;
#define x_VAR_mrecip do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mrelocatable_lib;
#define x_VAR_mrelocatable_lib do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_msdata;
#define x_VAR_msdata do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mshlib;
#define x_VAR_mshlib do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_msim;
#define x_VAR_msim do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mtoc;
#define x_VAR_mtoc do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_myellowknife;
#define x_VAR_myellowknife do_not_use
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_associative_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_cx_limited_range;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_finite_math_only;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_errno_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_reciprocal_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_rounding_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signaling_nans;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signed_zeros;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_trapping_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_unsafe_math_optimizations;
#endif
#ifndef GENERATOR_FILE
};
extern struct gcc_options global_options;
extern const struct gcc_options global_options_init;
extern struct gcc_options global_options_set;
#define target_flags_explicit global_options_set.x_target_flags
#endif
#endif

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)

/* Structure to save/restore optimization and target specific options.  */
struct GTY(()) cl_optimization
{
  int x_align_functions;
  int x_align_jumps;
  int x_align_labels;
  int x_align_loops;
  int x_flag_sched_stalled_insns;
  int x_flag_sched_stalled_insns_dep;
  int x_flag_tree_parallelize_loops;
  enum fp_contract_mode x_flag_fp_contract_mode;
  enum ira_algorithm x_flag_ira_algorithm;
  enum ira_region x_flag_ira_region;
  enum reorder_blocks_algorithm x_flag_reorder_blocks_algorithm;
  enum vect_cost_model x_flag_simd_cost_model;
  enum stack_reuse_level x_flag_stack_reuse;
  enum vect_cost_model x_flag_vect_cost_model;
  unsigned char x_optimize;
  unsigned char x_optimize_size;
  unsigned char x_optimize_debug;
  signed char x_flag_aggressive_loop_optimizations;
  signed char x_flag_associative_math;
  signed char x_flag_asynchronous_unwind_tables;
  signed char x_flag_auto_inc_dec;
  signed char x_flag_branch_on_count_reg;
  signed char x_flag_branch_probabilities;
  signed char x_flag_branch_target_load_optimize;
  signed char x_flag_branch_target_load_optimize2;
  signed char x_flag_btr_bb_exclusive;
  signed char x_flag_caller_saves;
  signed char x_flag_combine_stack_adjustments;
  signed char x_flag_compare_elim_after_reload;
  signed char x_flag_conserve_stack;
  signed char x_flag_cprop_registers;
  signed char x_flag_crossjumping;
  signed char x_flag_cse_follow_jumps;
  signed char x_flag_cx_fortran_rules;
  signed char x_flag_cx_limited_range;
  signed char x_flag_dce;
  signed char x_flag_defer_pop;
  signed char x_flag_delayed_branch;
  signed char x_flag_delete_dead_exceptions;
  signed char x_flag_delete_null_pointer_checks;
  signed char x_flag_devirtualize;
  signed char x_flag_devirtualize_speculatively;
  signed char x_flag_dse;
  signed char x_flag_early_inlining;
  signed char x_flag_exceptions;
  signed char x_flag_expensive_optimizations;
  signed char x_flag_finite_math_only;
  signed char x_flag_float_store;
  signed char x_flag_forward_propagate;
  signed char x_flag_no_function_cse;
  signed char x_flag_gcse;
  signed char x_flag_gcse_after_reload;
  signed char x_flag_gcse_las;
  signed char x_flag_gcse_lm;
  signed char x_flag_gcse_sm;
  signed char x_flag_graphite;
  signed char x_flag_graphite_identity;
  signed char x_flag_guess_branch_prob;
  signed char x_flag_hoist_adjacent_loads;
  signed char x_flag_if_conversion;
  signed char x_flag_if_conversion2;
  signed char x_flag_indirect_inlining;
  signed char x_flag_no_inline;
  signed char x_flag_inline_atomics;
  signed char x_flag_inline_functions;
  signed char x_flag_inline_functions_called_once;
  signed char x_flag_inline_small_functions;
  signed char x_flag_ipa_cp;
  signed char x_flag_ipa_cp_alignment;
  signed char x_flag_ipa_cp_clone;
  signed char x_flag_ipa_icf;
  signed char x_flag_ipa_icf_functions;
  signed char x_flag_ipa_profile;
  signed char x_flag_ipa_pta;
  signed char x_flag_ipa_pure_const;
  signed char x_flag_ipa_ra;
  signed char x_flag_ipa_reference;
  signed char x_flag_ipa_sra;
  signed char x_flag_ira_hoist_pressure;
  signed char x_flag_ira_loop_pressure;
  signed char x_flag_ira_share_save_slots;
  signed char x_flag_ira_share_spill_slots;
  signed char x_flag_isolate_erroneous_paths_attribute;
  signed char x_flag_isolate_erroneous_paths_dereference;
  signed char x_flag_ivopts;
  signed char x_flag_jump_tables;
  signed char x_flag_keep_gc_roots_live;
  signed char x_flag_lifetime_dse;
  signed char x_flag_live_range_shrinkage;
  signed char x_flag_loop_nest_optimize;
  signed char x_flag_loop_parallelize_all;
  signed char x_flag_lra_remat;
  signed char x_flag_errno_math;
  signed char x_flag_modulo_sched;
  signed char x_flag_modulo_sched_allow_regmoves;
  signed char x_flag_move_loop_invariants;
  signed char x_flag_non_call_exceptions;
  signed char x_flag_nothrow_opt;
  signed char x_flag_omit_frame_pointer;
  signed char x_flag_opt_info;
  signed char x_flag_optimize_sibling_calls;
  signed char x_flag_optimize_strlen;
  signed char x_flag_pack_struct;
  signed char x_flag_partial_inlining;
  signed char x_flag_peel_loops;
  signed char x_flag_no_peephole;
  signed char x_flag_peephole2;
  signed char x_flag_plt;
  signed char x_flag_predictive_commoning;
  signed char x_flag_prefetch_loop_arrays;
  signed char x_flag_reciprocal_math;
  signed char x_flag_pcc_struct_return;
  signed char x_flag_rename_registers;
  signed char x_flag_reorder_blocks;
  signed char x_flag_reorder_blocks_and_partition;
  signed char x_flag_reorder_functions;
  signed char x_flag_rerun_cse_after_loop;
  signed char x_flag_resched_modulo_sched;
  signed char x_flag_rounding_math;
  signed char x_flag_rtti;
  signed char x_flag_sched_critical_path_heuristic;
  signed char x_flag_sched_dep_count_heuristic;
  signed char x_flag_sched_group_heuristic;
  signed char x_flag_schedule_interblock;
  signed char x_flag_sched_last_insn_heuristic;
  signed char x_flag_sched_pressure;
  signed char x_flag_sched_rank_heuristic;
  signed char x_flag_schedule_speculative;
  signed char x_flag_sched_spec_insn_heuristic;
  signed char x_flag_schedule_speculative_load;
  signed char x_flag_schedule_speculative_load_dangerous;
  signed char x_flag_sched2_use_superblocks;
  signed char x_flag_schedule_fusion;
  signed char x_flag_schedule_insns;
  signed char x_flag_schedule_insns_after_reload;
  signed char x_flag_section_anchors;
  signed char x_flag_sel_sched_pipelining;
  signed char x_flag_sel_sched_pipelining_outer_loops;
  signed char x_flag_sel_sched_reschedule_pipelined;
  signed char x_flag_selective_scheduling;
  signed char x_flag_selective_scheduling2;
  signed char x_flag_short_enums;
  signed char x_flag_short_wchar;
  signed char x_flag_shrink_wrap;
  signed char x_flag_signaling_nans;
  signed char x_flag_signed_zeros;
  signed char x_flag_single_precision_constant;
  signed char x_flag_split_ivs_in_unroller;
  signed char x_flag_split_paths;
  signed char x_flag_split_wide_types;
  signed char x_flag_ssa_backprop;
  signed char x_flag_ssa_phiopt;
  signed char x_flag_stdarg_opt;
  signed char x_flag_strict_aliasing;
  signed char x_flag_strict_enums;
  signed char x_flag_strict_overflow;
  signed char x_flag_strict_volatile_bitfields;
  signed char x_flag_thread_jumps;
  signed char x_flag_threadsafe_statics;
  signed char x_flag_tracer;
  signed char x_flag_trapping_math;
  signed char x_flag_trapv;
  signed char x_flag_tree_bit_ccp;
  signed char x_flag_tree_builtin_call_dce;
  signed char x_flag_tree_ccp;
  signed char x_flag_tree_ch;
  signed char x_flag_tree_coalesce_vars;
  signed char x_flag_tree_copy_prop;
  signed char x_flag_tree_cselim;
  signed char x_flag_tree_dce;
  signed char x_flag_tree_dom;
  signed char x_flag_tree_dse;
  signed char x_flag_tree_forwprop;
  signed char x_flag_tree_fre;
  signed char x_flag_tree_loop_distribute_patterns;
  signed char x_flag_tree_loop_distribution;
  signed char x_flag_tree_loop_if_convert;
  signed char x_flag_tree_loop_if_convert_stores;
  signed char x_flag_tree_loop_im;
  signed char x_flag_tree_loop_ivcanon;
  signed char x_flag_tree_loop_optimize;
  signed char x_flag_tree_loop_vectorize;
  signed char x_flag_tree_live_range_split;
  signed char x_flag_tree_partial_pre;
  signed char x_flag_tree_phiprop;
  signed char x_flag_tree_pre;
  signed char x_flag_tree_pta;
  signed char x_flag_tree_reassoc;
  signed char x_flag_tree_scev_cprop;
  signed char x_flag_tree_sink;
  signed char x_flag_tree_slp_vectorize;
  signed char x_flag_tree_slsr;
  signed char x_flag_tree_sra;
  signed char x_flag_tree_switch_conversion;
  signed char x_flag_tree_tail_merge;
  signed char x_flag_tree_ter;
  signed char x_flag_tree_vectorize;
  signed char x_flag_tree_vrp;
  signed char x_flag_unconstrained_commons;
  signed char x_flag_unroll_all_loops;
  signed char x_flag_unroll_loops;
  signed char x_flag_unsafe_loop_optimizations;
  signed char x_flag_unsafe_math_optimizations;
  signed char x_flag_unswitch_loops;
  signed char x_flag_unwind_tables;
  signed char x_flag_var_tracking;
  signed char x_flag_var_tracking_assignments;
  signed char x_flag_var_tracking_assignments_toggle;
  signed char x_flag_var_tracking_uninit;
  signed char x_flag_variable_expansion_in_unroller;
  signed char x_flag_value_profile_transformations;
  signed char x_flag_web;
  signed char x_flag_wrapv;
};

/* Structure to save/restore selected target specific options.  */
struct GTY(()) cl_target_option
{
  HOST_WIDE_INT x_rs6000_isa_flags;
  HOST_WIDE_INT x_rs6000_isa_flags_explicit;
  HOST_WIDE_INT x_rs6000_builtin_mask;
  enum processor_type x_rs6000_cpu;
  enum rs6000_abi x_rs6000_current_abi;
  enum rs6000_cmodel x_rs6000_current_cmodel;
  enum rs6000_dependence_cost x_rs6000_sched_costly_dep;
  enum rs6000_nop_insertion x_rs6000_sched_insert_nops;
  enum rs6000_sdata_type x_rs6000_sdata;
  enum rs6000_traceback_type x_rs6000_traceback;
  int x_rs6000_tls_size;
  unsigned int x_rs6000_debug;
  unsigned int x_rs6000_recip_control;
  int x_rs6000_block_move_inline_limit;
  int x_rs6000_cpu_index;
  int x_rs6000_long_double_type_size;
  int x_rs6000_sched_restricted_insns_priority;
  int x_rs6000_tune_index;
  unsigned char x_can_override_loop_align;
  unsigned char x_rs6000_align_branch_targets;
  unsigned char x_rs6000_alignment_flags;
  unsigned char x_rs6000_always_hint;
  unsigned char x_rs6000_sched_groups;
  signed char x_rs6000_altivec_abi;
  signed char x_rs6000_darwin64_abi;
  signed char x_rs6000_elf_abi;
  signed char x_rs6000_ieeequad;
  signed char x_rs6000_spe_abi;
  signed char x_aix_struct_return;
  signed char x_TARGET_ALIGN_BRANCH_TARGETS;
  signed char x_TARGET_ALLOW_DF_PERMUTE;
  signed char x_TARGET_ALLOW_MOVMISALIGN;
  signed char x_rs6000_altivec_element_order;
  signed char x_TARGET_ALWAYS_HINT;
  signed char x_TARGET_AVOID_XFORM;
  signed char x_TARGET_NO_BITFIELD_TYPE;
  signed char x_TARGET_NO_BITFIELD_WORD;
  signed char x_secure_plt;
  signed char x_rs6000_compat_align_parm;
  signed char x_rs6000_double_float;
  unsigned char x_rs6000_float_gprs;
  signed char x_TARGET_NO_FP_IN_TOC;
  signed char x_TARGET_FRIZ;
  signed char x_rs6000_gen_cell_microcode;
  signed char x_rs6000_default_long_calls;
  signed char x_TARGET_NO_SUM_IN_TOC;
  signed char x_rs6000_optimize_swaps;
  signed char x_rs6000_paired_float;
  signed char x_TARGET_POINTERS_TO_NESTED_FUNCTIONS;
  signed char x_TARGET_P9_DFORM_BOTH;
  signed char x_profile_kernel;
  signed char x_target_prototype;
  signed char x_rs6000_regnames;
  signed char x_TARGET_SCHED_PROLOG;
  signed char x_TARGET_SCHED_GROUPS;
  signed char x_rs6000_simple_fpu;
  signed char x_rs6000_single_float;
  signed char x_rs6000_spe;
  signed char x_tls_markers;
  signed char x_TARGET_UPPER_REGS;
  signed char x_TARGET_VECTORIZE_BUILTINS;
  signed char x_TARGET_ALTIVEC_VRSAVE;
  signed char x_TARGET_VSX_ALIGN_128;
  signed char x_rs6000_warn_altivec_long;
  signed char x_rs6000_warn_cell_microcode;
  signed char x_rs6000_xilinx_fpu;
  signed char x_TARGET_XL_COMPAT;
};


/* Save optimization variables into a structure.  */
extern void cl_optimization_save (struct cl_optimization *, struct gcc_options *);

/* Restore optimization variables from a structure.  */
extern void cl_optimization_restore (struct gcc_options *, struct cl_optimization *);

/* Print optimization variables from a structure.  */
extern void cl_optimization_print (FILE *, int, struct cl_optimization *);

/* Print different optimization variables from structures provided as arguments.  */
extern void cl_optimization_print_diff (FILE *, int, cl_optimization *ptr1, cl_optimization *ptr2);

/* Save selected option variables into a structure.  */
extern void cl_target_option_save (struct cl_target_option *, struct gcc_options *);

/* Restore selected option variables from a structure.  */
extern void cl_target_option_restore (struct gcc_options *, struct cl_target_option *);

/* Print target option variables from a structure.  */
extern void cl_target_option_print (FILE *, int, struct cl_target_option *);

/* Print different target option variables from structures provided as arguments.  */
extern void cl_target_option_print_diff (FILE *, int, cl_target_option *ptr1, cl_target_option *ptr2);

/* Compare two target option variables from a structure.  */
extern bool cl_target_option_eq (const struct cl_target_option *, const struct cl_target_option *);

/* Hash option variables from a structure.  */
extern hashval_t cl_target_option_hash (const struct cl_target_option *);

/* Hash optimization from a structure.  */
extern hashval_t cl_optimization_hash (const struct cl_optimization *);

/* Generator files may not have access to location_t, and don't need these.  */
#if defined(UNKNOWN_LOCATION)
bool                                                                  
common_handle_option_auto (struct gcc_options *opts,                  
                           struct gcc_options *opts_set,              
                           const struct cl_decoded_option *decoded,   
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
C_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
CXX_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
LTO_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
ObjC_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
ObjCXX_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
void cpp_handle_option_auto (const struct gcc_options * opts, size_t scode,
                             struct cpp_options * cpp_opts);
void init_global_opts_from_cpp(struct gcc_options * opts,      
                               const struct cpp_options * cpp_opts);
#endif
#endif

#define OPTION_MASK_64BIT (HOST_WIDE_INT_1 << 0)
#define OPTION_MASK_ALTIVEC (HOST_WIDE_INT_1 << 1)
#define OPTION_MASK_LITTLE_ENDIAN (HOST_WIDE_INT_1 << 2)
#define OPTION_MASK_CMPB (HOST_WIDE_INT_1 << 3)
#define OPTION_MASK_CRYPTO (HOST_WIDE_INT_1 << 4)
#define OPTION_MASK_DIRECT_MOVE (HOST_WIDE_INT_1 << 5)
#define OPTION_MASK_DLMZB (HOST_WIDE_INT_1 << 6)
#define OPTION_MASK_EABI (HOST_WIDE_INT_1 << 7)
#define OPTION_MASK_EFFICIENT_UNALIGNED_VSX (HOST_WIDE_INT_1 << 8)
#define OPTION_MASK_FLOAT128 (HOST_WIDE_INT_1 << 9)
#define OPTION_MASK_FLOAT128_CVT (HOST_WIDE_INT_1 << 10)
#define OPTION_MASK_FLOAT128_HW (HOST_WIDE_INT_1 << 11)
#define OPTION_MASK_FPRND (HOST_WIDE_INT_1 << 12)
#define OPTION_MASK_DFP (HOST_WIDE_INT_1 << 13)
#define OPTION_MASK_SOFT_FLOAT (HOST_WIDE_INT_1 << 14)
#define OPTION_MASK_HTM (HOST_WIDE_INT_1 << 15)
#define OPTION_MASK_ISEL (HOST_WIDE_INT_1 << 16)
#define OPTION_MASK_LRA (HOST_WIDE_INT_1 << 17)
#define OPTION_MASK_MFCRF (HOST_WIDE_INT_1 << 18)
#define OPTION_MASK_MFPGPR (HOST_WIDE_INT_1 << 19)
#define OPTION_MASK_MINIMAL_TOC (HOST_WIDE_INT_1 << 20)
#define OPTION_MASK_MODULO (HOST_WIDE_INT_1 << 21)
#define OPTION_MASK_MULHW (HOST_WIDE_INT_1 << 22)
#define OPTION_MASK_MULTIPLE (HOST_WIDE_INT_1 << 23)
#define OPTION_MASK_NO_UPDATE (HOST_WIDE_INT_1 << 24)
#define OPTION_MASK_POPCNTB (HOST_WIDE_INT_1 << 25)
#define OPTION_MASK_POPCNTD (HOST_WIDE_INT_1 << 26)
#define OPTION_MASK_P8_FUSION (HOST_WIDE_INT_1 << 27)
#define OPTION_MASK_P8_FUSION_SIGN (HOST_WIDE_INT_1 << 28)
#define OPTION_MASK_P8_VECTOR (HOST_WIDE_INT_1 << 29)
#define OPTION_MASK_P9_DFORM_SCALAR (HOST_WIDE_INT_1 << 30)
#define OPTION_MASK_P9_DFORM_VECTOR (HOST_WIDE_INT_1 << 31)
#define OPTION_MASK_P9_FUSION (HOST_WIDE_INT_1 << 32)
#define OPTION_MASK_P9_MINMAX (HOST_WIDE_INT_1 << 33)
#define OPTION_MASK_P9_MISC (HOST_WIDE_INT_1 << 34)
#define OPTION_MASK_P9_VECTOR (HOST_WIDE_INT_1 << 35)
#define OPTION_MASK_PPC_GFXOPT (HOST_WIDE_INT_1 << 36)
#define OPTION_MASK_PPC_GPOPT (HOST_WIDE_INT_1 << 37)
#define OPTION_MASK_POWERPC64 (HOST_WIDE_INT_1 << 38)
#define OPTION_MASK_QUAD_MEMORY (HOST_WIDE_INT_1 << 39)
#define OPTION_MASK_QUAD_MEMORY_ATOMIC (HOST_WIDE_INT_1 << 40)
#define OPTION_MASK_RECIP_PRECISION (HOST_WIDE_INT_1 << 41)
#define OPTION_MASK_RELOCATABLE (HOST_WIDE_INT_1 << 42)
#define OPTION_MASK_SAVE_TOC_INDIRECT (HOST_WIDE_INT_1 << 43)
#define OPTION_MASK_STRICT_ALIGN (HOST_WIDE_INT_1 << 44)
#define OPTION_MASK_STRING (HOST_WIDE_INT_1 << 45)
#define OPTION_MASK_TOC_FUSION (HOST_WIDE_INT_1 << 46)
#define OPTION_MASK_UPPER_REGS_DF (HOST_WIDE_INT_1 << 47)
#define OPTION_MASK_UPPER_REGS_SF (HOST_WIDE_INT_1 << 48)
#define OPTION_MASK_VSX (HOST_WIDE_INT_1 << 49)
#define OPTION_MASK_VSX_TIMODE (HOST_WIDE_INT_1 << 50)
 #if defined(HOST_BITS_PER_WIDE_INT) && 51 >= HOST_BITS_PER_WIDE_INT
#error too many masks for rs6000_isa_flags
#endif

#define TARGET_64BIT ((rs6000_isa_flags & OPTION_MASK_64BIT) != 0)
#define TARGET_64BIT_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_64BIT) != 0)
#define TARGET_ALTIVEC ((rs6000_isa_flags & OPTION_MASK_ALTIVEC) != 0)
#define TARGET_ALTIVEC_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_ALTIVEC) != 0)
#define TARGET_LITTLE_ENDIAN ((rs6000_isa_flags & OPTION_MASK_LITTLE_ENDIAN) != 0)
#define TARGET_LITTLE_ENDIAN_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_LITTLE_ENDIAN) != 0)
#define TARGET_CMPB ((rs6000_isa_flags & OPTION_MASK_CMPB) != 0)
#define TARGET_CMPB_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_CMPB) != 0)
#define TARGET_CRYPTO ((rs6000_isa_flags & OPTION_MASK_CRYPTO) != 0)
#define TARGET_CRYPTO_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_CRYPTO) != 0)
#define TARGET_DIRECT_MOVE ((rs6000_isa_flags & OPTION_MASK_DIRECT_MOVE) != 0)
#define TARGET_DIRECT_MOVE_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_DIRECT_MOVE) != 0)
#define TARGET_DLMZB ((rs6000_isa_flags & OPTION_MASK_DLMZB) != 0)
#define TARGET_DLMZB_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_DLMZB) != 0)
#define TARGET_EABI ((rs6000_isa_flags & OPTION_MASK_EABI) != 0)
#define TARGET_EABI_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_EABI) != 0)
#define TARGET_EFFICIENT_UNALIGNED_VSX ((rs6000_isa_flags & OPTION_MASK_EFFICIENT_UNALIGNED_VSX) != 0)
#define TARGET_EFFICIENT_UNALIGNED_VSX_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_EFFICIENT_UNALIGNED_VSX) != 0)
#define TARGET_FLOAT128 ((rs6000_isa_flags & OPTION_MASK_FLOAT128) != 0)
#define TARGET_FLOAT128_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_FLOAT128) != 0)
#define TARGET_FLOAT128_CVT ((rs6000_isa_flags & OPTION_MASK_FLOAT128_CVT) != 0)
#define TARGET_FLOAT128_CVT_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_FLOAT128_CVT) != 0)
#define TARGET_FLOAT128_HW ((rs6000_isa_flags & OPTION_MASK_FLOAT128_HW) != 0)
#define TARGET_FLOAT128_HW_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_FLOAT128_HW) != 0)
#define TARGET_FPRND ((rs6000_isa_flags & OPTION_MASK_FPRND) != 0)
#define TARGET_FPRND_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_FPRND) != 0)
#define TARGET_DFP ((rs6000_isa_flags & OPTION_MASK_DFP) != 0)
#define TARGET_DFP_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_DFP) != 0)
#define TARGET_SOFT_FLOAT ((rs6000_isa_flags & OPTION_MASK_SOFT_FLOAT) != 0)
#define TARGET_SOFT_FLOAT_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_SOFT_FLOAT) != 0)
#define TARGET_HTM ((rs6000_isa_flags & OPTION_MASK_HTM) != 0)
#define TARGET_HTM_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_HTM) != 0)
#define TARGET_ISEL ((rs6000_isa_flags & OPTION_MASK_ISEL) != 0)
#define TARGET_ISEL_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_ISEL) != 0)
#define TARGET_LRA ((rs6000_isa_flags & OPTION_MASK_LRA) != 0)
#define TARGET_LRA_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_LRA) != 0)
#define TARGET_MFCRF ((rs6000_isa_flags & OPTION_MASK_MFCRF) != 0)
#define TARGET_MFCRF_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_MFCRF) != 0)
#define TARGET_MFPGPR ((rs6000_isa_flags & OPTION_MASK_MFPGPR) != 0)
#define TARGET_MFPGPR_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_MFPGPR) != 0)
#define TARGET_MINIMAL_TOC ((rs6000_isa_flags & OPTION_MASK_MINIMAL_TOC) != 0)
#define TARGET_MINIMAL_TOC_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_MINIMAL_TOC) != 0)
#define TARGET_MODULO ((rs6000_isa_flags & OPTION_MASK_MODULO) != 0)
#define TARGET_MODULO_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_MODULO) != 0)
#define TARGET_MULHW ((rs6000_isa_flags & OPTION_MASK_MULHW) != 0)
#define TARGET_MULHW_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_MULHW) != 0)
#define TARGET_MULTIPLE ((rs6000_isa_flags & OPTION_MASK_MULTIPLE) != 0)
#define TARGET_MULTIPLE_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_MULTIPLE) != 0)
#define TARGET_NO_UPDATE ((rs6000_isa_flags & OPTION_MASK_NO_UPDATE) != 0)
#define TARGET_NO_UPDATE_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_NO_UPDATE) != 0)
#define TARGET_POPCNTB ((rs6000_isa_flags & OPTION_MASK_POPCNTB) != 0)
#define TARGET_POPCNTB_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_POPCNTB) != 0)
#define TARGET_POPCNTD ((rs6000_isa_flags & OPTION_MASK_POPCNTD) != 0)
#define TARGET_POPCNTD_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_POPCNTD) != 0)
#define TARGET_P8_FUSION ((rs6000_isa_flags & OPTION_MASK_P8_FUSION) != 0)
#define TARGET_P8_FUSION_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P8_FUSION) != 0)
#define TARGET_P8_FUSION_SIGN ((rs6000_isa_flags & OPTION_MASK_P8_FUSION_SIGN) != 0)
#define TARGET_P8_FUSION_SIGN_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P8_FUSION_SIGN) != 0)
#define TARGET_P8_VECTOR ((rs6000_isa_flags & OPTION_MASK_P8_VECTOR) != 0)
#define TARGET_P8_VECTOR_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P8_VECTOR) != 0)
#define TARGET_P9_DFORM_SCALAR ((rs6000_isa_flags & OPTION_MASK_P9_DFORM_SCALAR) != 0)
#define TARGET_P9_DFORM_SCALAR_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P9_DFORM_SCALAR) != 0)
#define TARGET_P9_DFORM_VECTOR ((rs6000_isa_flags & OPTION_MASK_P9_DFORM_VECTOR) != 0)
#define TARGET_P9_DFORM_VECTOR_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P9_DFORM_VECTOR) != 0)
#define TARGET_P9_FUSION ((rs6000_isa_flags & OPTION_MASK_P9_FUSION) != 0)
#define TARGET_P9_FUSION_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P9_FUSION) != 0)
#define TARGET_P9_MINMAX ((rs6000_isa_flags & OPTION_MASK_P9_MINMAX) != 0)
#define TARGET_P9_MINMAX_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P9_MINMAX) != 0)
#define TARGET_P9_MISC ((rs6000_isa_flags & OPTION_MASK_P9_MISC) != 0)
#define TARGET_P9_MISC_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P9_MISC) != 0)
#define TARGET_P9_VECTOR ((rs6000_isa_flags & OPTION_MASK_P9_VECTOR) != 0)
#define TARGET_P9_VECTOR_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_P9_VECTOR) != 0)
#define TARGET_PPC_GFXOPT ((rs6000_isa_flags & OPTION_MASK_PPC_GFXOPT) != 0)
#define TARGET_PPC_GFXOPT_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_PPC_GFXOPT) != 0)
#define TARGET_PPC_GPOPT ((rs6000_isa_flags & OPTION_MASK_PPC_GPOPT) != 0)
#define TARGET_PPC_GPOPT_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_PPC_GPOPT) != 0)
#define TARGET_POWERPC64 ((rs6000_isa_flags & OPTION_MASK_POWERPC64) != 0)
#define TARGET_POWERPC64_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_POWERPC64) != 0)
#define TARGET_QUAD_MEMORY ((rs6000_isa_flags & OPTION_MASK_QUAD_MEMORY) != 0)
#define TARGET_QUAD_MEMORY_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_QUAD_MEMORY) != 0)
#define TARGET_QUAD_MEMORY_ATOMIC ((rs6000_isa_flags & OPTION_MASK_QUAD_MEMORY_ATOMIC) != 0)
#define TARGET_QUAD_MEMORY_ATOMIC_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_QUAD_MEMORY_ATOMIC) != 0)
#define TARGET_RECIP_PRECISION ((rs6000_isa_flags & OPTION_MASK_RECIP_PRECISION) != 0)
#define TARGET_RECIP_PRECISION_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_RECIP_PRECISION) != 0)
#define TARGET_RELOCATABLE ((rs6000_isa_flags & OPTION_MASK_RELOCATABLE) != 0)
#define TARGET_RELOCATABLE_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_RELOCATABLE) != 0)
#define TARGET_SAVE_TOC_INDIRECT ((rs6000_isa_flags & OPTION_MASK_SAVE_TOC_INDIRECT) != 0)
#define TARGET_SAVE_TOC_INDIRECT_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_SAVE_TOC_INDIRECT) != 0)
#define TARGET_STRICT_ALIGN ((rs6000_isa_flags & OPTION_MASK_STRICT_ALIGN) != 0)
#define TARGET_STRICT_ALIGN_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_STRICT_ALIGN) != 0)
#define TARGET_STRING ((rs6000_isa_flags & OPTION_MASK_STRING) != 0)
#define TARGET_STRING_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_STRING) != 0)
#define TARGET_TOC_FUSION ((rs6000_isa_flags & OPTION_MASK_TOC_FUSION) != 0)
#define TARGET_TOC_FUSION_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_TOC_FUSION) != 0)
#define TARGET_UPPER_REGS_DF ((rs6000_isa_flags & OPTION_MASK_UPPER_REGS_DF) != 0)
#define TARGET_UPPER_REGS_DF_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_UPPER_REGS_DF) != 0)
#define TARGET_UPPER_REGS_SF ((rs6000_isa_flags & OPTION_MASK_UPPER_REGS_SF) != 0)
#define TARGET_UPPER_REGS_SF_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_UPPER_REGS_SF) != 0)
#define TARGET_VSX ((rs6000_isa_flags & OPTION_MASK_VSX) != 0)
#define TARGET_VSX_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_VSX) != 0)
#define TARGET_VSX_TIMODE ((rs6000_isa_flags & OPTION_MASK_VSX_TIMODE) != 0)
#define TARGET_VSX_TIMODE_P(rs6000_isa_flags) ((rs6000_isa_flags & OPTION_MASK_VSX_TIMODE) != 0)

#define TARGET_HARD_FLOAT ((rs6000_isa_flags & OPTION_MASK_SOFT_FLOAT) == 0)
#define TARGET_UPDATE ((rs6000_isa_flags & OPTION_MASK_NO_UPDATE) == 0)

#define CL_C          (1U << 0)
#define CL_CXX        (1U << 1)
#define CL_LTO        (1U << 2)
#define CL_ObjC       (1U << 3)
#define CL_ObjCXX     (1U << 4)
#define CL_LANG_ALL   ((1U << 5) - 1)

enum opt_code
{
  OPT____ = 0,                               /* -### */
  /* OPT__all_warnings = 1, */               /* --all-warnings */
  /* OPT__ansi = 2, */                       /* --ansi */
  /* OPT__assemble = 3, */                   /* --assemble */
  /* OPT__assert = 4, */                     /* --assert */
  /* OPT__assert_ = 5, */                    /* --assert= */
  /* OPT__comments = 6, */                   /* --comments */
  /* OPT__comments_in_macros = 7, */         /* --comments-in-macros */
  /* OPT__compile = 8, */                    /* --compile */
  /* OPT__coverage = 9, */                   /* --coverage */
  /* OPT__debug = 10, */                     /* --debug */
  /* OPT__define_macro = 11, */              /* --define-macro */
  /* OPT__define_macro_ = 12, */             /* --define-macro= */
  /* OPT__dependencies = 13, */              /* --dependencies */
  /* OPT__dump = 14, */                      /* --dump */
  /* OPT__dump_ = 15, */                     /* --dump= */
  /* OPT__dumpbase = 16, */                  /* --dumpbase */
  /* OPT__dumpdir = 17, */                   /* --dumpdir */
  /* OPT__entry = 18, */                     /* --entry */
  /* OPT__entry_ = 19, */                    /* --entry= */
  /* OPT__extra_warnings = 20, */            /* --extra-warnings */
  /* OPT__for_assembler = 21, */             /* --for-assembler */
  /* OPT__for_assembler_ = 22, */            /* --for-assembler= */
  /* OPT__for_linker = 23, */                /* --for-linker */
  /* OPT__for_linker_ = 24, */               /* --for-linker= */
  /* OPT__force_link = 25, */                /* --force-link */
  /* OPT__force_link_ = 26, */               /* --force-link= */
  OPT__help = 27,                            /* --help */
  OPT__help_ = 28,                           /* --help= */
  /* OPT__imacros = 29, */                   /* --imacros */
  /* OPT__imacros_ = 30, */                  /* --imacros= */
  /* OPT__include = 31, */                   /* --include */
  /* OPT__include_barrier = 32, */           /* --include-barrier */
  /* OPT__include_directory = 33, */         /* --include-directory */
  /* OPT__include_directory_after = 34, */   /* --include-directory-after */
  /* OPT__include_directory_after_ = 35, */  /* --include-directory-after= */
  /* OPT__include_directory_ = 36, */        /* --include-directory= */
  /* OPT__include_prefix = 37, */            /* --include-prefix */
  /* OPT__include_prefix_ = 38, */           /* --include-prefix= */
  /* OPT__include_with_prefix = 39, */       /* --include-with-prefix */
  /* OPT__include_with_prefix_after = 40, */ /* --include-with-prefix-after */
  /* OPT__include_with_prefix_after_ = 41, *//* --include-with-prefix-after= */
  /* OPT__include_with_prefix_before = 42, *//* --include-with-prefix-before */
  /* OPT__include_with_prefix_before_ = 43, *//* --include-with-prefix-before= */
  /* OPT__include_with_prefix_ = 44, */      /* --include-with-prefix= */
  /* OPT__include_ = 45, */                  /* --include= */
  /* OPT__language = 46, */                  /* --language */
  /* OPT__language_ = 47, */                 /* --language= */
  /* OPT__library_directory = 48, */         /* --library-directory */
  /* OPT__library_directory_ = 49, */        /* --library-directory= */
  /* OPT__no_canonical_prefixes = 50, */     /* --no-canonical-prefixes */
  /* OPT__no_integrated_cpp = 51, */         /* --no-integrated-cpp */
  /* OPT__no_line_commands = 52, */          /* --no-line-commands */
  /* OPT__no_standard_includes = 53, */      /* --no-standard-includes */
  /* OPT__no_standard_libraries = 54, */     /* --no-standard-libraries */
  OPT__no_sysroot_suffix = 55,               /* --no-sysroot-suffix */
  /* OPT__no_warnings = 56, */               /* --no-warnings */
  /* OPT__optimize = 57, */                  /* --optimize */
  /* OPT__output = 58, */                    /* --output */
  OPT__output_pch_ = 59,                     /* --output-pch= */
  /* OPT__output_ = 60, */                   /* --output= */
  OPT__param = 61,                           /* --param */
  /* OPT__param_ = 62, */                    /* --param= */
  /* OPT__pass_exit_codes = 63, */           /* --pass-exit-codes */
  /* OPT__pedantic = 64, */                  /* --pedantic */
  /* OPT__pedantic_errors = 65, */           /* --pedantic-errors */
  /* OPT__pie = 66, */                       /* --pie */
  /* OPT__pipe = 67, */                      /* --pipe */
  /* OPT__prefix = 68, */                    /* --prefix */
  /* OPT__prefix_ = 69, */                   /* --prefix= */
  /* OPT__preprocess = 70, */                /* --preprocess */
  /* OPT__print_file_name = 71, */           /* --print-file-name */
  /* OPT__print_file_name_ = 72, */          /* --print-file-name= */
  /* OPT__print_libgcc_file_name = 73, */    /* --print-libgcc-file-name */
  /* OPT__print_missing_file_dependencies = 74, *//* --print-missing-file-dependencies */
  /* OPT__print_multi_directory = 75, */     /* --print-multi-directory */
  /* OPT__print_multi_lib = 76, */           /* --print-multi-lib */
  /* OPT__print_multi_os_directory = 77, */  /* --print-multi-os-directory */
  /* OPT__print_multiarch = 78, */           /* --print-multiarch */
  /* OPT__print_prog_name = 79, */           /* --print-prog-name */
  /* OPT__print_prog_name_ = 80, */          /* --print-prog-name= */
  /* OPT__print_search_dirs = 81, */         /* --print-search-dirs */
  /* OPT__print_sysroot = 82, */             /* --print-sysroot */
  /* OPT__print_sysroot_headers_suffix = 83, *//* --print-sysroot-headers-suffix */
  /* OPT__profile = 84, */                   /* --profile */
  /* OPT__save_temps = 85, */                /* --save-temps */
  /* OPT__shared = 86, */                    /* --shared */
  /* OPT__specs = 87, */                     /* --specs */
  /* OPT__specs_ = 88, */                    /* --specs= */
  /* OPT__static = 89, */                    /* --static */
  /* OPT__symbolic = 90, */                  /* --symbolic */
  /* OPT__sysroot = 91, */                   /* --sysroot */
  OPT__sysroot_ = 92,                        /* --sysroot= */
  OPT__target_help = 93,                     /* --target-help */
  /* OPT__time = 94, */                      /* --time */
  /* OPT__trace_includes = 95, */            /* --trace-includes */
  /* OPT__traditional = 96, */               /* --traditional */
  /* OPT__traditional_cpp = 97, */           /* --traditional-cpp */
  /* OPT__trigraphs = 98, */                 /* --trigraphs */
  /* OPT__undefine_macro = 99, */            /* --undefine-macro */
  /* OPT__undefine_macro_ = 100, */          /* --undefine-macro= */
  /* OPT__user_dependencies = 101, */        /* --user-dependencies */
  /* OPT__verbose = 102, */                  /* --verbose */
  OPT__version = 103,                        /* --version */
  /* OPT__write_dependencies = 104, */       /* --write-dependencies */
  /* OPT__write_user_dependencies = 105, */  /* --write-user-dependencies */
  OPT_A = 106,                               /* -A */
  OPT_B = 107,                               /* -B */
  OPT_C = 108,                               /* -C */
  OPT_CC = 109,                              /* -CC */
  OPT_D = 110,                               /* -D */
  OPT_E = 111,                               /* -E */
  OPT_F = 112,                               /* -F */
  OPT_G = 113,                               /* -G */
  OPT_H = 114,                               /* -H */
  OPT_I = 115,                               /* -I */
  OPT_L = 116,                               /* -L */
  OPT_M = 117,                               /* -M */
  OPT_MD = 118,                              /* -MD */
  OPT_MF = 119,                              /* -MF */
  OPT_MG = 120,                              /* -MG */
  OPT_MM = 121,                              /* -MM */
  OPT_MMD = 122,                             /* -MMD */
  OPT_MP = 123,                              /* -MP */
  OPT_MQ = 124,                              /* -MQ */
  OPT_MT = 125,                              /* -MT */
  OPT_N = 126,                               /* -N */
  OPT_O = 127,                               /* -O */
  OPT_Ofast = 128,                           /* -Ofast */
  OPT_Og = 129,                              /* -Og */
  OPT_Os = 130,                              /* -Os */
  OPT_P = 131,                               /* -P */
  OPT_Q = 132,                               /* -Q */
  OPT_Qn = 133,                              /* -Qn */
  OPT_Qy = 134,                              /* -Qy */
  OPT_R = 135,                               /* -R */
  OPT_S = 136,                               /* -S */
  OPT_T = 137,                               /* -T */
  OPT_Tbss = 138,                            /* -Tbss */
  OPT_Tbss_ = 139,                           /* -Tbss= */
  OPT_Tdata = 140,                           /* -Tdata */
  OPT_Tdata_ = 141,                          /* -Tdata= */
  OPT_Ttext = 142,                           /* -Ttext */
  OPT_Ttext_ = 143,                          /* -Ttext= */
  OPT_U = 144,                               /* -U */
  /* OPT_W = 145, */                         /* -W */
  OPT_Wa_ = 146,                             /* -Wa, */
  OPT_Wabi = 147,                            /* -Wabi */
  OPT_Wabi_tag = 148,                        /* -Wabi-tag */
  OPT_Wabi_ = 149,                           /* -Wabi= */
  OPT_Waddress = 150,                        /* -Waddress */
  OPT_Waggregate_return = 151,               /* -Waggregate-return */
  OPT_Waggressive_loop_optimizations = 152,  /* -Waggressive-loop-optimizations */
  OPT_Wall = 153,                            /* -Wall */
  OPT_Warray_bounds = 154,                   /* -Warray-bounds */
  OPT_Warray_bounds_ = 155,                  /* -Warray-bounds= */
  OPT_Wassign_intercept = 156,               /* -Wassign-intercept */
  OPT_Wattributes = 157,                     /* -Wattributes */
  OPT_Wbad_function_cast = 158,              /* -Wbad-function-cast */
  OPT_Wbool_compare = 159,                   /* -Wbool-compare */
  OPT_Wbuiltin_macro_redefined = 160,        /* -Wbuiltin-macro-redefined */
  OPT_Wc___compat = 161,                     /* -Wc++-compat */
  /* OPT_Wc__0x_compat = 162, */             /* -Wc++0x-compat */
  OPT_Wc__11_compat = 163,                   /* -Wc++11-compat */
  OPT_Wc__14_compat = 164,                   /* -Wc++14-compat */
  OPT_Wc90_c99_compat = 165,                 /* -Wc90-c99-compat */
  OPT_Wc99_c11_compat = 166,                 /* -Wc99-c11-compat */
  OPT_Wcast_align = 167,                     /* -Wcast-align */
  OPT_Wcast_qual = 168,                      /* -Wcast-qual */
  OPT_Wchar_subscripts = 169,                /* -Wchar-subscripts */
  OPT_Wchkp = 170,                           /* -Wchkp */
  OPT_Wclobbered = 171,                      /* -Wclobbered */
  OPT_Wcomment = 172,                        /* -Wcomment */
  /* OPT_Wcomments = 173, */                 /* -Wcomments */
  OPT_Wconditionally_supported = 174,        /* -Wconditionally-supported */
  OPT_Wconversion = 175,                     /* -Wconversion */
  OPT_Wconversion_null = 176,                /* -Wconversion-null */
  OPT_Wcoverage_mismatch = 177,              /* -Wcoverage-mismatch */
  OPT_Wcpp = 178,                            /* -Wcpp */
  OPT_Wctor_dtor_privacy = 179,              /* -Wctor-dtor-privacy */
  OPT_Wdate_time = 180,                      /* -Wdate-time */
  OPT_Wdeclaration_after_statement = 181,    /* -Wdeclaration-after-statement */
  OPT_Wdelete_incomplete = 182,              /* -Wdelete-incomplete */
  OPT_Wdelete_non_virtual_dtor = 183,        /* -Wdelete-non-virtual-dtor */
  OPT_Wdeprecated = 184,                     /* -Wdeprecated */
  OPT_Wdeprecated_declarations = 185,        /* -Wdeprecated-declarations */
  OPT_Wdesignated_init = 186,                /* -Wdesignated-init */
  OPT_Wdisabled_optimization = 187,          /* -Wdisabled-optimization */
  OPT_Wdiscarded_array_qualifiers = 188,     /* -Wdiscarded-array-qualifiers */
  OPT_Wdiscarded_qualifiers = 189,           /* -Wdiscarded-qualifiers */
  OPT_Wdiv_by_zero = 190,                    /* -Wdiv-by-zero */
  OPT_Wdouble_promotion = 191,               /* -Wdouble-promotion */
  OPT_Wduplicated_cond = 192,                /* -Wduplicated-cond */
  OPT_Weffc__ = 193,                         /* -Weffc++ */
  OPT_Wempty_body = 194,                     /* -Wempty-body */
  OPT_Wendif_labels = 195,                   /* -Wendif-labels */
  OPT_Wenum_compare = 196,                   /* -Wenum-compare */
  OPT_Werror = 197,                          /* -Werror */
  /* OPT_Werror_implicit_function_declaration = 198, *//* -Werror-implicit-function-declaration */
  OPT_Werror_ = 199,                         /* -Werror= */
  OPT_Wextra = 200,                          /* -Wextra */
  OPT_Wfatal_errors = 201,                   /* -Wfatal-errors */
  OPT_Wfloat_conversion = 202,               /* -Wfloat-conversion */
  OPT_Wfloat_equal = 203,                    /* -Wfloat-equal */
  /* OPT_Wformat = 204, */                   /* -Wformat */
  OPT_Wformat_contains_nul = 205,            /* -Wformat-contains-nul */
  OPT_Wformat_extra_args = 206,              /* -Wformat-extra-args */
  OPT_Wformat_nonliteral = 207,              /* -Wformat-nonliteral */
  OPT_Wformat_security = 208,                /* -Wformat-security */
  OPT_Wformat_signedness = 209,              /* -Wformat-signedness */
  OPT_Wformat_y2k = 210,                     /* -Wformat-y2k */
  OPT_Wformat_zero_length = 211,             /* -Wformat-zero-length */
  OPT_Wformat_ = 212,                        /* -Wformat= */
  OPT_Wframe_address = 213,                  /* -Wframe-address */
  OPT_Wframe_larger_than_ = 214,             /* -Wframe-larger-than= */
  OPT_Wfree_nonheap_object = 215,            /* -Wfree-nonheap-object */
  OPT_Whsa = 216,                            /* -Whsa */
  OPT_Wignored_attributes = 217,             /* -Wignored-attributes */
  OPT_Wignored_qualifiers = 218,             /* -Wignored-qualifiers */
  OPT_Wimplicit = 219,                       /* -Wimplicit */
  OPT_Wimplicit_function_declaration = 220,  /* -Wimplicit-function-declaration */
  OPT_Wimplicit_int = 221,                   /* -Wimplicit-int */
  /* OPT_Wimport = 222, */                   /* -Wimport */
  OPT_Wincompatible_pointer_types = 223,     /* -Wincompatible-pointer-types */
  OPT_Winherited_variadic_ctor = 224,        /* -Winherited-variadic-ctor */
  OPT_Winit_self = 225,                      /* -Winit-self */
  OPT_Winline = 226,                         /* -Winline */
  OPT_Wint_conversion = 227,                 /* -Wint-conversion */
  OPT_Wint_to_pointer_cast = 228,            /* -Wint-to-pointer-cast */
  OPT_Winvalid_memory_model = 229,           /* -Winvalid-memory-model */
  OPT_Winvalid_offsetof = 230,               /* -Winvalid-offsetof */
  OPT_Winvalid_pch = 231,                    /* -Winvalid-pch */
  OPT_Wjump_misses_init = 232,               /* -Wjump-misses-init */
  OPT_Wl_ = 233,                             /* -Wl, */
  /* OPT_Wlarger_than_ = 234, */             /* -Wlarger-than- */
  OPT_Wlarger_than_ = 235,                   /* -Wlarger-than= */
  OPT_Wliteral_suffix = 236,                 /* -Wliteral-suffix */
  OPT_Wlogical_not_parentheses = 237,        /* -Wlogical-not-parentheses */
  OPT_Wlogical_op = 238,                     /* -Wlogical-op */
  OPT_Wlong_long = 239,                      /* -Wlong-long */
  OPT_Wlto_type_mismatch = 240,              /* -Wlto-type-mismatch */
  OPT_Wmain = 241,                           /* -Wmain */
  OPT_Wmaybe_uninitialized = 242,            /* -Wmaybe-uninitialized */
  OPT_Wmemset_transposed_args = 243,         /* -Wmemset-transposed-args */
  OPT_Wmisleading_indentation = 244,         /* -Wmisleading-indentation */
  OPT_Wmissing_braces = 245,                 /* -Wmissing-braces */
  OPT_Wmissing_declarations = 246,           /* -Wmissing-declarations */
  OPT_Wmissing_field_initializers = 247,     /* -Wmissing-field-initializers */
  /* OPT_Wmissing_format_attribute = 248, */ /* -Wmissing-format-attribute */
  OPT_Wmissing_include_dirs = 249,           /* -Wmissing-include-dirs */
  /* OPT_Wmissing_noreturn = 250, */         /* -Wmissing-noreturn */
  OPT_Wmissing_parameter_type = 251,         /* -Wmissing-parameter-type */
  OPT_Wmissing_prototypes = 252,             /* -Wmissing-prototypes */
  /* OPT_Wmudflap = 253, */                  /* -Wmudflap */
  OPT_Wmultichar = 254,                      /* -Wmultichar */
  OPT_Wmultiple_inheritance = 255,           /* -Wmultiple-inheritance */
  OPT_Wnamespaces = 256,                     /* -Wnamespaces */
  OPT_Wnarrowing = 257,                      /* -Wnarrowing */
  OPT_Wnested_externs = 258,                 /* -Wnested-externs */
  OPT_Wnoexcept = 259,                       /* -Wnoexcept */
  OPT_Wnon_template_friend = 260,            /* -Wnon-template-friend */
  OPT_Wnon_virtual_dtor = 261,               /* -Wnon-virtual-dtor */
  OPT_Wnonnull = 262,                        /* -Wnonnull */
  OPT_Wnonnull_compare = 263,                /* -Wnonnull-compare */
  /* OPT_Wnormalized = 264, */               /* -Wnormalized */
  OPT_Wnormalized_ = 265,                    /* -Wnormalized= */
  OPT_Wnull_dereference = 266,               /* -Wnull-dereference */
  OPT_Wodr = 267,                            /* -Wodr */
  OPT_Wold_style_cast = 268,                 /* -Wold-style-cast */
  OPT_Wold_style_declaration = 269,          /* -Wold-style-declaration */
  OPT_Wold_style_definition = 270,           /* -Wold-style-definition */
  OPT_Wopenmp_simd = 271,                    /* -Wopenmp-simd */
  OPT_Woverflow = 272,                       /* -Woverflow */
  OPT_Woverlength_strings = 273,             /* -Woverlength-strings */
  OPT_Woverloaded_virtual = 274,             /* -Woverloaded-virtual */
  OPT_Woverride_init = 275,                  /* -Woverride-init */
  OPT_Woverride_init_side_effects = 276,     /* -Woverride-init-side-effects */
  OPT_Wp_ = 277,                             /* -Wp, */
  OPT_Wpacked = 278,                         /* -Wpacked */
  OPT_Wpacked_bitfield_compat = 279,         /* -Wpacked-bitfield-compat */
  OPT_Wpadded = 280,                         /* -Wpadded */
  OPT_Wparentheses = 281,                    /* -Wparentheses */
  OPT_Wpedantic = 282,                       /* -Wpedantic */
  /* OPT_Wplacement_new = 283, */            /* -Wplacement-new */
  OPT_Wplacement_new_ = 284,                 /* -Wplacement-new= */
  OPT_Wpmf_conversions = 285,                /* -Wpmf-conversions */
  OPT_Wpointer_arith = 286,                  /* -Wpointer-arith */
  OPT_Wpointer_sign = 287,                   /* -Wpointer-sign */
  OPT_Wpointer_to_int_cast = 288,            /* -Wpointer-to-int-cast */
  OPT_Wpragmas = 289,                        /* -Wpragmas */
  OPT_Wproperty_assign_default = 290,        /* -Wproperty-assign-default */
  OPT_Wprotocol = 291,                       /* -Wprotocol */
  OPT_Wpsabi = 292,                          /* -Wpsabi */
  OPT_Wredundant_decls = 293,                /* -Wredundant-decls */
  OPT_Wreorder = 294,                        /* -Wreorder */
  OPT_Wreturn_local_addr = 295,              /* -Wreturn-local-addr */
  OPT_Wreturn_type = 296,                    /* -Wreturn-type */
  OPT_Wscalar_storage_order = 297,           /* -Wscalar-storage-order */
  OPT_Wselector = 298,                       /* -Wselector */
  OPT_Wsequence_point = 299,                 /* -Wsequence-point */
  OPT_Wshadow = 300,                         /* -Wshadow */
  OPT_Wshadow_ivar = 301,                    /* -Wshadow-ivar */
  OPT_Wshift_count_negative = 302,           /* -Wshift-count-negative */
  OPT_Wshift_count_overflow = 303,           /* -Wshift-count-overflow */
  OPT_Wshift_negative_value = 304,           /* -Wshift-negative-value */
  /* OPT_Wshift_overflow = 305, */           /* -Wshift-overflow */
  OPT_Wshift_overflow_ = 306,                /* -Wshift-overflow= */
  OPT_Wsign_compare = 307,                   /* -Wsign-compare */
  OPT_Wsign_conversion = 308,                /* -Wsign-conversion */
  OPT_Wsign_promo = 309,                     /* -Wsign-promo */
  OPT_Wsized_deallocation = 310,             /* -Wsized-deallocation */
  OPT_Wsizeof_array_argument = 311,          /* -Wsizeof-array-argument */
  OPT_Wsizeof_pointer_memaccess = 312,       /* -Wsizeof-pointer-memaccess */
  OPT_Wstack_protector = 313,                /* -Wstack-protector */
  OPT_Wstack_usage_ = 314,                   /* -Wstack-usage= */
  OPT_Wstrict_aliasing = 315,                /* -Wstrict-aliasing */
  OPT_Wstrict_aliasing_ = 316,               /* -Wstrict-aliasing= */
  OPT_Wstrict_null_sentinel = 317,           /* -Wstrict-null-sentinel */
  OPT_Wstrict_overflow = 318,                /* -Wstrict-overflow */
  OPT_Wstrict_overflow_ = 319,               /* -Wstrict-overflow= */
  OPT_Wstrict_prototypes = 320,              /* -Wstrict-prototypes */
  OPT_Wstrict_selector_match = 321,          /* -Wstrict-selector-match */
  OPT_Wsubobject_linkage = 322,              /* -Wsubobject-linkage */
  OPT_Wsuggest_attribute_const = 323,        /* -Wsuggest-attribute=const */
  OPT_Wsuggest_attribute_format = 324,       /* -Wsuggest-attribute=format */
  OPT_Wsuggest_attribute_noreturn = 325,     /* -Wsuggest-attribute=noreturn */
  OPT_Wsuggest_attribute_pure = 326,         /* -Wsuggest-attribute=pure */
  OPT_Wsuggest_final_methods = 327,          /* -Wsuggest-final-methods */
  OPT_Wsuggest_final_types = 328,            /* -Wsuggest-final-types */
  OPT_Wsuggest_override = 329,               /* -Wsuggest-override */
  OPT_Wswitch = 330,                         /* -Wswitch */
  OPT_Wswitch_bool = 331,                    /* -Wswitch-bool */
  OPT_Wswitch_default = 332,                 /* -Wswitch-default */
  OPT_Wswitch_enum = 333,                    /* -Wswitch-enum */
  OPT_Wsync_nand = 334,                      /* -Wsync-nand */
  OPT_Wsynth = 335,                          /* -Wsynth */
  OPT_Wsystem_headers = 336,                 /* -Wsystem-headers */
  OPT_Wtautological_compare = 337,           /* -Wtautological-compare */
  OPT_Wtemplates = 338,                      /* -Wtemplates */
  OPT_Wterminate = 339,                      /* -Wterminate */
  OPT_Wtraditional = 340,                    /* -Wtraditional */
  OPT_Wtraditional_conversion = 341,         /* -Wtraditional-conversion */
  OPT_Wtrampolines = 342,                    /* -Wtrampolines */
  OPT_Wtrigraphs = 343,                      /* -Wtrigraphs */
  OPT_Wtype_limits = 344,                    /* -Wtype-limits */
  OPT_Wundeclared_selector = 345,            /* -Wundeclared-selector */
  OPT_Wundef = 346,                          /* -Wundef */
  OPT_Wuninitialized = 347,                  /* -Wuninitialized */
  OPT_Wunknown_pragmas = 348,                /* -Wunknown-pragmas */
  /* OPT_Wunreachable_code = 349, */         /* -Wunreachable-code */
  OPT_Wunsafe_loop_optimizations = 350,      /* -Wunsafe-loop-optimizations */
  OPT_Wunsuffixed_float_constants = 351,     /* -Wunsuffixed-float-constants */
  OPT_Wunused = 352,                         /* -Wunused */
  OPT_Wunused_but_set_parameter = 353,       /* -Wunused-but-set-parameter */
  OPT_Wunused_but_set_variable = 354,        /* -Wunused-but-set-variable */
  /* OPT_Wunused_const_variable = 355, */    /* -Wunused-const-variable */
  OPT_Wunused_const_variable_ = 356,         /* -Wunused-const-variable= */
  OPT_Wunused_function = 357,                /* -Wunused-function */
  OPT_Wunused_label = 358,                   /* -Wunused-label */
  OPT_Wunused_local_typedefs = 359,          /* -Wunused-local-typedefs */
  OPT_Wunused_macros = 360,                  /* -Wunused-macros */
  OPT_Wunused_parameter = 361,               /* -Wunused-parameter */
  OPT_Wunused_result = 362,                  /* -Wunused-result */
  OPT_Wunused_value = 363,                   /* -Wunused-value */
  OPT_Wunused_variable = 364,                /* -Wunused-variable */
  OPT_Wuseless_cast = 365,                   /* -Wuseless-cast */
  OPT_Wvarargs = 366,                        /* -Wvarargs */
  OPT_Wvariadic_macros = 367,                /* -Wvariadic-macros */
  OPT_Wvector_operation_performance = 368,   /* -Wvector-operation-performance */
  OPT_Wvirtual_inheritance = 369,            /* -Wvirtual-inheritance */
  OPT_Wvirtual_move_assign = 370,            /* -Wvirtual-move-assign */
  OPT_Wvla = 371,                            /* -Wvla */
  OPT_Wvolatile_register_var = 372,          /* -Wvolatile-register-var */
  OPT_Wwrite_strings = 373,                  /* -Wwrite-strings */
  OPT_Wzero_as_null_pointer_constant = 374,  /* -Wzero-as-null-pointer-constant */
  OPT_Xassembler = 375,                      /* -Xassembler */
  OPT_Xlinker = 376,                         /* -Xlinker */
  OPT_Xpreprocessor = 377,                   /* -Xpreprocessor */
  OPT_Z = 378,                               /* -Z */
  OPT_ansi = 379,                            /* -ansi */
  OPT_assert_ = 380,                         /* -assert= */
  OPT_aux_info = 381,                        /* -aux-info */
  /* OPT_aux_info_ = 382, */                 /* -aux-info= */
  OPT_auxbase = 383,                         /* -auxbase */
  OPT_auxbase_strip = 384,                   /* -auxbase-strip */
  OPT_c = 385,                               /* -c */
  OPT_coverage = 386,                        /* -coverage */
  OPT_cxx_isystem = 387,                     /* -cxx-isystem */
  OPT_d = 388,                               /* -d */
  OPT_dumpbase = 389,                        /* -dumpbase */
  OPT_dumpdir = 390,                         /* -dumpdir */
  OPT_dumpmachine = 391,                     /* -dumpmachine */
  OPT_dumpspecs = 392,                       /* -dumpspecs */
  OPT_dumpversion = 393,                     /* -dumpversion */
  OPT_e = 394,                               /* -e */
  OPT_export_dynamic = 395,                  /* -export-dynamic */
  OPT_fPIC = 396,                            /* -fPIC */
  OPT_fPIE = 397,                            /* -fPIE */
  OPT_fabi_compat_version_ = 398,            /* -fabi-compat-version= */
  OPT_fabi_version_ = 399,                   /* -fabi-version= */
  OPT_faccess_control = 400,                 /* -faccess-control */
  OPT_fada_spec_parent_ = 401,               /* -fada-spec-parent= */
  OPT_faggressive_loop_optimizations = 402,  /* -faggressive-loop-optimizations */
  OPT_falign_functions = 403,                /* -falign-functions */
  OPT_falign_functions_ = 404,               /* -falign-functions= */
  OPT_falign_jumps = 405,                    /* -falign-jumps */
  OPT_falign_jumps_ = 406,                   /* -falign-jumps= */
  OPT_falign_labels = 407,                   /* -falign-labels */
  OPT_falign_labels_ = 408,                  /* -falign-labels= */
  OPT_falign_loops = 409,                    /* -falign-loops */
  OPT_falign_loops_ = 410,                   /* -falign-loops= */
  /* OPT_fall_virtual = 411, */              /* -fall-virtual */
  OPT_fallow_parameterless_variadic_functions = 412,/* -fallow-parameterless-variadic-functions */
  /* OPT_falt_external_templates = 413, */   /* -falt-external-templates */
  /* OPT_fargument_alias = 414, */           /* -fargument-alias */
  /* OPT_fargument_noalias = 415, */         /* -fargument-noalias */
  /* OPT_fargument_noalias_anything = 416, *//* -fargument-noalias-anything */
  /* OPT_fargument_noalias_global = 417, */  /* -fargument-noalias-global */
  OPT_fasan_shadow_offset_ = 418,            /* -fasan-shadow-offset= */
  OPT_fasm = 419,                            /* -fasm */
  OPT_fassociative_math = 420,               /* -fassociative-math */
  OPT_fasynchronous_unwind_tables = 421,     /* -fasynchronous-unwind-tables */
  OPT_fauto_inc_dec = 422,                   /* -fauto-inc-dec */
  OPT_fauto_profile = 423,                   /* -fauto-profile */
  OPT_fauto_profile_ = 424,                  /* -fauto-profile= */
  OPT_fbounds_check = 425,                   /* -fbounds-check */
  OPT_fbranch_count_reg = 426,               /* -fbranch-count-reg */
  OPT_fbranch_probabilities = 427,           /* -fbranch-probabilities */
  OPT_fbranch_target_load_optimize = 428,    /* -fbranch-target-load-optimize */
  OPT_fbranch_target_load_optimize2 = 429,   /* -fbranch-target-load-optimize2 */
  OPT_fbtr_bb_exclusive = 430,               /* -fbtr-bb-exclusive */
  OPT_fbuilding_libgcc = 431,                /* -fbuilding-libgcc */
  OPT_fbuiltin = 432,                        /* -fbuiltin */
  OPT_fbuiltin_ = 433,                       /* -fbuiltin- */
  OPT_fcall_saved_ = 434,                    /* -fcall-saved- */
  OPT_fcall_used_ = 435,                     /* -fcall-used- */
  OPT_fcaller_saves = 436,                   /* -fcaller-saves */
  OPT_fcanonical_system_headers = 437,       /* -fcanonical-system-headers */
  OPT_fcheck_data_deps = 438,                /* -fcheck-data-deps */
  OPT_fcheck_new = 439,                      /* -fcheck-new */
  OPT_fcheck_pointer_bounds = 440,           /* -fcheck-pointer-bounds */
  OPT_fchecking = 441,                       /* -fchecking */
  OPT_fchkp_check_incomplete_type = 442,     /* -fchkp-check-incomplete-type */
  OPT_fchkp_check_read = 443,                /* -fchkp-check-read */
  OPT_fchkp_check_write = 444,               /* -fchkp-check-write */
  OPT_fchkp_first_field_has_own_bounds = 445,/* -fchkp-first-field-has-own-bounds */
  OPT_fchkp_instrument_calls = 446,          /* -fchkp-instrument-calls */
  OPT_fchkp_instrument_marked_only = 447,    /* -fchkp-instrument-marked-only */
  OPT_fchkp_narrow_bounds = 448,             /* -fchkp-narrow-bounds */
  OPT_fchkp_narrow_to_innermost_array = 449, /* -fchkp-narrow-to-innermost-array */
  OPT_fchkp_optimize = 450,                  /* -fchkp-optimize */
  OPT_fchkp_store_bounds = 451,              /* -fchkp-store-bounds */
  OPT_fchkp_treat_zero_dynamic_size_as_infinite = 452,/* -fchkp-treat-zero-dynamic-size-as-infinite */
  OPT_fchkp_use_fast_string_functions = 453, /* -fchkp-use-fast-string-functions */
  OPT_fchkp_use_nochk_string_functions = 454,/* -fchkp-use-nochk-string-functions */
  OPT_fchkp_use_static_bounds = 455,         /* -fchkp-use-static-bounds */
  OPT_fchkp_use_static_const_bounds = 456,   /* -fchkp-use-static-const-bounds */
  OPT_fchkp_use_wrappers = 457,              /* -fchkp-use-wrappers */
  OPT_fchkp_zero_input_bounds_for_main = 458,/* -fchkp-zero-input-bounds-for-main */
  OPT_fcilkplus = 459,                       /* -fcilkplus */
  OPT_fcombine_stack_adjustments = 460,      /* -fcombine-stack-adjustments */
  OPT_fcommon = 461,                         /* -fcommon */
  OPT_fcompare_debug = 462,                  /* -fcompare-debug */
  OPT_fcompare_debug_second = 463,           /* -fcompare-debug-second */
  OPT_fcompare_debug_ = 464,                 /* -fcompare-debug= */
  OPT_fcompare_elim = 465,                   /* -fcompare-elim */
  OPT_fconcepts = 466,                       /* -fconcepts */
  OPT_fcond_mismatch = 467,                  /* -fcond-mismatch */
  OPT_fconserve_space = 468,                 /* -fconserve-space */
  OPT_fconserve_stack = 469,                 /* -fconserve-stack */
  OPT_fconstant_string_class_ = 470,         /* -fconstant-string-class= */
  OPT_fconstexpr_depth_ = 471,               /* -fconstexpr-depth= */
  OPT_fcprop_registers = 472,                /* -fcprop-registers */
  OPT_fcrossjumping = 473,                   /* -fcrossjumping */
  OPT_fcse_follow_jumps = 474,               /* -fcse-follow-jumps */
  /* OPT_fcse_skip_blocks = 475, */          /* -fcse-skip-blocks */
  OPT_fcx_fortran_rules = 476,               /* -fcx-fortran-rules */
  OPT_fcx_limited_range = 477,               /* -fcx-limited-range */
  OPT_fdata_sections = 478,                  /* -fdata-sections */
  OPT_fdbg_cnt_list = 479,                   /* -fdbg-cnt-list */
  OPT_fdbg_cnt_ = 480,                       /* -fdbg-cnt= */
  OPT_fdce = 481,                            /* -fdce */
  OPT_fdebug_cpp = 482,                      /* -fdebug-cpp */
  OPT_fdebug_prefix_map_ = 483,              /* -fdebug-prefix-map= */
  OPT_fdebug_regex_map_ = 484,               /* -fdebug-regex-map= */
  OPT_fdebug_types_section = 485,            /* -fdebug-types-section */
  OPT_fdeclone_ctor_dtor = 486,              /* -fdeclone-ctor-dtor */
  OPT_fdeduce_init_list = 487,               /* -fdeduce-init-list */
  /* OPT_fdefault_inline = 488, */           /* -fdefault-inline */
  OPT_fdefer_pop = 489,                      /* -fdefer-pop */
  OPT_fdelayed_branch = 490,                 /* -fdelayed-branch */
  OPT_fdelete_dead_exceptions = 491,         /* -fdelete-dead-exceptions */
  OPT_fdelete_null_pointer_checks = 492,     /* -fdelete-null-pointer-checks */
  OPT_fdevirtualize = 493,                   /* -fdevirtualize */
  OPT_fdevirtualize_at_ltrans = 494,         /* -fdevirtualize-at-ltrans */
  OPT_fdevirtualize_speculatively = 495,     /* -fdevirtualize-speculatively */
  /* OPT_fdiagnostics_color = 496, */        /* -fdiagnostics-color */
  OPT_fdiagnostics_color_ = 497,             /* -fdiagnostics-color= */
  OPT_fdiagnostics_show_caret = 498,         /* -fdiagnostics-show-caret */
  OPT_fdiagnostics_show_location_ = 499,     /* -fdiagnostics-show-location= */
  OPT_fdiagnostics_show_option = 500,        /* -fdiagnostics-show-option */
  OPT_fdirectives_only = 501,                /* -fdirectives-only */
  OPT_fdisable_ = 502,                       /* -fdisable- */
  OPT_fdollars_in_identifiers = 503,         /* -fdollars-in-identifiers */
  OPT_fdse = 504,                            /* -fdse */
  OPT_fdump_ = 505,                          /* -fdump- */
  OPT_fdump_ada_spec = 506,                  /* -fdump-ada-spec */
  OPT_fdump_ada_spec_slim = 507,             /* -fdump-ada-spec-slim */
  OPT_fdump_final_insns = 508,               /* -fdump-final-insns */
  OPT_fdump_final_insns_ = 509,              /* -fdump-final-insns= */
  OPT_fdump_go_spec_ = 510,                  /* -fdump-go-spec= */
  OPT_fdump_internal_locations = 511,        /* -fdump-internal-locations */
  OPT_fdump_noaddr = 512,                    /* -fdump-noaddr */
  OPT_fdump_passes = 513,                    /* -fdump-passes */
  OPT_fdump_unnumbered = 514,                /* -fdump-unnumbered */
  OPT_fdump_unnumbered_links = 515,          /* -fdump-unnumbered-links */
  OPT_fdwarf2_cfi_asm = 516,                 /* -fdwarf2-cfi-asm */
  OPT_fearly_inlining = 517,                 /* -fearly-inlining */
  OPT_felide_constructors = 518,             /* -felide-constructors */
  OPT_feliminate_dwarf2_dups = 519,          /* -feliminate-dwarf2-dups */
  OPT_feliminate_unused_debug_symbols = 520, /* -feliminate-unused-debug-symbols */
  OPT_feliminate_unused_debug_types = 521,   /* -feliminate-unused-debug-types */
  OPT_femit_class_debug_always = 522,        /* -femit-class-debug-always */
  OPT_femit_struct_debug_baseonly = 523,     /* -femit-struct-debug-baseonly */
  OPT_femit_struct_debug_detailed_ = 524,    /* -femit-struct-debug-detailed= */
  OPT_femit_struct_debug_reduced = 525,      /* -femit-struct-debug-reduced */
  OPT_fenable_ = 526,                        /* -fenable- */
  OPT_fenforce_eh_specs = 527,               /* -fenforce-eh-specs */
  /* OPT_fenum_int_equiv = 528, */           /* -fenum-int-equiv */
  OPT_fexceptions = 529,                     /* -fexceptions */
  OPT_fexcess_precision_ = 530,              /* -fexcess-precision= */
  OPT_fexec_charset_ = 531,                  /* -fexec-charset= */
  OPT_fexpensive_optimizations = 532,        /* -fexpensive-optimizations */
  OPT_fext_numeric_literals = 533,           /* -fext-numeric-literals */
  OPT_fextended_identifiers = 534,           /* -fextended-identifiers */
  OPT_fextern_tls_init = 535,                /* -fextern-tls-init */
  /* OPT_fexternal_templates = 536, */       /* -fexternal-templates */
  OPT_ffast_math = 537,                      /* -ffast-math */
  OPT_ffat_lto_objects = 538,                /* -ffat-lto-objects */
  OPT_ffinite_math_only = 539,               /* -ffinite-math-only */
  OPT_ffixed_ = 540,                         /* -ffixed- */
  OPT_ffloat_store = 541,                    /* -ffloat-store */
  OPT_ffor_scope = 542,                      /* -ffor-scope */
  /* OPT_fforce_addr = 543, */               /* -fforce-addr */
  OPT_fforward_propagate = 544,              /* -fforward-propagate */
  OPT_ffp_contract_ = 545,                   /* -ffp-contract= */
  OPT_ffreestanding = 546,                   /* -ffreestanding */
  OPT_ffriend_injection = 547,               /* -ffriend-injection */
  OPT_ffunction_cse = 548,                   /* -ffunction-cse */
  OPT_ffunction_sections = 549,              /* -ffunction-sections */
  OPT_fgcse = 550,                           /* -fgcse */
  OPT_fgcse_after_reload = 551,              /* -fgcse-after-reload */
  OPT_fgcse_las = 552,                       /* -fgcse-las */
  OPT_fgcse_lm = 553,                        /* -fgcse-lm */
  OPT_fgcse_sm = 554,                        /* -fgcse-sm */
  OPT_fgnat_encodings_ = 555,                /* -fgnat-encodings= */
  OPT_fgnu_keywords = 556,                   /* -fgnu-keywords */
  OPT_fgnu_runtime = 557,                    /* -fgnu-runtime */
  OPT_fgnu_tm = 558,                         /* -fgnu-tm */
  OPT_fgnu_unique = 559,                     /* -fgnu-unique */
  OPT_fgnu89_inline = 560,                   /* -fgnu89-inline */
  OPT_fgraphite = 561,                       /* -fgraphite */
  OPT_fgraphite_identity = 562,              /* -fgraphite-identity */
  OPT_fguess_branch_probability = 563,       /* -fguess-branch-probability */
  /* OPT_fguiding_decls = 564, */            /* -fguiding-decls */
  /* OPT_fhandle_exceptions = 565, */        /* -fhandle-exceptions */
  /* OPT_fhelp = 566, */                     /* -fhelp */
  /* OPT_fhelp_ = 567, */                    /* -fhelp= */
  OPT_fhoist_adjacent_loads = 568,           /* -fhoist-adjacent-loads */
  /* OPT_fhonor_std = 569, */                /* -fhonor-std */
  OPT_fhosted = 570,                         /* -fhosted */
  /* OPT_fhuge_objects = 571, */             /* -fhuge-objects */
  OPT_fident = 572,                          /* -fident */
  OPT_fif_conversion = 573,                  /* -fif-conversion */
  OPT_fif_conversion2 = 574,                 /* -fif-conversion2 */
  OPT_fimplement_inlines = 575,              /* -fimplement-inlines */
  OPT_fimplicit_inline_templates = 576,      /* -fimplicit-inline-templates */
  OPT_fimplicit_templates = 577,             /* -fimplicit-templates */
  OPT_findirect_inlining = 578,              /* -findirect-inlining */
  OPT_finhibit_size_directive = 579,         /* -finhibit-size-directive */
  OPT_finline = 580,                         /* -finline */
  OPT_finline_atomics = 581,                 /* -finline-atomics */
  OPT_finline_functions = 582,               /* -finline-functions */
  OPT_finline_functions_called_once = 583,   /* -finline-functions-called-once */
  /* OPT_finline_limit_ = 584, */            /* -finline-limit- */
  OPT_finline_limit_ = 585,                  /* -finline-limit= */
  OPT_finline_small_functions = 586,         /* -finline-small-functions */
  OPT_finput_charset_ = 587,                 /* -finput-charset= */
  OPT_finstrument_functions = 588,           /* -finstrument-functions */
  OPT_finstrument_functions_exclude_file_list_ = 589,/* -finstrument-functions-exclude-file-list= */
  OPT_finstrument_functions_exclude_function_list_ = 590,/* -finstrument-functions-exclude-function-list= */
  OPT_fipa_cp = 591,                         /* -fipa-cp */
  OPT_fipa_cp_alignment = 592,               /* -fipa-cp-alignment */
  OPT_fipa_cp_clone = 593,                   /* -fipa-cp-clone */
  OPT_fipa_icf = 594,                        /* -fipa-icf */
  OPT_fipa_icf_functions = 595,              /* -fipa-icf-functions */
  OPT_fipa_icf_variables = 596,              /* -fipa-icf-variables */
  /* OPT_fipa_matrix_reorg = 597, */         /* -fipa-matrix-reorg */
  OPT_fipa_profile = 598,                    /* -fipa-profile */
  OPT_fipa_pta = 599,                        /* -fipa-pta */
  OPT_fipa_pure_const = 600,                 /* -fipa-pure-const */
  OPT_fipa_ra = 601,                         /* -fipa-ra */
  OPT_fipa_reference = 602,                  /* -fipa-reference */
  OPT_fipa_sra = 603,                        /* -fipa-sra */
  /* OPT_fipa_struct_reorg = 604, */         /* -fipa-struct-reorg */
  OPT_fira_algorithm_ = 605,                 /* -fira-algorithm= */
  OPT_fira_hoist_pressure = 606,             /* -fira-hoist-pressure */
  OPT_fira_loop_pressure = 607,              /* -fira-loop-pressure */
  OPT_fira_region_ = 608,                    /* -fira-region= */
  OPT_fira_share_save_slots = 609,           /* -fira-share-save-slots */
  OPT_fira_share_spill_slots = 610,          /* -fira-share-spill-slots */
  OPT_fira_verbose_ = 611,                   /* -fira-verbose= */
  OPT_fisolate_erroneous_paths_attribute = 612,/* -fisolate-erroneous-paths-attribute */
  OPT_fisolate_erroneous_paths_dereference = 613,/* -fisolate-erroneous-paths-dereference */
  OPT_fivar_visibility_ = 614,               /* -fivar-visibility= */
  OPT_fivopts = 615,                         /* -fivopts */
  OPT_fjump_tables = 616,                    /* -fjump-tables */
  OPT_fkeep_gc_roots_live = 617,             /* -fkeep-gc-roots-live */
  OPT_fkeep_inline_dllexport = 618,          /* -fkeep-inline-dllexport */
  OPT_fkeep_inline_functions = 619,          /* -fkeep-inline-functions */
  OPT_fkeep_static_consts = 620,             /* -fkeep-static-consts */
  OPT_fkeep_static_functions = 621,          /* -fkeep-static-functions */
  /* OPT_flabels_ok = 622, */                /* -flabels-ok */
  OPT_flax_vector_conversions = 623,         /* -flax-vector-conversions */
  OPT_fleading_underscore = 624,             /* -fleading-underscore */
  OPT_flifetime_dse = 625,                   /* -flifetime-dse */
  OPT_flifetime_dse_ = 626,                  /* -flifetime-dse= */
  OPT_flinker_output_ = 627,                 /* -flinker-output= */
  OPT_flive_range_shrinkage = 628,           /* -flive-range-shrinkage */
  OPT_flocal_ivars = 629,                    /* -flocal-ivars */
  /* OPT_floop_block = 630, */               /* -floop-block */
  /* OPT_floop_flatten = 631, */             /* -floop-flatten */
  /* OPT_floop_interchange = 632, */         /* -floop-interchange */
  OPT_floop_nest_optimize = 633,             /* -floop-nest-optimize */
  /* OPT_floop_optimize = 634, */            /* -floop-optimize */
  OPT_floop_parallelize_all = 635,           /* -floop-parallelize-all */
  /* OPT_floop_strip_mine = 636, */          /* -floop-strip-mine */
  /* OPT_floop_unroll_and_jam = 637, */      /* -floop-unroll-and-jam */
  OPT_flra_remat = 638,                      /* -flra-remat */
  OPT_flto = 639,                            /* -flto */
  OPT_flto_compression_level_ = 640,         /* -flto-compression-level= */
  OPT_flto_odr_type_merging = 641,           /* -flto-odr-type-merging */
  OPT_flto_partition_ = 642,                 /* -flto-partition= */
  OPT_flto_report = 643,                     /* -flto-report */
  OPT_flto_report_wpa = 644,                 /* -flto-report-wpa */
  OPT_flto_ = 645,                           /* -flto= */
  OPT_fltrans = 646,                         /* -fltrans */
  OPT_fltrans_output_list_ = 647,            /* -fltrans-output-list= */
  OPT_fmath_errno = 648,                     /* -fmath-errno */
  OPT_fmax_errors_ = 649,                    /* -fmax-errors= */
  OPT_fmem_report = 650,                     /* -fmem-report */
  OPT_fmem_report_wpa = 651,                 /* -fmem-report-wpa */
  OPT_fmerge_all_constants = 652,            /* -fmerge-all-constants */
  OPT_fmerge_constants = 653,                /* -fmerge-constants */
  OPT_fmerge_debug_strings = 654,            /* -fmerge-debug-strings */
  OPT_fmessage_length_ = 655,                /* -fmessage-length= */
  OPT_fmodulo_sched = 656,                   /* -fmodulo-sched */
  OPT_fmodulo_sched_allow_regmoves = 657,    /* -fmodulo-sched-allow-regmoves */
  OPT_fmove_loop_invariants = 658,           /* -fmove-loop-invariants */
  OPT_fms_extensions = 659,                  /* -fms-extensions */
  /* OPT_fmudflap = 660, */                  /* -fmudflap */
  /* OPT_fmudflapir = 661, */                /* -fmudflapir */
  /* OPT_fmudflapth = 662, */                /* -fmudflapth */
  /* OPT_fname_mangling_version_ = 663, */   /* -fname-mangling-version- */
  /* OPT_fnew_abi = 664, */                  /* -fnew-abi */
  OPT_fnext_runtime = 665,                   /* -fnext-runtime */
  OPT_fnil_receivers = 666,                  /* -fnil-receivers */
  /* OPT_fno_vect_cost_model = 667, */       /* -fno-vect-cost-model */
  OPT_fnon_call_exceptions = 668,            /* -fnon-call-exceptions */
  OPT_fnonansi_builtins = 669,               /* -fnonansi-builtins */
  /* OPT_fnonnull_objects = 670, */          /* -fnonnull-objects */
  OPT_fnothrow_opt = 671,                    /* -fnothrow-opt */
  OPT_fobjc_abi_version_ = 672,              /* -fobjc-abi-version= */
  OPT_fobjc_call_cxx_cdtors = 673,           /* -fobjc-call-cxx-cdtors */
  OPT_fobjc_direct_dispatch = 674,           /* -fobjc-direct-dispatch */
  OPT_fobjc_exceptions = 675,                /* -fobjc-exceptions */
  OPT_fobjc_gc = 676,                        /* -fobjc-gc */
  OPT_fobjc_nilcheck = 677,                  /* -fobjc-nilcheck */
  OPT_fobjc_sjlj_exceptions = 678,           /* -fobjc-sjlj-exceptions */
  OPT_fobjc_std_objc1 = 679,                 /* -fobjc-std=objc1 */
  OPT_foffload_abi_ = 680,                   /* -foffload-abi= */
  OPT_foffload_ = 681,                       /* -foffload= */
  OPT_fomit_frame_pointer = 682,             /* -fomit-frame-pointer */
  OPT_fopenacc = 683,                        /* -fopenacc */
  OPT_fopenacc_dim_ = 684,                   /* -fopenacc-dim= */
  OPT_fopenmp = 685,                         /* -fopenmp */
  OPT_fopenmp_simd = 686,                    /* -fopenmp-simd */
  OPT_foperator_names = 687,                 /* -foperator-names */
  OPT_fopt_info = 688,                       /* -fopt-info */
  OPT_fopt_info_ = 689,                      /* -fopt-info- */
  /* OPT_foptimize_register_move = 690, */   /* -foptimize-register-move */
  OPT_foptimize_sibling_calls = 691,         /* -foptimize-sibling-calls */
  OPT_foptimize_strlen = 692,                /* -foptimize-strlen */
  /* OPT_foptional_diags = 693, */           /* -foptional-diags */
  OPT_fpack_struct = 694,                    /* -fpack-struct */
  OPT_fpack_struct_ = 695,                   /* -fpack-struct= */
  OPT_fpartial_inlining = 696,               /* -fpartial-inlining */
  OPT_fpcc_struct_return = 697,              /* -fpcc-struct-return */
  OPT_fpch_deps = 698,                       /* -fpch-deps */
  OPT_fpch_preprocess = 699,                 /* -fpch-preprocess */
  OPT_fpeel_loops = 700,                     /* -fpeel-loops */
  OPT_fpeephole = 701,                       /* -fpeephole */
  OPT_fpeephole2 = 702,                      /* -fpeephole2 */
  OPT_fpermissive = 703,                     /* -fpermissive */
  OPT_fpic = 704,                            /* -fpic */
  OPT_fpie = 705,                            /* -fpie */
  OPT_fplan9_extensions = 706,               /* -fplan9-extensions */
  OPT_fplt = 707,                            /* -fplt */
  OPT_fplugin_arg_ = 708,                    /* -fplugin-arg- */
  OPT_fplugin_ = 709,                        /* -fplugin= */
  OPT_fpost_ipa_mem_report = 710,            /* -fpost-ipa-mem-report */
  OPT_fpre_ipa_mem_report = 711,             /* -fpre-ipa-mem-report */
  OPT_fpredictive_commoning = 712,           /* -fpredictive-commoning */
  OPT_fprefetch_loop_arrays = 713,           /* -fprefetch-loop-arrays */
  OPT_fpreprocessed = 714,                   /* -fpreprocessed */
  OPT_fpretty_templates = 715,               /* -fpretty-templates */
  OPT_fprofile = 716,                        /* -fprofile */
  OPT_fprofile_arcs = 717,                   /* -fprofile-arcs */
  OPT_fprofile_correction = 718,             /* -fprofile-correction */
  OPT_fprofile_dir_ = 719,                   /* -fprofile-dir= */
  OPT_fprofile_generate = 720,               /* -fprofile-generate */
  OPT_fprofile_generate_ = 721,              /* -fprofile-generate= */
  OPT_fprofile_reorder_functions = 722,      /* -fprofile-reorder-functions */
  OPT_fprofile_report = 723,                 /* -fprofile-report */
  OPT_fprofile_use = 724,                    /* -fprofile-use */
  OPT_fprofile_use_ = 725,                   /* -fprofile-use= */
  OPT_fprofile_values = 726,                 /* -fprofile-values */
  OPT_frandom_seed = 727,                    /* -frandom-seed */
  OPT_frandom_seed_ = 728,                   /* -frandom-seed= */
  OPT_freciprocal_math = 729,                /* -freciprocal-math */
  OPT_frecord_gcc_switches = 730,            /* -frecord-gcc-switches */
  OPT_free = 731,                            /* -free */
  OPT_freg_struct_return = 732,              /* -freg-struct-return */
  /* OPT_fregmove = 733, */                  /* -fregmove */
  OPT_frename_registers = 734,               /* -frename-registers */
  OPT_freorder_blocks = 735,                 /* -freorder-blocks */
  OPT_freorder_blocks_algorithm_ = 736,      /* -freorder-blocks-algorithm= */
  OPT_freorder_blocks_and_partition = 737,   /* -freorder-blocks-and-partition */
  OPT_freorder_functions = 738,              /* -freorder-functions */
  OPT_freplace_objc_classes = 739,           /* -freplace-objc-classes */
  OPT_frepo = 740,                           /* -frepo */
  OPT_freport_bug = 741,                     /* -freport-bug */
  OPT_frerun_cse_after_loop = 742,           /* -frerun-cse-after-loop */
  /* OPT_frerun_loop_opt = 743, */           /* -frerun-loop-opt */
  OPT_freschedule_modulo_scheduled_loops = 744,/* -freschedule-modulo-scheduled-loops */
  OPT_fresolution_ = 745,                    /* -fresolution= */
  OPT_frounding_math = 746,                  /* -frounding-math */
  OPT_frtti = 747,                           /* -frtti */
  OPT_fsanitize_coverage_trace_pc = 748,     /* -fsanitize-coverage=trace-pc */
  OPT_fsanitize_recover = 749,               /* -fsanitize-recover */
  OPT_fsanitize_recover_ = 750,              /* -fsanitize-recover= */
  OPT_fsanitize_sections_ = 751,             /* -fsanitize-sections= */
  OPT_fsanitize_undefined_trap_on_error = 752,/* -fsanitize-undefined-trap-on-error */
  OPT_fsanitize_ = 753,                      /* -fsanitize= */
  OPT_fsched_critical_path_heuristic = 754,  /* -fsched-critical-path-heuristic */
  OPT_fsched_dep_count_heuristic = 755,      /* -fsched-dep-count-heuristic */
  OPT_fsched_group_heuristic = 756,          /* -fsched-group-heuristic */
  OPT_fsched_interblock = 757,               /* -fsched-interblock */
  OPT_fsched_last_insn_heuristic = 758,      /* -fsched-last-insn-heuristic */
  OPT_fsched_pressure = 759,                 /* -fsched-pressure */
  OPT_fsched_rank_heuristic = 760,           /* -fsched-rank-heuristic */
  OPT_fsched_spec = 761,                     /* -fsched-spec */
  OPT_fsched_spec_insn_heuristic = 762,      /* -fsched-spec-insn-heuristic */
  OPT_fsched_spec_load = 763,                /* -fsched-spec-load */
  OPT_fsched_spec_load_dangerous = 764,      /* -fsched-spec-load-dangerous */
  OPT_fsched_stalled_insns = 765,            /* -fsched-stalled-insns */
  OPT_fsched_stalled_insns_dep = 766,        /* -fsched-stalled-insns-dep */
  OPT_fsched_stalled_insns_dep_ = 767,       /* -fsched-stalled-insns-dep= */
  OPT_fsched_stalled_insns_ = 768,           /* -fsched-stalled-insns= */
  OPT_fsched_verbose_ = 769,                 /* -fsched-verbose= */
  OPT_fsched2_use_superblocks = 770,         /* -fsched2-use-superblocks */
  /* OPT_fsched2_use_traces = 771, */        /* -fsched2-use-traces */
  OPT_fschedule_fusion = 772,                /* -fschedule-fusion */
  OPT_fschedule_insns = 773,                 /* -fschedule-insns */
  OPT_fschedule_insns2 = 774,                /* -fschedule-insns2 */
  OPT_fsection_anchors = 775,                /* -fsection-anchors */
  /* OPT_fsee = 776, */                      /* -fsee */
  OPT_fsel_sched_pipelining = 777,           /* -fsel-sched-pipelining */
  OPT_fsel_sched_pipelining_outer_loops = 778,/* -fsel-sched-pipelining-outer-loops */
  OPT_fsel_sched_reschedule_pipelined = 779, /* -fsel-sched-reschedule-pipelined */
  OPT_fselective_scheduling = 780,           /* -fselective-scheduling */
  OPT_fselective_scheduling2 = 781,          /* -fselective-scheduling2 */
  OPT_fsemantic_interposition = 782,         /* -fsemantic-interposition */
  OPT_fshort_enums = 783,                    /* -fshort-enums */
  OPT_fshort_wchar = 784,                    /* -fshort-wchar */
  OPT_fshow_column = 785,                    /* -fshow-column */
  OPT_fshrink_wrap = 786,                    /* -fshrink-wrap */
  OPT_fsignaling_nans = 787,                 /* -fsignaling-nans */
  OPT_fsigned_bitfields = 788,               /* -fsigned-bitfields */
  OPT_fsigned_char = 789,                    /* -fsigned-char */
  OPT_fsigned_zeros = 790,                   /* -fsigned-zeros */
  OPT_fsimd_cost_model_ = 791,               /* -fsimd-cost-model= */
  OPT_fsingle_precision_constant = 792,      /* -fsingle-precision-constant */
  OPT_fsized_deallocation = 793,             /* -fsized-deallocation */
  OPT_fsplit_ivs_in_unroller = 794,          /* -fsplit-ivs-in-unroller */
  OPT_fsplit_paths = 795,                    /* -fsplit-paths */
  OPT_fsplit_stack = 796,                    /* -fsplit-stack */
  OPT_fsplit_wide_types = 797,               /* -fsplit-wide-types */
  /* OPT_fsquangle = 798, */                 /* -fsquangle */
  OPT_fssa_backprop = 799,                   /* -fssa-backprop */
  OPT_fssa_phiopt = 800,                     /* -fssa-phiopt */
  OPT_fsso_struct_ = 801,                    /* -fsso-struct= */
  /* OPT_fstack_check = 802, */              /* -fstack-check */
  OPT_fstack_check_ = 803,                   /* -fstack-check= */
  OPT_fstack_limit = 804,                    /* -fstack-limit */
  OPT_fstack_limit_register_ = 805,          /* -fstack-limit-register= */
  OPT_fstack_limit_symbol_ = 806,            /* -fstack-limit-symbol= */
  OPT_fstack_protector = 807,                /* -fstack-protector */
  OPT_fstack_protector_all = 808,            /* -fstack-protector-all */
  OPT_fstack_protector_explicit = 809,       /* -fstack-protector-explicit */
  OPT_fstack_protector_strong = 810,         /* -fstack-protector-strong */
  OPT_fstack_reuse_ = 811,                   /* -fstack-reuse= */
  OPT_fstack_usage = 812,                    /* -fstack-usage */
  OPT_fstats = 813,                          /* -fstats */
  OPT_fstdarg_opt = 814,                     /* -fstdarg-opt */
  /* OPT_fstrength_reduce = 815, */          /* -fstrength-reduce */
  OPT_fstrict_aliasing = 816,                /* -fstrict-aliasing */
  OPT_fstrict_enums = 817,                   /* -fstrict-enums */
  OPT_fstrict_overflow = 818,                /* -fstrict-overflow */
  /* OPT_fstrict_prototype = 819, */         /* -fstrict-prototype */
  OPT_fstrict_volatile_bitfields = 820,      /* -fstrict-volatile-bitfields */
  OPT_fsync_libcalls = 821,                  /* -fsync-libcalls */
  OPT_fsyntax_only = 822,                    /* -fsyntax-only */
  OPT_ftabstop_ = 823,                       /* -ftabstop= */
  /* OPT_ftarget_help = 824, */              /* -ftarget-help */
  OPT_ftemplate_backtrace_limit_ = 825,      /* -ftemplate-backtrace-limit= */
  /* OPT_ftemplate_depth_ = 826, */          /* -ftemplate-depth- */
  OPT_ftemplate_depth_ = 827,                /* -ftemplate-depth= */
  OPT_ftest_coverage = 828,                  /* -ftest-coverage */
  /* OPT_fthis_is_variable = 829, */         /* -fthis-is-variable */
  OPT_fthread_jumps = 830,                   /* -fthread-jumps */
  OPT_fthreadsafe_statics = 831,             /* -fthreadsafe-statics */
  OPT_ftime_report = 832,                    /* -ftime-report */
  OPT_ftls_model_ = 833,                     /* -ftls-model= */
  OPT_ftoplevel_reorder = 834,               /* -ftoplevel-reorder */
  OPT_ftracer = 835,                         /* -ftracer */
  OPT_ftrack_macro_expansion = 836,          /* -ftrack-macro-expansion */
  OPT_ftrack_macro_expansion_ = 837,         /* -ftrack-macro-expansion= */
  OPT_ftrapping_math = 838,                  /* -ftrapping-math */
  OPT_ftrapv = 839,                          /* -ftrapv */
  OPT_ftree_bit_ccp = 840,                   /* -ftree-bit-ccp */
  OPT_ftree_builtin_call_dce = 841,          /* -ftree-builtin-call-dce */
  OPT_ftree_ccp = 842,                       /* -ftree-ccp */
  OPT_ftree_ch = 843,                        /* -ftree-ch */
  /* OPT_ftree_coalesce_inlined_vars = 844, *//* -ftree-coalesce-inlined-vars */
  OPT_ftree_coalesce_vars = 845,             /* -ftree-coalesce-vars */
  OPT_ftree_copy_prop = 846,                 /* -ftree-copy-prop */
  /* OPT_ftree_copyrename = 847, */          /* -ftree-copyrename */
  OPT_ftree_cselim = 848,                    /* -ftree-cselim */
  OPT_ftree_dce = 849,                       /* -ftree-dce */
  OPT_ftree_dominator_opts = 850,            /* -ftree-dominator-opts */
  OPT_ftree_dse = 851,                       /* -ftree-dse */
  OPT_ftree_forwprop = 852,                  /* -ftree-forwprop */
  OPT_ftree_fre = 853,                       /* -ftree-fre */
  OPT_ftree_loop_distribute_patterns = 854,  /* -ftree-loop-distribute-patterns */
  OPT_ftree_loop_distribution = 855,         /* -ftree-loop-distribution */
  OPT_ftree_loop_if_convert = 856,           /* -ftree-loop-if-convert */
  OPT_ftree_loop_if_convert_stores = 857,    /* -ftree-loop-if-convert-stores */
  OPT_ftree_loop_im = 858,                   /* -ftree-loop-im */
  OPT_ftree_loop_ivcanon = 859,              /* -ftree-loop-ivcanon */
  /* OPT_ftree_loop_linear = 860, */         /* -ftree-loop-linear */
  OPT_ftree_loop_optimize = 861,             /* -ftree-loop-optimize */
  OPT_ftree_loop_vectorize = 862,            /* -ftree-loop-vectorize */
  OPT_ftree_lrs = 863,                       /* -ftree-lrs */
  OPT_ftree_parallelize_loops_ = 864,        /* -ftree-parallelize-loops= */
  OPT_ftree_partial_pre = 865,               /* -ftree-partial-pre */
  OPT_ftree_phiprop = 866,                   /* -ftree-phiprop */
  OPT_ftree_pre = 867,                       /* -ftree-pre */
  OPT_ftree_pta = 868,                       /* -ftree-pta */
  OPT_ftree_reassoc = 869,                   /* -ftree-reassoc */
  /* OPT_ftree_salias = 870, */              /* -ftree-salias */
  OPT_ftree_scev_cprop = 871,                /* -ftree-scev-cprop */
  OPT_ftree_sink = 872,                      /* -ftree-sink */
  OPT_ftree_slp_vectorize = 873,             /* -ftree-slp-vectorize */
  OPT_ftree_slsr = 874,                      /* -ftree-slsr */
  OPT_ftree_sra = 875,                       /* -ftree-sra */
  /* OPT_ftree_store_ccp = 876, */           /* -ftree-store-ccp */
  /* OPT_ftree_store_copy_prop = 877, */     /* -ftree-store-copy-prop */
  OPT_ftree_switch_conversion = 878,         /* -ftree-switch-conversion */
  OPT_ftree_tail_merge = 879,                /* -ftree-tail-merge */
  OPT_ftree_ter = 880,                       /* -ftree-ter */
  /* OPT_ftree_vect_loop_version = 881, */   /* -ftree-vect-loop-version */
  OPT_ftree_vectorize = 882,                 /* -ftree-vectorize */
  /* OPT_ftree_vectorizer_verbose_ = 883, */ /* -ftree-vectorizer-verbose= */
  OPT_ftree_vrp = 884,                       /* -ftree-vrp */
  OPT_funconstrained_commons = 885,          /* -funconstrained-commons */
  OPT_funit_at_a_time = 886,                 /* -funit-at-a-time */
  OPT_funroll_all_loops = 887,               /* -funroll-all-loops */
  OPT_funroll_loops = 888,                   /* -funroll-loops */
  OPT_funsafe_loop_optimizations = 889,      /* -funsafe-loop-optimizations */
  OPT_funsafe_math_optimizations = 890,      /* -funsafe-math-optimizations */
  OPT_funsigned_bitfields = 891,             /* -funsigned-bitfields */
  OPT_funsigned_char = 892,                  /* -funsigned-char */
  OPT_funswitch_loops = 893,                 /* -funswitch-loops */
  OPT_funwind_tables = 894,                  /* -funwind-tables */
  OPT_fuse_cxa_atexit = 895,                 /* -fuse-cxa-atexit */
  OPT_fuse_cxa_get_exception_ptr = 896,      /* -fuse-cxa-get-exception-ptr */
  OPT_fuse_ld_bfd = 897,                     /* -fuse-ld=bfd */
  OPT_fuse_ld_gold = 898,                    /* -fuse-ld=gold */
  OPT_fuse_linker_plugin = 899,              /* -fuse-linker-plugin */
  OPT_fvar_tracking = 900,                   /* -fvar-tracking */
  OPT_fvar_tracking_assignments = 901,       /* -fvar-tracking-assignments */
  OPT_fvar_tracking_assignments_toggle = 902,/* -fvar-tracking-assignments-toggle */
  OPT_fvar_tracking_uninit = 903,            /* -fvar-tracking-uninit */
  OPT_fvariable_expansion_in_unroller = 904, /* -fvariable-expansion-in-unroller */
  /* OPT_fvect_cost_model = 905, */          /* -fvect-cost-model */
  OPT_fvect_cost_model_ = 906,               /* -fvect-cost-model= */
  OPT_fverbose_asm = 907,                    /* -fverbose-asm */
  /* OPT_fversion = 908, */                  /* -fversion */
  OPT_fvisibility_inlines_hidden = 909,      /* -fvisibility-inlines-hidden */
  OPT_fvisibility_ms_compat = 910,           /* -fvisibility-ms-compat */
  OPT_fvisibility_ = 911,                    /* -fvisibility= */
  OPT_fvpt = 912,                            /* -fvpt */
  /* OPT_fvtable_gc = 913, */                /* -fvtable-gc */
  /* OPT_fvtable_thunks = 914, */            /* -fvtable-thunks */
  OPT_fvtable_verify_ = 915,                 /* -fvtable-verify= */
  OPT_fvtv_counts = 916,                     /* -fvtv-counts */
  OPT_fvtv_debug = 917,                      /* -fvtv-debug */
  OPT_fweak = 918,                           /* -fweak */
  OPT_fweb = 919,                            /* -fweb */
  OPT_fwhole_program = 920,                  /* -fwhole-program */
  OPT_fwide_exec_charset_ = 921,             /* -fwide-exec-charset= */
  OPT_fworking_directory = 922,              /* -fworking-directory */
  OPT_fwpa = 923,                            /* -fwpa */
  OPT_fwpa_ = 924,                           /* -fwpa= */
  OPT_fwrapv = 925,                          /* -fwrapv */
  /* OPT_fxref = 926, */                     /* -fxref */
  /* OPT_fzee = 927, */                      /* -fzee */
  OPT_fzero_initialized_in_bss = 928,        /* -fzero-initialized-in-bss */
  OPT_fzero_link = 929,                      /* -fzero-link */
  OPT_g = 930,                               /* -g */
  OPT_gcoff = 931,                           /* -gcoff */
  OPT_gdwarf = 932,                          /* -gdwarf */
  OPT_gdwarf_ = 933,                         /* -gdwarf- */
  OPT_gen_decls = 934,                       /* -gen-decls */
  OPT_ggdb = 935,                            /* -ggdb */
  OPT_ggnu_pubnames = 936,                   /* -ggnu-pubnames */
  OPT_gno_pubnames = 937,                    /* -gno-pubnames */
  OPT_gno_record_gcc_switches = 938,         /* -gno-record-gcc-switches */
  OPT_gno_split_dwarf = 939,                 /* -gno-split-dwarf */
  OPT_gno_strict_dwarf = 940,                /* -gno-strict-dwarf */
  OPT_gpubnames = 941,                       /* -gpubnames */
  OPT_grecord_gcc_switches = 942,            /* -grecord-gcc-switches */
  OPT_gsplit_dwarf = 943,                    /* -gsplit-dwarf */
  OPT_gstabs = 944,                          /* -gstabs */
  OPT_gstabs_ = 945,                         /* -gstabs+ */
  OPT_gstrict_dwarf = 946,                   /* -gstrict-dwarf */
  OPT_gtoggle = 947,                         /* -gtoggle */
  OPT_gvms = 948,                            /* -gvms */
  OPT_gxcoff = 949,                          /* -gxcoff */
  OPT_gxcoff_ = 950,                         /* -gxcoff+ */
  OPT_gz = 951,                              /* -gz */
  OPT_gz_ = 952,                             /* -gz= */
  OPT_h = 953,                               /* -h */
  OPT_idirafter = 954,                       /* -idirafter */
  OPT_imacros = 955,                         /* -imacros */
  OPT_imultiarch = 956,                      /* -imultiarch */
  OPT_imultilib = 957,                       /* -imultilib */
  OPT_include = 958,                         /* -include */
  OPT_iplugindir_ = 959,                     /* -iplugindir= */
  OPT_iprefix = 960,                         /* -iprefix */
  OPT_iquote = 961,                          /* -iquote */
  OPT_iremap = 962,                          /* -iremap */
  OPT_isysroot = 963,                        /* -isysroot */
  OPT_isystem = 964,                         /* -isystem */
  OPT_iwithprefix = 965,                     /* -iwithprefix */
  OPT_iwithprefixbefore = 966,               /* -iwithprefixbefore */
  OPT_l = 967,                               /* -l */
  OPT_lang_asm = 968,                        /* -lang-asm */
  OPT_m32 = 969,                             /* -m32 */
  OPT_m64 = 970,                             /* -m64 */
  OPT_mabi_altivec = 971,                    /* -mabi=altivec */
  OPT_mabi_d32 = 972,                        /* -mabi=d32 */
  OPT_mabi_d64 = 973,                        /* -mabi=d64 */
  OPT_mabi_elfv1 = 974,                      /* -mabi=elfv1 */
  OPT_mabi_elfv2 = 975,                      /* -mabi=elfv2 */
  OPT_mabi_ibmlongdouble = 976,              /* -mabi=ibmlongdouble */
  OPT_mabi_ieeelongdouble = 977,             /* -mabi=ieeelongdouble */
  OPT_mabi_no_altivec = 978,                 /* -mabi=no-altivec */
  OPT_mabi_no_spe = 979,                     /* -mabi=no-spe */
  OPT_mabi_spe = 980,                        /* -mabi=spe */
  OPT_mads = 981,                            /* -mads */
  OPT_maix_struct_return = 982,              /* -maix-struct-return */
  OPT_malign_ = 983,                         /* -malign- */
  OPT_malign_branch_targets = 984,           /* -malign-branch-targets */
  OPT_mallow_df_permute = 985,               /* -mallow-df-permute */
  OPT_mallow_movmisalign = 986,              /* -mallow-movmisalign */
  OPT_maltivec = 987,                        /* -maltivec */
  OPT_maltivec_be = 988,                     /* -maltivec=be */
  OPT_maltivec_le = 989,                     /* -maltivec=le */
  OPT_malways_hint = 990,                    /* -malways-hint */
  OPT_mavoid_indexed_addresses = 991,        /* -mavoid-indexed-addresses */
  OPT_mbig = 992,                            /* -mbig */
  OPT_mbig_endian = 993,                     /* -mbig-endian */
  OPT_mbit_align = 994,                      /* -mbit-align */
  OPT_mbit_word = 995,                       /* -mbit-word */
  OPT_mblock_move_inline_limit_ = 996,       /* -mblock-move-inline-limit= */
  OPT_mbss_plt = 997,                        /* -mbss-plt */
  OPT_mcall_ = 998,                          /* -mcall- */
  OPT_mcmodel_ = 999,                        /* -mcmodel= */
  OPT_mcmpb = 1000,                          /* -mcmpb */
  OPT_mcompat_align_parm = 1001,             /* -mcompat-align-parm */
  OPT_mcpu_ = 1002,                          /* -mcpu= */
  OPT_mcrypto = 1003,                        /* -mcrypto */
  OPT_mdebug_ = 1004,                        /* -mdebug= */
  OPT_mdirect_move = 1005,                   /* -mdirect-move */
  OPT_mdlmzb = 1006,                         /* -mdlmzb */
  OPT_mdouble_float = 1007,                  /* -mdouble-float */
  OPT_meabi = 1008,                          /* -meabi */
  OPT_mefficient_unaligned_vector = 1009,    /* -mefficient-unaligned-vector */
  OPT_memb = 1010,                           /* -memb */
  OPT_mfloat_gprs_ = 1011,                   /* -mfloat-gprs= */
  OPT_mfloat128 = 1012,                      /* -mfloat128 */
  OPT_mfloat128_convert = 1013,              /* -mfloat128-convert */
  OPT_mfloat128_hardware = 1014,             /* -mfloat128-hardware */
  OPT_mfp_in_toc = 1015,                     /* -mfp-in-toc */
  OPT_mfprnd = 1016,                         /* -mfprnd */
  OPT_mfpu_ = 1017,                          /* -mfpu= */
  OPT_mfriz = 1018,                          /* -mfriz */
  OPT_mfull_toc = 1019,                      /* -mfull-toc */
  /* OPT_mfused_madd = 1020, */              /* -mfused-madd */
  OPT_mgen_cell_microcode = 1021,            /* -mgen-cell-microcode */
  OPT_mhard_dfp = 1022,                      /* -mhard-dfp */
  OPT_mhard_float = 1023,                    /* -mhard-float */
  OPT_mhtm = 1024,                           /* -mhtm */
  OPT_minsert_sched_nops_ = 1025,            /* -minsert-sched-nops= */
  OPT_misel = 1026,                          /* -misel */
  /* OPT_misel_no = 1027, */                 /* -misel=no */
  /* OPT_misel_yes = 1028, */                /* -misel=yes */
  OPT_mlittle = 1029,                        /* -mlittle */
  OPT_mlittle_endian = 1030,                 /* -mlittle-endian */
  OPT_mlong_double_ = 1031,                  /* -mlong-double- */
  OPT_mlongcall = 1032,                      /* -mlongcall */
  OPT_mlra = 1033,                           /* -mlra */
  OPT_mmfcrf = 1034,                         /* -mmfcrf */
  OPT_mmfpgpr = 1035,                        /* -mmfpgpr */
  OPT_mminimal_toc = 1036,                   /* -mminimal-toc */
  OPT_mmodulo = 1037,                        /* -mmodulo */
  OPT_mmulhw = 1038,                         /* -mmulhw */
  OPT_mmultiple = 1039,                      /* -mmultiple */
  OPT_mmvme = 1040,                          /* -mmvme */
  OPT_mnewlib = 1041,                        /* -mnewlib */
  OPT_mno_fp_in_toc = 1042,                  /* -mno-fp-in-toc */
  OPT_mno_sum_in_toc = 1043,                 /* -mno-sum-in-toc */
  OPT_mno_toc = 1044,                        /* -mno-toc */
  OPT_mno_traceback = 1045,                  /* -mno-traceback */
  OPT_mno_update = 1046,                     /* -mno-update */
  OPT_moptimize_swaps = 1047,                /* -moptimize-swaps */
  OPT_mpaired = 1048,                        /* -mpaired */
  OPT_mpointers_to_nested_functions = 1049,  /* -mpointers-to-nested-functions */
  OPT_mpopcntb = 1050,                       /* -mpopcntb */
  OPT_mpopcntd = 1051,                       /* -mpopcntd */
  OPT_mpower8_fusion = 1052,                 /* -mpower8-fusion */
  OPT_mpower8_fusion_sign = 1053,            /* -mpower8-fusion-sign */
  OPT_mpower8_vector = 1054,                 /* -mpower8-vector */
  OPT_mpower9_dform = 1055,                  /* -mpower9-dform */
  OPT_mpower9_dform_scalar = 1056,           /* -mpower9-dform-scalar */
  OPT_mpower9_dform_vector = 1057,           /* -mpower9-dform-vector */
  OPT_mpower9_fusion = 1058,                 /* -mpower9-fusion */
  OPT_mpower9_minmax = 1059,                 /* -mpower9-minmax */
  OPT_mpower9_misc = 1060,                   /* -mpower9-misc */
  OPT_mpower9_vector = 1061,                 /* -mpower9-vector */
  /* OPT_mpowerpc = 1062, */                 /* -mpowerpc */
  OPT_mpowerpc_gfxopt = 1063,                /* -mpowerpc-gfxopt */
  OPT_mpowerpc_gpopt = 1064,                 /* -mpowerpc-gpopt */
  OPT_mpowerpc64 = 1065,                     /* -mpowerpc64 */
  OPT_mprioritize_restricted_insns_ = 1066,  /* -mprioritize-restricted-insns= */
  OPT_mprofile_kernel = 1067,                /* -mprofile-kernel */
  OPT_mprototype = 1068,                     /* -mprototype */
  OPT_mquad_memory = 1069,                   /* -mquad-memory */
  OPT_mquad_memory_atomic = 1070,            /* -mquad-memory-atomic */
  OPT_mrecip = 1071,                         /* -mrecip */
  OPT_mrecip_precision = 1072,               /* -mrecip-precision */
  OPT_mrecip_ = 1073,                        /* -mrecip= */
  OPT_mregnames = 1074,                      /* -mregnames */
  OPT_mrelocatable = 1075,                   /* -mrelocatable */
  OPT_mrelocatable_lib = 1076,               /* -mrelocatable-lib */
  OPT_msave_toc_indirect = 1077,             /* -msave-toc-indirect */
  OPT_msched_costly_dep_ = 1078,             /* -msched-costly-dep= */
  OPT_msched_epilog = 1079,                  /* -msched-epilog */
  OPT_msched_groups = 1080,                  /* -msched-groups */
  OPT_msched_prolog = 1081,                  /* -msched-prolog */
  OPT_msdata = 1082,                         /* -msdata */
  OPT_msdata_ = 1083,                        /* -msdata= */
  OPT_msecure_plt = 1084,                    /* -msecure-plt */
  OPT_mshlib = 1085,                         /* -mshlib */
  OPT_msim = 1086,                           /* -msim */
  OPT_msimple_fpu = 1087,                    /* -msimple-fpu */
  OPT_msingle_float = 1088,                  /* -msingle-float */
  OPT_msingle_pic_base = 1089,               /* -msingle-pic-base */
  OPT_msoft_float = 1090,                    /* -msoft-float */
  OPT_mspe = 1091,                           /* -mspe */
  /* OPT_mspe_no = 1092, */                  /* -mspe=no */
  /* OPT_mspe_yes = 1093, */                 /* -mspe=yes */
  OPT_mstrict_align = 1094,                  /* -mstrict-align */
  OPT_mstring = 1095,                        /* -mstring */
  OPT_msum_in_toc = 1096,                    /* -msum-in-toc */
  OPT_msvr4_struct_return = 1097,            /* -msvr4-struct-return */
  OPT_mtls_markers = 1098,                   /* -mtls-markers */
  OPT_mtls_size_ = 1099,                     /* -mtls-size= */
  OPT_mtoc = 1100,                           /* -mtoc */
  OPT_mtoc_fusion = 1101,                    /* -mtoc-fusion */
  OPT_mtraceback_ = 1102,                    /* -mtraceback= */
  OPT_mtune_ = 1103,                         /* -mtune= */
  OPT_mupdate = 1104,                        /* -mupdate */
  OPT_mupper_regs = 1105,                    /* -mupper-regs */
  OPT_mupper_regs_df = 1106,                 /* -mupper-regs-df */
  OPT_mupper_regs_sf = 1107,                 /* -mupper-regs-sf */
  OPT_mveclibabi_ = 1108,                    /* -mveclibabi= */
  OPT_mvectorize_builtins = 1109,            /* -mvectorize-builtins */
  OPT_mvrsave = 1110,                        /* -mvrsave */
  /* OPT_mvrsave_no = 1111, */               /* -mvrsave=no */
  /* OPT_mvrsave_yes = 1112, */              /* -mvrsave=yes */
  OPT_mvsx = 1113,                           /* -mvsx */
  OPT_mvsx_align_128 = 1114,                 /* -mvsx-align-128 */
  OPT_mvsx_scalar_double = 1115,             /* -mvsx-scalar-double */
  OPT_mvsx_scalar_float = 1116,              /* -mvsx-scalar-float */
  /* OPT_mvsx_scalar_memory = 1117, */       /* -mvsx-scalar-memory */
  OPT_mvsx_timode = 1118,                    /* -mvsx-timode */
  OPT_mwarn_altivec_long = 1119,             /* -mwarn-altivec-long */
  OPT_mwarn_cell_microcode = 1120,           /* -mwarn-cell-microcode */
  OPT_mxilinx_fpu = 1121,                    /* -mxilinx-fpu */
  OPT_mxl_compat = 1122,                     /* -mxl-compat */
  OPT_myellowknife = 1123,                   /* -myellowknife */
  OPT_n = 1124,                              /* -n */
  OPT_no_canonical_prefixes = 1125,          /* -no-canonical-prefixes */
  OPT_no_integrated_cpp = 1126,              /* -no-integrated-cpp */
  OPT_no_pie = 1127,                         /* -no-pie */
  OPT_nodefaultlibs = 1128,                  /* -nodefaultlibs */
  OPT_nostartfiles = 1129,                   /* -nostartfiles */
  OPT_nostdinc = 1130,                       /* -nostdinc */
  OPT_nostdinc__ = 1131,                     /* -nostdinc++ */
  OPT_nostdlib = 1132,                       /* -nostdlib */
  OPT_o = 1133,                              /* -o */
  OPT_p = 1134,                              /* -p */
  OPT_pass_exit_codes = 1135,                /* -pass-exit-codes */
  /* OPT_pedantic = 1136, */                 /* -pedantic */
  OPT_pedantic_errors = 1137,                /* -pedantic-errors */
  OPT_pg = 1138,                             /* -pg */
  OPT_pie = 1139,                            /* -pie */
  OPT_pipe = 1140,                           /* -pipe */
  OPT_posix = 1141,                          /* -posix */
  OPT_print_file_name_ = 1142,               /* -print-file-name= */
  OPT_print_libgcc_file_name = 1143,         /* -print-libgcc-file-name */
  OPT_print_multi_directory = 1144,          /* -print-multi-directory */
  OPT_print_multi_lib = 1145,                /* -print-multi-lib */
  OPT_print_multi_os_directory = 1146,       /* -print-multi-os-directory */
  OPT_print_multiarch = 1147,                /* -print-multiarch */
  OPT_print_objc_runtime_info = 1148,        /* -print-objc-runtime-info */
  OPT_print_prog_name_ = 1149,               /* -print-prog-name= */
  OPT_print_search_dirs = 1150,              /* -print-search-dirs */
  OPT_print_sysroot = 1151,                  /* -print-sysroot */
  OPT_print_sysroot_headers_suffix = 1152,   /* -print-sysroot-headers-suffix */
  OPT_pthread = 1153,                        /* -pthread */
  OPT_quiet = 1154,                          /* -quiet */
  OPT_r = 1155,                              /* -r */
  OPT_rdynamic = 1156,                       /* -rdynamic */
  OPT_remap = 1157,                          /* -remap */
  OPT_rpath_ = 1158,                         /* -rpath= */
  OPT_s = 1159,                              /* -s */
  OPT_save_temps = 1160,                     /* -save-temps */
  OPT_save_temps_ = 1161,                    /* -save-temps= */
  OPT_shared = 1162,                         /* -shared */
  OPT_shared_libgcc = 1163,                  /* -shared-libgcc */
  /* OPT_specs = 1164, */                    /* -specs */
  OPT_specs_ = 1165,                         /* -specs= */
  OPT_static = 1166,                         /* -static */
  OPT_static_libasan = 1167,                 /* -static-libasan */
  OPT_static_libgcc = 1168,                  /* -static-libgcc */
  OPT_static_libgfortran = 1169,             /* -static-libgfortran */
  OPT_static_libgo = 1170,                   /* -static-libgo */
  OPT_static_liblsan = 1171,                 /* -static-liblsan */
  OPT_static_libmpx = 1172,                  /* -static-libmpx */
  OPT_static_libmpxwrappers = 1173,          /* -static-libmpxwrappers */
  OPT_static_libstdc__ = 1174,               /* -static-libstdc++ */
  OPT_static_libtsan = 1175,                 /* -static-libtsan */
  OPT_static_libubsan = 1176,                /* -static-libubsan */
  /* OPT_std_c__03 = 1177, */                /* -std=c++03 */
  /* OPT_std_c__0x = 1178, */                /* -std=c++0x */
  OPT_std_c__11 = 1179,                      /* -std=c++11 */
  OPT_std_c__14 = 1180,                      /* -std=c++14 */
  /* OPT_std_c__17 = 1181, */                /* -std=c++17 */
  /* OPT_std_c__1y = 1182, */                /* -std=c++1y */
  OPT_std_c__1z = 1183,                      /* -std=c++1z */
  OPT_std_c__98 = 1184,                      /* -std=c++98 */
  OPT_std_c11 = 1185,                        /* -std=c11 */
  /* OPT_std_c1x = 1186, */                  /* -std=c1x */
  /* OPT_std_c89 = 1187, */                  /* -std=c89 */
  OPT_std_c90 = 1188,                        /* -std=c90 */
  OPT_std_c99 = 1189,                        /* -std=c99 */
  /* OPT_std_c9x = 1190, */                  /* -std=c9x */
  /* OPT_std_gnu__03 = 1191, */              /* -std=gnu++03 */
  /* OPT_std_gnu__0x = 1192, */              /* -std=gnu++0x */
  OPT_std_gnu__11 = 1193,                    /* -std=gnu++11 */
  OPT_std_gnu__14 = 1194,                    /* -std=gnu++14 */
  /* OPT_std_gnu__17 = 1195, */              /* -std=gnu++17 */
  /* OPT_std_gnu__1y = 1196, */              /* -std=gnu++1y */
  OPT_std_gnu__1z = 1197,                    /* -std=gnu++1z */
  OPT_std_gnu__98 = 1198,                    /* -std=gnu++98 */
  OPT_std_gnu11 = 1199,                      /* -std=gnu11 */
  /* OPT_std_gnu1x = 1200, */                /* -std=gnu1x */
  /* OPT_std_gnu89 = 1201, */                /* -std=gnu89 */
  OPT_std_gnu90 = 1202,                      /* -std=gnu90 */
  OPT_std_gnu99 = 1203,                      /* -std=gnu99 */
  /* OPT_std_gnu9x = 1204, */                /* -std=gnu9x */
  /* OPT_std_iso9899_1990 = 1205, */         /* -std=iso9899:1990 */
  OPT_std_iso9899_199409 = 1206,             /* -std=iso9899:199409 */
  /* OPT_std_iso9899_1999 = 1207, */         /* -std=iso9899:1999 */
  /* OPT_std_iso9899_199x = 1208, */         /* -std=iso9899:199x */
  /* OPT_std_iso9899_2011 = 1209, */         /* -std=iso9899:2011 */
  OPT_symbolic = 1210,                       /* -symbolic */
  OPT_t = 1211,                              /* -t */
  OPT_time = 1212,                           /* -time */
  OPT_time_ = 1213,                          /* -time= */
  OPT_traditional = 1214,                    /* -traditional */
  OPT_traditional_cpp = 1215,                /* -traditional-cpp */
  OPT_trigraphs = 1216,                      /* -trigraphs */
  OPT_u = 1217,                              /* -u */
  OPT_undef = 1218,                          /* -undef */
  OPT_v = 1219,                              /* -v */
  OPT_version = 1220,                        /* -version */
  OPT_w = 1221,                              /* -w */
  OPT_wrapper = 1222,                        /* -wrapper */
  OPT_x = 1223,                              /* -x */
  OPT_z = 1224,                              /* -z */
  N_OPTS,
  OPT_SPECIAL_unknown,
  OPT_SPECIAL_ignore,
  OPT_SPECIAL_program_name,
  OPT_SPECIAL_input_file
};

#ifdef GCC_C_COMMON_C
/* Mapping from cpp message reasons to the options that enable them.  */
#include <cpplib.h>
struct cpp_reason_option_codes_t
{
  const int reason;		/* cpplib message reason.  */
  const int option_code;	/* gcc option that controls this message.  */
};

static const struct cpp_reason_option_codes_t cpp_reason_option_codes[] = {
  {CPP_W_BUILTIN_MACRO_REDEFINED,           OPT_Wbuiltin_macro_redefined},
  {CPP_W_CXX_OPERATOR_NAMES,                OPT_Wc___compat},
  {CPP_W_CXX11_COMPAT,                      OPT_Wc__11_compat},
  {CPP_W_C90_C99_COMPAT,                    OPT_Wc90_c99_compat},
  {CPP_W_COMMENTS,                          OPT_Wcomment},
  {CPP_W_WARNING_DIRECTIVE,                 OPT_Wcpp},
  {CPP_W_DATE_TIME,                         OPT_Wdate_time},
  {CPP_W_DEPRECATED,                        OPT_Wdeprecated},
  {CPP_W_ENDIF_LABELS,                      OPT_Wendif_labels},
  {CPP_W_INVALID_PCH,                       OPT_Winvalid_pch},
  {CPP_W_LITERAL_SUFFIX,                    OPT_Wliteral_suffix},
  {CPP_W_LONG_LONG,                         OPT_Wlong_long},
  {CPP_W_MISSING_INCLUDE_DIRS,              OPT_Wmissing_include_dirs},
  {CPP_W_MULTICHAR,                         OPT_Wmultichar},
  {CPP_W_NORMALIZE,                         OPT_Wnormalized_},
  {CPP_W_PEDANTIC,                          OPT_Wpedantic},
  {CPP_W_TRADITIONAL,                       OPT_Wtraditional},
  {CPP_W_TRIGRAPHS,                         OPT_Wtrigraphs},
  {CPP_W_UNDEF,                             OPT_Wundef},
  {CPP_W_UNUSED_MACROS,                     OPT_Wunused_macros},
  {CPP_W_VARIADIC_MACROS,                   OPT_Wvariadic_macros},
  {CPP_W_NONE,                              0},
};
#endif

#endif /* OPTIONS_H */
