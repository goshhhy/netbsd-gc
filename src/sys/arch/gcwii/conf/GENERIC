# GENERIC machine description file
#
# This machine description file is used to generate the default NetBSD
# kernel.  The generic kernel does not include all options, subsystems
# and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling NetBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.

include "arch/gcwii/conf/std.gcwii"

options INCLUDE_CONFIG_FILE	# embed config file in kernel binary

maxusers 32

# Standard system options

makeoptions     TEXTADDR=0x00003400

options 	RTC_OFFSET=0	# hardware clock is this many mins. west of GMT
options 	NTP		# NTP phase/frequency locked loop

#options 	KTRACE		# system call tracing via ktrace(1)

#options 	SYSVMSG		# System V-like message queues
#options 	SYSVSEM		# System V-like semaphores
#options 	SYSVSHM		# System V-like memory sharing

#options 	USERCONF	# userconf(4) support
#options 	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
#options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel

# Alternate buffer queue strategies for better responsiveness under high
# disk I/O load.
#options 	BUFQ_READPRIO
#options 	BUFQ_PRIOCSCAN

# Diagnostic/debugging support options
#options 	DIAGNOSTIC	# cheap kernel consistency checks
#options 	DEBUG		# expensive debugging checks/support
#options 	DDB		# in-kernel debugger
#options 	DDB_ONPANIC=1	# see also sysctl(7): `ddb.onpanic'
#options 	DDB_HISTORY_SIZE=512	# Enable history editing in DDB
#makeoptions	DEBUG="-g"

#options 	COMPAT_386BSD_MBRPART	# recognize old partition ID
#options 	COMPAT_LINUX	# Linux binary compatibility

# File systems
file-system	FFS		# UFS
#file-system	EXT2FS		# second extended file system (linux)
#file-system	LFS		# log-structured file system
file-system	MFS		# memory file system
#file-system	NFS		# Network File System client
file-system	CD9660		# ISO 9660 + Rock Ridge file system
#file-system	MSDOSFS		# MS-DOS file system
#file-system	FDESC		# /dev/fd
file-system	KERNFS		# /kern
file-system	NULLFS		# loopback file system
#file-system	OVERLAY		# overlay file system
file-system	PROCFS		# /proc
#file-system	UMAPFS		# NULLFS + uid and gid remapping
file-system	UNION		# union file system
#file-system	CODA		# Coda File System; also needs vcoda (below)
#file-system	SMBFS		# CIFS; also needs nsmb (below)
file-system	PTYFS		# /dev/pts/N support
file-system	TMPFS		# Efficient memory file-system
#file-system	UDF		# experimental - OSTA UDF CD/DVD file-system
#file-system	HFS		# experimental - Apple HFS+ (read-only)

# File system options
options 	QUOTA		# legacy UFS quotas
options 	QUOTA2		# new, in-filesystem UFS quotas
#options 	DISKLABEL_EI	# disklabel Endian Independent support
#options 	FFS_EI		# FFS Endian Independent support
#options 	WAPBL		# File system journaling support
#options 	UFS_DIRHASH	# UFS Large Directory Hashing - Experimental
#options 	NFSSERVER	# Network File System server
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support
options 	UFS_EXTATTR	# Extended attribute support for UFS1
#options 	EXT2FS_SYSTEM_FLAGS	# makes ext2fs file flags (append and
				# immutable) behave as system flags.
#options 	APPLE_UFS	# Apple UFS support in FFS

# Networking options
#options 	GATEWAY		# packet forwarding
options 	INET		# IP + ICMP + TCP + UDP
#options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# IP multicast routing
#options 	PIM		# Protocol Independent Multicast
#options 	NETATALK	# AppleTalk networking protocols
#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
#options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!
#options 	PCIVERBOSE	# verbose PCI device autoconfig messages
#options 	MIIVERBOSE	# verbose PHY autoconfig messages
#options 	PCI_CONFIG_DUMP	# verbosely dump PCI config space
#options 	SCSIVERBOSE	# human readable SCSI error messages

#options 	NFS_BOOT_BOOTPARAM,NFS_BOOT_BOOTP

# wscons options
# builtin terminal emulations
#options 	WSEMUL_SUN		# sun terminal emulation
#options 	WSEMUL_VT100		# VT100 / VT220 emulation
#options 	WS_DEFAULT_FG=WSCOL_LIGHT_WHITE
# compatibility to other console drivers
#options 	WSDISPLAY_COMPAT_USL	# wsconscfg VT handling
#options 	WSDISPLAY_COMPAT_RAWKBD	# can get raw scancodes

config		netbsd	root on ? type ?

mainbus0 at root
cpu0	at mainbus0
usbgecko0	at mainbus0



#
# Pseudo-Devices
#
pseudo-device	pty			# pseudo-terminals
pseudo-device	loop			# network loopback
