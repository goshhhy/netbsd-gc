#include <sys/cdefs.h>

#include "opt_config.h"

/*
 * Add either (or both) of
 *
 *	options INCLUDE_CONFIG_FILE
 *	options INCLUDE_JUST_CONFIG
 *
 * to your kernel config file to embed it in the resulting
 * kernel.  The latter option does not include files that are
 * included (recursively) by your config file.  The embedded
 * data be extracted by using the command:
 *
 *	strings netbsd | sed -n 's/^_CFG_//p' | unvis
 */

#ifdef CONFIG_FILE
#if defined(INCLUDE_CONFIG_FILE) || defined(INCLUDE_JUST_CONFIG)

static const char config[] __used =

#ifdef INCLUDE_CONFIG_FILE

"_CFG_### START CONFIG FILE \"/home/ky0ko/code/netbsd-gc/src/sys/arch/gcwii/conf/GENERIC\"\n"

#endif /* INCLUDE_CONFIG_FILE */

"_CFG_# GENERIC machine description file\n"
"_CFG_#\n"
"_CFG_# This machine description file is used to generate the default NetBSD\n"
"_CFG_# kernel.  The generic kernel does not include all options, subsystems\n"
"_CFG_# and device drivers, but should be useful for most applications.\n"
"_CFG_#\n"
"_CFG_# The machine description file can be customised for your specific\n"
"_CFG_# machine to reduce the kernel size and improve its performance.\n"
"_CFG_#\n"
"_CFG_# For further information on compiling NetBSD kernels, see the config(8)\n"
"_CFG_# man page.\n"
"_CFG_#\n"
"_CFG_# For further information on hardware support for this architecture, see\n"
"_CFG_# the intro(4) man page.  For further information about kernel options\n"
"_CFG_# for this architecture, see the options(4) man page.  For an explanation\n"
"_CFG_# of each device driver in this file see the section 4 man page for the\n"
"_CFG_# device.\n"
"_CFG_\n"
"_CFG_include \"arch/gcwii/conf/std.gcwii\"\n"
"_CFG_\n"
"_CFG_options INCLUDE_CONFIG_FILE\\011# embed config file in kernel binary\n"
"_CFG_\n"
"_CFG_maxusers 32\n"
"_CFG_\n"
"_CFG_# Standard system options\n"
"_CFG_\n"
"_CFG_makeoptions     TEXTADDR=0x00003400\n"
"_CFG_\n"
"_CFG_options \\011RTC_OFFSET=0\\011# hardware clock is this many mins. west of GMT\n"
"_CFG_options \\011NTP\\011\\011# NTP phase/frequency locked loop\n"
"_CFG_\n"
"_CFG_#options \\011KTRACE\\011\\011# system call tracing via ktrace(1)\n"
"_CFG_\n"
"_CFG_#options \\011SYSVMSG\\011\\011# System V-like message queues\n"
"_CFG_#options \\011SYSVSEM\\011\\011# System V-like semaphores\n"
"_CFG_#options \\011SYSVSHM\\011\\011# System V-like memory sharing\n"
"_CFG_\n"
"_CFG_#options \\011USERCONF\\011# userconf(4) support\n"
"_CFG_#options \\011PIPE_SOCKETPAIR\\011# smaller, but slower pipe(2)\n"
"_CFG_#options \\011SYSCTL_INCLUDE_DESCR\\011# Include sysctl descriptions in kernel\n"
"_CFG_\n"
"_CFG_# Alternate buffer queue strategies for better responsiveness under high\n"
"_CFG_# disk I/O load.\n"
"_CFG_#options \\011BUFQ_READPRIO\n"
"_CFG_#options \\011BUFQ_PRIOCSCAN\n"
"_CFG_\n"
"_CFG_# Diagnostic/debugging support options\n"
"_CFG_#options \\011DIAGNOSTIC\\011# cheap kernel consistency checks\n"
"_CFG_#options \\011DEBUG\\011\\011# expensive debugging checks/support\n"
"_CFG_#options \\011DDB\\011\\011# in-kernel debugger\n"
"_CFG_#options \\011DDB_ONPANIC=1\\011# see also sysctl(7): `ddb.onpanic'\n"
"_CFG_#options \\011DDB_HISTORY_SIZE=512\\011# Enable history editing in DDB\n"
"_CFG_#makeoptions\\011DEBUG=\"-g\"\n"
"_CFG_\n"
"_CFG_#options \\011COMPAT_386BSD_MBRPART\\011# recognize old partition ID\n"
"_CFG_#options \\011COMPAT_LINUX\\011# Linux binary compatibility\n"
"_CFG_\n"
"_CFG_# File systems\n"
"_CFG_file-system\\011FFS\\011\\011# UFS\n"
"_CFG_#file-system\\011EXT2FS\\011\\011# second extended file system (linux)\n"
"_CFG_#file-system\\011LFS\\011\\011# log-structured file system\n"
"_CFG_file-system\\011MFS\\011\\011# memory file system\n"
"_CFG_#file-system\\011NFS\\011\\011# Network File System client\n"
"_CFG_file-system\\011CD9660\\011\\011# ISO 9660 + Rock Ridge file system\n"
"_CFG_#file-system\\011MSDOSFS\\011\\011# MS-DOS file system\n"
"_CFG_#file-system\\011FDESC\\011\\011# /dev/fd\n"
"_CFG_file-system\\011KERNFS\\011\\011# /kern\n"
"_CFG_file-system\\011NULLFS\\011\\011# loopback file system\n"
"_CFG_#file-system\\011OVERLAY\\011\\011# overlay file system\n"
"_CFG_file-system\\011PROCFS\\011\\011# /proc\n"
"_CFG_#file-system\\011UMAPFS\\011\\011# NULLFS + uid and gid remapping\n"
"_CFG_file-system\\011UNION\\011\\011# union file system\n"
"_CFG_#file-system\\011CODA\\011\\011# Coda File System; also needs vcoda (below)\n"
"_CFG_#file-system\\011SMBFS\\011\\011# CIFS; also needs nsmb (below)\n"
"_CFG_file-system\\011PTYFS\\011\\011# /dev/pts/N support\n"
"_CFG_file-system\\011TMPFS\\011\\011# Efficient memory file-system\n"
"_CFG_#file-system\\011UDF\\011\\011# experimental - OSTA UDF CD/DVD file-system\n"
"_CFG_#file-system\\011HFS\\011\\011# experimental - Apple HFS+ (read-only)\n"
"_CFG_\n"
"_CFG_# File system options\n"
"_CFG_options \\011QUOTA\\011\\011# legacy UFS quotas\n"
"_CFG_options \\011QUOTA2\\011\\011# new, in-filesystem UFS quotas\n"
"_CFG_#options \\011DISKLABEL_EI\\011# disklabel Endian Independent support\n"
"_CFG_#options \\011FFS_EI\\011\\011# FFS Endian Independent support\n"
"_CFG_#options \\011WAPBL\\011\\011# File system journaling support\n"
"_CFG_#options \\011UFS_DIRHASH\\011# UFS Large Directory Hashing - Experimental\n"
"_CFG_#options \\011NFSSERVER\\011# Network File System server\n"
"_CFG_#options \\011FFS_NO_SNAPSHOT\\011# No FFS snapshot support\n"
"_CFG_options \\011UFS_EXTATTR\\011# Extended attribute support for UFS1\n"
"_CFG_#options \\011EXT2FS_SYSTEM_FLAGS\\011# makes ext2fs file flags (append and\n"
"_CFG_\\011\\011\\011\\011# immutable) behave as system flags.\n"
"_CFG_#options \\011APPLE_UFS\\011# Apple UFS support in FFS\n"
"_CFG_\n"
"_CFG_# Networking options\n"
"_CFG_#options \\011GATEWAY\\011\\011# packet forwarding\n"
"_CFG_options \\011INET\\011\\011# IP + ICMP + TCP + UDP\n"
"_CFG_#options \\011INET6\\011\\011# IPV6\n"
"_CFG_#options \\011IPSEC\\011\\011# IP security\n"
"_CFG_#options \\011IPSEC_DEBUG\\011# debug for IP security\n"
"_CFG_#options \\011MROUTING\\011# IP multicast routing\n"
"_CFG_#options \\011PIM\\011\\011# Protocol Independent Multicast\n"
"_CFG_#options \\011NETATALK\\011# AppleTalk networking protocols\n"
"_CFG_#options \\011PPP_BSDCOMP\\011# BSD-Compress compression support for PPP\n"
"_CFG_#options \\011PPP_DEFLATE\\011# Deflate compression support for PPP\n"
"_CFG_#options \\011PPP_FILTER\\011# Active filter support for PPP (requires bpf)\n"
"_CFG_#options \\011TCP_DEBUG\\011# Record last TCP_NDEBUG packets with SO_DEBUG\n"
"_CFG_\n"
"_CFG_#options \\011ALTQ\\011\\011# Manipulate network interfaces' output queues\n"
"_CFG_#options \\011ALTQ_BLUE\\011# Stochastic Fair Blue\n"
"_CFG_#options \\011ALTQ_CBQ\\011# Class-Based Queueing\n"
"_CFG_#options \\011ALTQ_CDNR\\011# Diffserv Traffic Conditioner\n"
"_CFG_#options \\011ALTQ_FIFOQ\\011# First-In First-Out Queue\n"
"_CFG_#options \\011ALTQ_FLOWVALVE\\011# RED/flow-valve (red-penalty-box)\n"
"_CFG_#options \\011ALTQ_HFSC\\011# Hierarchical Fair Service Curve\n"
"_CFG_#options \\011ALTQ_LOCALQ\\011# Local queueing discipline\n"
"_CFG_#options \\011ALTQ_PRIQ\\011# Priority Queueing\n"
"_CFG_#options \\011ALTQ_RED\\011# Random Early Detection\n"
"_CFG_#options \\011ALTQ_RIO\\011# RED with IN/OUT\n"
"_CFG_#options \\011ALTQ_WFQ\\011# Weighted Fair Queueing\n"
"_CFG_\n"
"_CFG_# These options enable verbose messages for several subsystems.\n"
"_CFG_# Warning, these may compile large string tables into the kernel!\n"
"_CFG_#options \\011PCIVERBOSE\\011# verbose PCI device autoconfig messages\n"
"_CFG_#options \\011MIIVERBOSE\\011# verbose PHY autoconfig messages\n"
"_CFG_#options \\011PCI_CONFIG_DUMP\\011# verbosely dump PCI config space\n"
"_CFG_#options \\011SCSIVERBOSE\\011# human readable SCSI error messages\n"
"_CFG_\n"
"_CFG_#options \\011NFS_BOOT_BOOTPARAM,NFS_BOOT_BOOTP\n"
"_CFG_\n"
"_CFG_# wscons options\n"
"_CFG_# builtin terminal emulations\n"
"_CFG_#options \\011WSEMUL_SUN\\011\\011# sun terminal emulation\n"
"_CFG_#options \\011WSEMUL_VT100\\011\\011# VT100 / VT220 emulation\n"
"_CFG_#options \\011WS_DEFAULT_FG=WSCOL_LIGHT_WHITE\n"
"_CFG_# compatibility to other console drivers\n"
"_CFG_#options \\011WSDISPLAY_COMPAT_USL\\011# wsconscfg VT handling\n"
"_CFG_#options \\011WSDISPLAY_COMPAT_RAWKBD\\011# can get raw scancodes\n"
"_CFG_\n"
"_CFG_config\\011\\011netbsd\\011root on ? type ?\n"
"_CFG_\n"
"_CFG_mainbus0 at root\n"
"_CFG_cpu0\\011at mainbus0\n"
"_CFG_usbgecko0\\011at mainbus0\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_\n"
"_CFG_#\n"
"_CFG_# Pseudo-Devices\n"
"_CFG_#\n"
"_CFG_pseudo-device\\011pty\\011\\011\\011# pseudo-terminals\n"
"_CFG_pseudo-device\\011loop\\011\\011\\011# network loopback\n"
#ifdef INCLUDE_CONFIG_FILE

"_CFG_### END CONFIG FILE \"/home/ky0ko/code/netbsd-gc/src/sys/arch/gcwii/conf/GENERIC\"\n"
"_CFG_### (included from \"arch/gcwii/conf/std.gcwii\")\n"
"_CFG_###> # standard, required options for NetBSD/gcwii\n"
"_CFG_###> \n"
"_CFG_###> machine gcwii powerpc\n"
"_CFG_###> include \"conf/std\"\\011# MI standard options\n"
"_CFG_###> \n"
"_CFG_###> \n"
"_CFG_###> options \\011PPC_OEA     # Gamecube and Wii use PPC750 series CPUs\n"
"_CFG_###> makeoptions\\011PPCDIR=\"oea\"\\011# Tell Makefile.powerpc what dir to use\n"
"_CFG_###> makeoptions PPC_ARCH_MODE=\"ppc32\"\n"
"_CFG_###> \n"
"_CFG_###> options \\011EXEC_ELF32\\011# exec ELF binaries\n"
"_CFG_###> options \\011EXEC_SCRIPT\\011# exec #! scripts\n"
"_CFG_###> \n"
"_CFG_###> options \\011INTSTK=0x2000\n"
"_CFG_### (end include \"arch/gcwii/conf/std.gcwii\")\n"
"_CFG_### (included from \"conf/std\")\n"
"_CFG_###> # $NetBSD: std,v 1.22 2016/11/02 00:11:59 pgoyette Exp $\n"
"_CFG_###> #\n"
"_CFG_###> # standard MI 'options'\n"
"_CFG_###> #\n"
"_CFG_###> # this file is for options which can't be off-by-default for some reasons.\n"
"_CFG_###> # \"it's commonly used\" is NOT a good reason to enable options here.\n"
"_CFG_###> \n"
"_CFG_###> #\n"
"_CFG_###> # Always include \"kern\" attribute (module).  Other attributes don't need to\n"
"_CFG_###> # depend on \"kern\".\n"
"_CFG_###> #\n"
"_CFG_###> select\\011kern\n"
"_CFG_###> \n"
"_CFG_###> # Always include the \"vfs\" attribute (module).  Although all of the\n"
"_CFG_###> # ufs/xxx file systems depend on the vfs attribute, it is not required\n"
"_CFG_###> # that any file system actually be built-in to the kernel.  (At least\n"
"_CFG_###> # on some architectures, file system modules can be loaded at boot\n"
"_CFG_###> # time.)\n"
"_CFG_###> \n"
"_CFG_###> select vfs\n"
"_CFG_###> \n"
"_CFG_###> select\\011net\\011\\011# XXX Clean up dependency\n"
"_CFG_###> \n"
"_CFG_###> # the following options are on-by-default to keep\n"
"_CFG_###> # kernel config file compatibility.\n"
"_CFG_###> options\\011VMSWAP\\011\\011# Swap device/file support\n"
"_CFG_###> options\\011BUFQ_FCFS\\011# First-come First-serve strategy\n"
"_CFG_###> options\\011BUFQ_DISKSORT\\011# Traditional min seek sort strategy\n"
"_CFG_###> options\\011RFC2292\\011\\011# Previous version of Adv. Sockets API for IPv6 \n"
"_CFG_###> options\\011PTRACE\\011\\011# Include ptrace(2) syscall\n"
"_CFG_###> options\\011PTRACE_HOOKS\\011# Include ptrace hooks\n"
"_CFG_###> options\\011COREDUMP\\011# allow processes to coredump.\n"
"_CFG_###> options\\011AIO\\011\\011# POSIX asynchronous I/O\n"
"_CFG_###> options\\011MQUEUE\\011\\011# POSIX message queues\n"
"_CFG_###> \n"
"_CFG_###> #\n"
"_CFG_###> # Security model.\n"
"_CFG_###> #\n"
"_CFG_###> options\\011secmodel_bsd44\\011# Traditional 4.4BSD security model\n"
"_CFG_###> \n"
"_CFG_###> #\n"
"_CFG_###> # Scheduling algorithm\n"
"_CFG_###> #\n"
"_CFG_###> options\\011SCHED_4BSD\n"
"_CFG_###> \n"
"_CFG_###> pseudo-device\\011cpuctl\n"
"_CFG_###> \n"
"_CFG_###> #\n"
"_CFG_###> # Kernel entropy pool and random-number generator pseudodevice.\n"
"_CFG_###> # The pseudodevice might stop being \"std\" when the two are torn\n"
"_CFG_###> # apart some day but the entropy pool itself never will (they are\n"
"_CFG_###> # presently implemented in the same source file)\n"
"_CFG_###> #\n"
"_CFG_###> pseudo-device\\011rnd\n"
"_CFG_### (end include \"conf/std\")\n"
#endif /* INCLUDE_CONFIG_FILE */
;
#endif /* INCLUDE_CONFIG_FILE || INCLUDE_JUST_CONFIG */
#endif /* CONFIG_FILE */
